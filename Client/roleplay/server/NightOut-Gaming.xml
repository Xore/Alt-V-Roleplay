<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NightOut-Gaming</name>
    </assembly>
    <members>
        <member name="T:Altv_Roleplay.EntityStreamer.Blip">
            <summary>
            Blip class that stores all data related to a single blip.
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.Blip.Name">
            <summary>
            The text to display on the blip in the map menu
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.Blip.Sprite">
            <summary>
            ID of the sprite to use, can be found on the ALTV wiki
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.Blip.Color">
            <summary>
            Blip Color code, can also be found on the ALTV wiki
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.Blip.Scale">
            <summary>
            Scale of the blip, 1 is regular size.
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.Blip.ShortRange">
            <summary>
            Whether this blip can be seen on the minimap from anywhere on the map, or only when close to it(it will always show on the main map).
            </summary>
        </member>
        <member name="M:Altv_Roleplay.EntityStreamer.Blip.Delete">
            <summary>
            Destroy this blip.
            </summary>
        </member>
        <member name="M:Altv_Roleplay.EntityStreamer.BlipStreamer.CreateStaticBlip(System.String,System.Int32,System.Single,System.Boolean,System.Int32,System.Numerics.Vector3,System.Int32,System.UInt32)">
            <summary>
            Create static blip without any range limit
            </summary>
            <param name="name"></param>
            <param name="color"></param>
            <param name="scale"></param>
            <param name="shortRange"></param>
            <param name="spriteId"></param>
            <param name="position"></param>
            <param name="dimension"></param>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Altv_Roleplay.EntityStreamer.BlipStreamer.CreateDynamicBlip(System.String,System.Int32,System.Single,System.Boolean,System.Int32,System.Numerics.Vector3,System.Int32,System.UInt32)">
            <summary>
            Create Dynamic Blip.
            </summary>
            <param name="name"></param>
            <param name="color"></param>
            <param name="scale"></param>
            <param name="shortRange"></param>
            <param name="spriteId"></param>
            <param name="position"></param>
            <param name="dimension"></param>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:Altv_Roleplay.EntityStreamer.BlipStreamer.DestroyBlip(Altv_Roleplay.EntityStreamer.Blip)">
            <summary>
            Destroy a dynamic blip
            </summary>
            <param name="blip">The blip to destroy</param>
        </member>
        <member name="T:Altv_Roleplay.EntityStreamer.HelpText">
            <summary>
            HelpText class that stores all data
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.HelpText.Text">
            <summary>
            Set/get the HelpText text.
            </summary>
        </member>
        <member name="M:Altv_Roleplay.EntityStreamer.HelpText.Delete">
            <summary>
            Destroy this textlabel.
            </summary>
        </member>
        <member name="M:Altv_Roleplay.EntityStreamer.HelpTextStreamer.Create(System.String,System.Numerics.Vector3,System.Int32,System.UInt32)">
            <summary>
            Create a new HelpText.
            </summary>
            <param name="text">The text to be displayed.</param>
            <returns>The newly created dynamic textlabel.</returns>
        </member>
        <member name="M:Altv_Roleplay.EntityStreamer.HelpTextStreamer.DeleteHelpText(System.UInt64)">
            <summary>
            Destroy HelpText by it's ID.
            </summary>
            <param name="dynamicTextLabelId">The ID of the text label.</param>
            <returns>True if successful, false otherwise.</returns>
        </member>
        <member name="M:Altv_Roleplay.EntityStreamer.HelpTextStreamer.DeleteHelpText(Altv_Roleplay.EntityStreamer.HelpText)">
            <summary>
            Destroy an HelpText.
            </summary>
            <param name="dynamicTextLabel">The text label instance to destroy.</param>
        </member>
        <member name="M:Altv_Roleplay.EntityStreamer.HelpTextStreamer.GetHelpText(System.UInt64)">
            <summary>
            Get a HelpText by it's ID.
            </summary>
            <param name="dynamicTextLabelId">The ID of the textlabel.</param>
            <returns>The dynamic textlabel or null if not found.</returns>
        </member>
        <member name="M:Altv_Roleplay.EntityStreamer.HelpTextStreamer.DeleteAllHelpText">
            <summary>
            Destroy all HelpText.
            </summary>
        </member>
        <member name="M:Altv_Roleplay.EntityStreamer.HelpTextStreamer.GetAllHelpText">
            <summary>
            Get all HelpText.
            </summary>
            <returns>A list of dynamic textlabels.</returns>
        </member>
        <member name="T:Altv_Roleplay.EntityStreamer.MarkerTypes">
            <summary>
            Marker types.
            </summary>
        </member>
        <member name="T:Altv_Roleplay.EntityStreamer.Marker">
            <summary>
            DynamicMarker class that stores all data related to a single marker.
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.Marker.Rotation">
            <summary>
            Set or get the current marker's rotation (in degrees).
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.Marker.TextureDict">
            <summary>
            Set a texture dictionary, pass null to remove.
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.Marker.TextureName">
            <summary>
            Texture name, only applicable if TextureDict is set. pass null to reset value.
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.Marker.Rotate">
            <summary>
            Whether the marker should rotate on the Y axis(heading).
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.Marker.DrawOnEnter">
            <summary>
            Whether the marker should be drawn onto the entity when they enter it.
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.Marker.FaceCamera">
            <summary>
            Whether the marker should rotate on the Y axis towards the player's camera.
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.Marker.BobUpDown">
            <summary>
            Whether the marker should bob up and down.
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.Marker.Scale">
            <summary>
            Set scale of the marker.
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.Marker.Direction">
            <summary>
            Represents a heading on each axis in which the marker should face, alternatively you can rotate each axis independently with Rotation and set Direction axis to 0.
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.Marker.MarkerType">
            <summary>
            Set or get the current marker's type(see MarkerTypes enum).
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.Marker.Color">
            <summary>
            Set marker color.
            </summary>
        </member>
        <member name="M:Altv_Roleplay.EntityStreamer.Marker.Destroy">
            <summary>
            Destroy this marker.
            </summary>
        </member>
        <member name="M:Altv_Roleplay.EntityStreamer.MarkerStreamer.Create(Altv_Roleplay.EntityStreamer.MarkerTypes,System.Numerics.Vector3,System.Numerics.Vector3,System.Nullable{System.Numerics.Vector3},System.Nullable{System.Numerics.Vector3},System.Nullable{AltV.Net.Data.Rgba},System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.Nullable{System.Boolean},System.UInt32)">
            <summary>
            Create a new dynamic marker
            </summary>
            <param name="markerType">The type of marker to spawn.</param>
            <param name="position">The position at which the marker should spawn at.</param>
            <param name="scale">The scale of the marker.</param>
            <param name="rotation">The rotation of the marker.</param>
            <param name="direction">The direction of the marker.</param>
            <param name="color">The color of the marker.</param>
            <param name="bobUpDown">Whether the marker should bob up and down.</param>
            <param name="faceCamera">Whether the marker should face the entity's camera.</param>
            <param name="rotate">Whether the marker should rotate on the Y axis only.</param>
            <param name="textureDict">An optional texture dictionary to apply to the marker.</param>
            <param name="textureName">An optional texture name to apply to the marker.</param>
            <param name="drawOnEnter">Whether it should draw the marker onto an entity that intersects with it.</param>
            <param name="dimension">The dimension of the marker</param>
            <param name="streamRange">Stream distance of the marker, default is 100.</param>
            <returns></returns>
        </member>
        <member name="M:Altv_Roleplay.EntityStreamer.MarkerStreamer.Delete(System.UInt64)">
            <summary>
            Destroy a dynamic marker by it's ID.
            </summary>
            <param name="dynamicMarkerId">The ID of the marker.</param>
            <returns>True if successful, false otherwise.</returns>
        </member>
        <member name="M:Altv_Roleplay.EntityStreamer.MarkerStreamer.Delete(Altv_Roleplay.EntityStreamer.Marker)">
            <summary>
            Destroy a dynamic marker.
            </summary>
            <param name="marker">The marker instance to destroy.</param>
        </member>
        <member name="M:Altv_Roleplay.EntityStreamer.MarkerStreamer.GetMarker(System.UInt64)">
            <summary>
            Get a dynamic marker by it's ID.
            </summary>
            <param name="dynamicMarkerId">The ID of the marker.</param>
            <returns>The dynamic marker or null if not found.</returns>
        </member>
        <member name="M:Altv_Roleplay.EntityStreamer.MarkerStreamer.DestroyAllDynamicMarkers">
            <summary>
            Destroy all created dynamic markers.
            </summary>
        </member>
        <member name="M:Altv_Roleplay.EntityStreamer.MarkerStreamer.GetAllDynamicMarkers">
            <summary>
            Get all created dynamic markers.
            </summary>
            <returns>A list of dynamic markers.</returns>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.Ped.Model">
            <summary>
            Set or get the current ped model.
            </summary>
        </member>
        <member name="M:Altv_Roleplay.EntityStreamer.PedStreamer.Create(System.String,System.Numerics.Vector3,System.Numerics.Vector3,System.Int32,System.UInt32)">
            <summary>
            Create Ped
            </summary>
        </member>
        <member name="T:Altv_Roleplay.EntityStreamer.DropShadow">
            <summary>
            Class to hold drop shadow data.
            </summary>
        </member>
        <member name="T:Altv_Roleplay.EntityStreamer.PlayerLabel">
            <summary>
            DynamicTextLabel class that stores all data related to a single textlabel
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.PlayerLabel.Scale">
            <summary>
            Set/get or get the current textlabel's scale.
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.PlayerLabel.Text">
            <summary>
            Set/get the textlabel's text.
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.PlayerLabel.Center">
            <summary>
            Set/get textlabel center, if true the textlabel will be centered.
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.PlayerLabel.Proportional">
            <summary>
            Set/get textlabel proportional.
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.PlayerLabel.Color">
            <summary>
            Set/get textlabel's color.
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.PlayerLabel.Edge">
            <summary>
            Set/get textlabel's edge color.
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.PlayerLabel.DropShadow">
            <summary>
            Set/get textlabel's drop shadow.
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.PlayerLabel.Font">
            <summary>
            Set/get textlabel's font type.
            </summary>
        </member>
        <member name="M:Altv_Roleplay.EntityStreamer.PlayerLabel.Delete">
            <summary>
            Destroy this textlabel.
            </summary>
        </member>
        <member name="M:Altv_Roleplay.EntityStreamer.TextLabelStreamer.Create(System.String,System.Numerics.Vector3,System.Int32,System.Nullable{System.Boolean},System.Nullable{AltV.Net.Data.Rgba},System.Nullable{System.Single},Altv_Roleplay.EntityStreamer.DropShadow,System.Nullable{AltV.Net.Data.Rgba},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.UInt32)">
            <summary>
            Create a new dynamic textlabel.
            </summary>
            <param name="text">The text to be displayed.</param>
            <param name="position">The position to spawn it at.</param>
            <param name="dimension">The dimension to spawn it in.</param>
            <param name="center">Center the textlabel.</param>
            <param name="color">The color of the textlabel.</param>
            <param name="scale">The scale of the textlabel.</param>
            <param name="dropShadow">The drop shadow of the textlabel.</param>
            <param name="edge">The edge color of the textlabel.</param>
            <param name="font">The font type of the textlabel.</param>
            <param name="proportional">Whether to set textlabel proportional.</param>
            <param name="streamRange">Stream range, default is 30.</param>
            <returns>The newly created dynamic textlabel.</returns>
        </member>
        <member name="M:Altv_Roleplay.EntityStreamer.TextLabelStreamer.DestroyDynamicTextLabel(System.UInt64)">
            <summary>
            Destroy a dynamic text label by it's ID.
            </summary>
            <param name="dynamicTextLabelId">The ID of the text label.</param>
            <returns>True if successful, false otherwise.</returns>
        </member>
        <member name="M:Altv_Roleplay.EntityStreamer.TextLabelStreamer.DestroyDynamicTextLabel(Altv_Roleplay.EntityStreamer.PlayerLabel)">
            <summary>
            Destroy a dynamic text label.
            </summary>
            <param name="dynamicTextLabel">The text label instance to destroy.</param>
        </member>
        <member name="M:Altv_Roleplay.EntityStreamer.TextLabelStreamer.GetDynamicTextLabel(System.UInt64)">
            <summary>
            Get a dynamic text label by it's ID.
            </summary>
            <param name="dynamicTextLabelId">The ID of the textlabel.</param>
            <returns>The dynamic textlabel or null if not found.</returns>
        </member>
        <member name="M:Altv_Roleplay.EntityStreamer.TextLabelStreamer.DestroyAllDynamicTextLabels">
            <summary>
            Destroy all created dynamic textlabels.
            </summary>
        </member>
        <member name="M:Altv_Roleplay.EntityStreamer.TextLabelStreamer.GetAllDynamicTextLabels">
            <summary>
            Get all created dynamic textlabels.
            </summary>
            <returns>A list of dynamic textlabels.</returns>
        </member>
        <member name="T:Altv_Roleplay.EntityStreamer.Prop">
            <summary>
            DynamicObject class that stores all data related to a single object
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.Prop.Rotation">
            <summary>
            Set or get the current object's rotation (in degrees).
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.Prop.Model">
            <summary>
            Set or get the current object's model.
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.Prop.LodDistance">
            <summary>
            Set or get LOD Distance of the object.
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.Prop.TextureVariation">
            <summary>
            Get or set the current texture variation, use null to reset it to default.
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.Prop.Dynamic">
            <summary>
            Get or set the object's dynamic state. Some objects can be moved around by the player when dynamic is set to true.
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.Prop.Visible">
            <summary>
            Set/get visibility state of object
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.Prop.OnFire">
            <summary>
            Set/get an object on fire, NOTE: does not work very well as of right now, fire is very small.
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.Prop.Freeze">
            <summary>
            Freeze an object into it's current position. or get it's status
            </summary>
        </member>
        <member name="P:Altv_Roleplay.EntityStreamer.Prop.LightColor">
            <summary>
            Set the light color of the object, use null to reset it to default.
            </summary>
        </member>
        <member name="M:Altv_Roleplay.EntityStreamer.PropStreamer.Create(System.String,System.Numerics.Vector3,System.Numerics.Vector3,System.Int32,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.UInt32},Altv_Roleplay.EntityStreamer.Rgb,System.Nullable{System.Boolean},System.Nullable{Altv_Roleplay.EntityStreamer.TextureVariation},System.Nullable{System.Boolean},System.UInt32)">
            <summary>
            Create a new dynamic object.
            </summary>
            <param name="model">The object model name.</param>
            <param name="position">The position to spawn the object at.</param>
            <param name="rotation">The rotation to spawn the object at(degrees).</param>
            <param name="dimension">The dimension to spawn the object in.</param>
            <param name="isDynamic">(Optional): Set object dynamic or not.</param>
            <param name="frozen">(Optional): Set object frozen.</param>
            <param name="lodDistance">(Optional): Set LOD distance.</param>
            <param name="lightColor">(Optional): set light color.</param>
            <param name="onFire">(Optional): set object on fire(DOESN'T WORK PROPERLY YET!)</param>
            <param name="textureVariation">(Optional): Set object texture variation.</param>
            <param name="visible">(Optional): Set object visibility.</param>
            <param name="streamRange">(Optional): The range that a player has to be in before the object spawns, default value is 400.</param>
            <returns>The newly created dynamic object.</returns>
        </member>
        <member name="M:Altv_Roleplay.EntityStreamer.PropStreamer.DestroyAllDynamicObjects">
            <summary>
            Destroy all created dynamic objects.
            </summary>
        </member>
        <member name="M:Altv_Roleplay.EntityStreamer.PropStreamer.GetAllProp">
            <summary>
            Get all created dynamic objects.
            </summary>
            <returns>A list of dynamic objects.</returns>
        </member>
        <member name="M:Altv_Roleplay.EntityStreamer.PropStreamer.GetClosestDynamicObject(System.Numerics.Vector3)">
            <summary>
            Get the dynamic object that's closest to a specified position.
            </summary>
            <param name="pos">The position from which to check.</param>
            <returns>The closest dynamic object to the specified position, or null if none found.</returns>
        </member>
        <member name="M:Altv_Roleplay.Model.Characters.SetCharacterFastFarm(System.Int32,System.Boolean,System.Int32)">
            <summary>
            Setzt Character für eine bestimmbare Zeit auf doppelte Aufsammelmenge
            </summary>
            <param name="charId"></param>
            <param name="isFastFarm"></param>
            <param name="fastFarmTime"></param>
        </member>
        <member name="M:Global.mGlobal.VirtualAPI.RunThreadSafe(System.Action)">
            <summary>
            Permet d'effectuer un appel API 100% Thread-Safe via le taskmanager interne de alt:V
            </summary>
            <param name="function"></param>
        </member>
    </members>
</doc>
