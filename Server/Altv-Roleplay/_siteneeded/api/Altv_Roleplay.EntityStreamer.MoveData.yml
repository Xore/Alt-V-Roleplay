### YamlMime:ManagedReference
items:
- uid: Altv_Roleplay.EntityStreamer.MoveData
  commentId: T:Altv_Roleplay.EntityStreamer.MoveData
  id: MoveData
  parent: Altv_Roleplay.EntityStreamer
  children:
  - Altv_Roleplay.EntityStreamer.MoveData.OnWrite(AltV.Net.IMValueWriter)
  - Altv_Roleplay.EntityStreamer.MoveData.Speed
  - Altv_Roleplay.EntityStreamer.MoveData.X
  - Altv_Roleplay.EntityStreamer.MoveData.Y
  - Altv_Roleplay.EntityStreamer.MoveData.Z
  langs:
  - csharp
  - vb
  name: MoveData
  nameWithType: MoveData
  fullName: Altv_Roleplay.EntityStreamer.MoveData
  type: Class
  source:
    remote:
      path: Server/Altv-Roleplay/EntityStreamer/PropManager.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: MoveData
    path: EntityStreamer/PropManager.cs
    startLine: 28
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.EntityStreamer
  syntax:
    content: 'public class MoveData : IWritable'
    content.vb: >-
      Public Class MoveData
          Implements IWritable
  inheritance:
  - System.Object
  implements:
  - AltV.Net.IWritable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Altv_Roleplay.EntityStreamer.MoveData.X
  commentId: P:Altv_Roleplay.EntityStreamer.MoveData.X
  id: X
  parent: Altv_Roleplay.EntityStreamer.MoveData
  langs:
  - csharp
  - vb
  name: X
  nameWithType: MoveData.X
  fullName: Altv_Roleplay.EntityStreamer.MoveData.X
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/EntityStreamer/PropManager.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: X
    path: EntityStreamer/PropManager.cs
    startLine: 30
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.EntityStreamer
  syntax:
    content: public float X { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property X As Single
  overload: Altv_Roleplay.EntityStreamer.MoveData.X*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Altv_Roleplay.EntityStreamer.MoveData.Y
  commentId: P:Altv_Roleplay.EntityStreamer.MoveData.Y
  id: Y
  parent: Altv_Roleplay.EntityStreamer.MoveData
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: MoveData.Y
  fullName: Altv_Roleplay.EntityStreamer.MoveData.Y
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/EntityStreamer/PropManager.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Y
    path: EntityStreamer/PropManager.cs
    startLine: 31
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.EntityStreamer
  syntax:
    content: public float Y { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Y As Single
  overload: Altv_Roleplay.EntityStreamer.MoveData.Y*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Altv_Roleplay.EntityStreamer.MoveData.Z
  commentId: P:Altv_Roleplay.EntityStreamer.MoveData.Z
  id: Z
  parent: Altv_Roleplay.EntityStreamer.MoveData
  langs:
  - csharp
  - vb
  name: Z
  nameWithType: MoveData.Z
  fullName: Altv_Roleplay.EntityStreamer.MoveData.Z
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/EntityStreamer/PropManager.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Z
    path: EntityStreamer/PropManager.cs
    startLine: 32
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.EntityStreamer
  syntax:
    content: public float Z { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Z As Single
  overload: Altv_Roleplay.EntityStreamer.MoveData.Z*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Altv_Roleplay.EntityStreamer.MoveData.Speed
  commentId: P:Altv_Roleplay.EntityStreamer.MoveData.Speed
  id: Speed
  parent: Altv_Roleplay.EntityStreamer.MoveData
  langs:
  - csharp
  - vb
  name: Speed
  nameWithType: MoveData.Speed
  fullName: Altv_Roleplay.EntityStreamer.MoveData.Speed
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/EntityStreamer/PropManager.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Speed
    path: EntityStreamer/PropManager.cs
    startLine: 33
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.EntityStreamer
  syntax:
    content: public float Speed { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Speed As Single
  overload: Altv_Roleplay.EntityStreamer.MoveData.Speed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Altv_Roleplay.EntityStreamer.MoveData.OnWrite(AltV.Net.IMValueWriter)
  commentId: M:Altv_Roleplay.EntityStreamer.MoveData.OnWrite(AltV.Net.IMValueWriter)
  id: OnWrite(AltV.Net.IMValueWriter)
  parent: Altv_Roleplay.EntityStreamer.MoveData
  langs:
  - csharp
  - vb
  name: OnWrite(IMValueWriter)
  nameWithType: MoveData.OnWrite(IMValueWriter)
  fullName: Altv_Roleplay.EntityStreamer.MoveData.OnWrite(AltV.Net.IMValueWriter)
  type: Method
  source:
    remote:
      path: Server/Altv-Roleplay/EntityStreamer/PropManager.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: OnWrite
    path: EntityStreamer/PropManager.cs
    startLine: 35
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.EntityStreamer
  syntax:
    content: public void OnWrite(IMValueWriter writer)
    parameters:
    - id: writer
      type: AltV.Net.IMValueWriter
    content.vb: Public Sub OnWrite(writer As IMValueWriter)
  overload: Altv_Roleplay.EntityStreamer.MoveData.OnWrite*
  implements:
  - AltV.Net.IWritable.OnWrite(AltV.Net.IMValueWriter)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Altv_Roleplay.EntityStreamer
  commentId: N:Altv_Roleplay.EntityStreamer
  name: Altv_Roleplay.EntityStreamer
  nameWithType: Altv_Roleplay.EntityStreamer
  fullName: Altv_Roleplay.EntityStreamer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AltV.Net.IWritable
  commentId: T:AltV.Net.IWritable
  parent: AltV.Net
  isExternal: true
  name: IWritable
  nameWithType: IWritable
  fullName: AltV.Net.IWritable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AltV.Net
  commentId: N:AltV.Net
  isExternal: true
  name: AltV.Net
  nameWithType: AltV.Net
  fullName: AltV.Net
- uid: Altv_Roleplay.EntityStreamer.MoveData.X*
  commentId: Overload:Altv_Roleplay.EntityStreamer.MoveData.X
  name: X
  nameWithType: MoveData.X
  fullName: Altv_Roleplay.EntityStreamer.MoveData.X
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Altv_Roleplay.EntityStreamer.MoveData.Y*
  commentId: Overload:Altv_Roleplay.EntityStreamer.MoveData.Y
  name: Y
  nameWithType: MoveData.Y
  fullName: Altv_Roleplay.EntityStreamer.MoveData.Y
- uid: Altv_Roleplay.EntityStreamer.MoveData.Z*
  commentId: Overload:Altv_Roleplay.EntityStreamer.MoveData.Z
  name: Z
  nameWithType: MoveData.Z
  fullName: Altv_Roleplay.EntityStreamer.MoveData.Z
- uid: Altv_Roleplay.EntityStreamer.MoveData.Speed*
  commentId: Overload:Altv_Roleplay.EntityStreamer.MoveData.Speed
  name: Speed
  nameWithType: MoveData.Speed
  fullName: Altv_Roleplay.EntityStreamer.MoveData.Speed
- uid: Altv_Roleplay.EntityStreamer.MoveData.OnWrite*
  commentId: Overload:Altv_Roleplay.EntityStreamer.MoveData.OnWrite
  name: OnWrite
  nameWithType: MoveData.OnWrite
  fullName: Altv_Roleplay.EntityStreamer.MoveData.OnWrite
- uid: AltV.Net.IWritable.OnWrite(AltV.Net.IMValueWriter)
  commentId: M:AltV.Net.IWritable.OnWrite(AltV.Net.IMValueWriter)
  parent: AltV.Net.IWritable
  isExternal: true
  name: OnWrite(IMValueWriter)
  nameWithType: IWritable.OnWrite(IMValueWriter)
  fullName: AltV.Net.IWritable.OnWrite(AltV.Net.IMValueWriter)
  spec.csharp:
  - uid: AltV.Net.IWritable.OnWrite(AltV.Net.IMValueWriter)
    name: OnWrite
    nameWithType: IWritable.OnWrite
    fullName: AltV.Net.IWritable.OnWrite
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AltV.Net.IMValueWriter
    name: IMValueWriter
    nameWithType: IMValueWriter
    fullName: AltV.Net.IMValueWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: AltV.Net.IWritable.OnWrite(AltV.Net.IMValueWriter)
    name: OnWrite
    nameWithType: IWritable.OnWrite
    fullName: AltV.Net.IWritable.OnWrite
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AltV.Net.IMValueWriter
    name: IMValueWriter
    nameWithType: IMValueWriter
    fullName: AltV.Net.IMValueWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AltV.Net.IMValueWriter
  commentId: T:AltV.Net.IMValueWriter
  parent: AltV.Net
  isExternal: true
  name: IMValueWriter
  nameWithType: IMValueWriter
  fullName: AltV.Net.IMValueWriter
