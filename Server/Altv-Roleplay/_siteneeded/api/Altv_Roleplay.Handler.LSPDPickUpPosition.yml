### YamlMime:ManagedReference
items:
- uid: Altv_Roleplay.Handler.LSPDPickUpPosition
  commentId: T:Altv_Roleplay.Handler.LSPDPickUpPosition
  id: LSPDPickUpPosition
  parent: Altv_Roleplay.Handler
  children:
  - Altv_Roleplay.Handler.LSPDPickUpPosition.isPickedUp
  - Altv_Roleplay.Handler.LSPDPickUpPosition.position
  langs:
  - csharp
  - vb
  name: LSPDPickUpPosition
  nameWithType: LSPDPickUpPosition
  fullName: Altv_Roleplay.Handler.LSPDPickUpPosition
  type: Class
  source:
    remote:
      path: Server/Altv-Roleplay/Handler/RobberyHandler.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: LSPDPickUpPosition
    path: Handler/RobberyHandler.cs
    startLine: 309
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.Handler
  syntax:
    content: public class LSPDPickUpPosition
    content.vb: Public Class LSPDPickUpPosition
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Altv_Roleplay.Handler.LSPDPickUpPosition.position
  commentId: P:Altv_Roleplay.Handler.LSPDPickUpPosition.position
  id: position
  parent: Altv_Roleplay.Handler.LSPDPickUpPosition
  langs:
  - csharp
  - vb
  name: position
  nameWithType: LSPDPickUpPosition.position
  fullName: Altv_Roleplay.Handler.LSPDPickUpPosition.position
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/Handler/RobberyHandler.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: position
    path: Handler/RobberyHandler.cs
    startLine: 311
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.Handler
  syntax:
    content: public Position position { get; set; }
    parameters: []
    return:
      type: AltV.Net.Data.Position
    content.vb: Public Property position As Position
  overload: Altv_Roleplay.Handler.LSPDPickUpPosition.position*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Altv_Roleplay.Handler.LSPDPickUpPosition.isPickedUp
  commentId: P:Altv_Roleplay.Handler.LSPDPickUpPosition.isPickedUp
  id: isPickedUp
  parent: Altv_Roleplay.Handler.LSPDPickUpPosition
  langs:
  - csharp
  - vb
  name: isPickedUp
  nameWithType: LSPDPickUpPosition.isPickedUp
  fullName: Altv_Roleplay.Handler.LSPDPickUpPosition.isPickedUp
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/Handler/RobberyHandler.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: isPickedUp
    path: Handler/RobberyHandler.cs
    startLine: 312
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.Handler
  syntax:
    content: public bool isPickedUp { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property isPickedUp As Boolean
  overload: Altv_Roleplay.Handler.LSPDPickUpPosition.isPickedUp*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Altv_Roleplay.Handler
  commentId: N:Altv_Roleplay.Handler
  name: Altv_Roleplay.Handler
  nameWithType: Altv_Roleplay.Handler
  fullName: Altv_Roleplay.Handler
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Altv_Roleplay.Handler.LSPDPickUpPosition.position*
  commentId: Overload:Altv_Roleplay.Handler.LSPDPickUpPosition.position
  name: position
  nameWithType: LSPDPickUpPosition.position
  fullName: Altv_Roleplay.Handler.LSPDPickUpPosition.position
- uid: AltV.Net.Data.Position
  commentId: T:AltV.Net.Data.Position
  parent: AltV.Net.Data
  isExternal: true
  name: Position
  nameWithType: Position
  fullName: AltV.Net.Data.Position
- uid: AltV.Net.Data
  commentId: N:AltV.Net.Data
  isExternal: true
  name: AltV.Net.Data
  nameWithType: AltV.Net.Data
  fullName: AltV.Net.Data
- uid: Altv_Roleplay.Handler.LSPDPickUpPosition.isPickedUp*
  commentId: Overload:Altv_Roleplay.Handler.LSPDPickUpPosition.isPickedUp
  name: isPickedUp
  nameWithType: LSPDPickUpPosition.isPickedUp
  fullName: Altv_Roleplay.Handler.LSPDPickUpPosition.isPickedUp
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
