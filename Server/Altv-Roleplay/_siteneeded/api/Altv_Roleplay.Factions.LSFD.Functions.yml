### YamlMime:ManagedReference
items:
- uid: Altv_Roleplay.Factions.LSFD.Functions
  commentId: T:Altv_Roleplay.Factions.LSFD.Functions
  id: Functions
  parent: Altv_Roleplay.Factions.LSFD
  children:
  - Altv_Roleplay.Factions.LSFD.Functions.HealPlayer(AltV.Net.Elements.Entities.IPlayer,AltV.Net.Elements.Entities.IPlayer)
  - Altv_Roleplay.Factions.LSFD.Functions.RevivePlayer(AltV.Net.Elements.Entities.IPlayer,AltV.Net.Elements.Entities.IPlayer)
  langs:
  - csharp
  - vb
  name: Functions
  nameWithType: Functions
  fullName: Altv_Roleplay.Factions.LSFD.Functions
  type: Class
  source:
    remote:
      path: Server/Altv-Roleplay/Factions/LSFD/Functions.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Functions
    path: Factions/LSFD/Functions.cs
    startLine: 13
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.Factions.LSFD
  syntax:
    content: 'public class Functions : IScript'
    content.vb: >-
      Public Class Functions
          Implements IScript
  inheritance:
  - System.Object
  implements:
  - AltV.Net.IScript
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Altv_Roleplay.Factions.LSFD.Functions.RevivePlayer(AltV.Net.Elements.Entities.IPlayer,AltV.Net.Elements.Entities.IPlayer)
  commentId: M:Altv_Roleplay.Factions.LSFD.Functions.RevivePlayer(AltV.Net.Elements.Entities.IPlayer,AltV.Net.Elements.Entities.IPlayer)
  id: RevivePlayer(AltV.Net.Elements.Entities.IPlayer,AltV.Net.Elements.Entities.IPlayer)
  parent: Altv_Roleplay.Factions.LSFD.Functions
  langs:
  - csharp
  - vb
  name: RevivePlayer(IPlayer, IPlayer)
  nameWithType: Functions.RevivePlayer(IPlayer, IPlayer)
  fullName: Altv_Roleplay.Factions.LSFD.Functions.RevivePlayer(AltV.Net.Elements.Entities.IPlayer, AltV.Net.Elements.Entities.IPlayer)
  type: Method
  source:
    remote:
      path: Server/Altv-Roleplay/Factions/LSFD/Functions.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: RevivePlayer
    path: Factions/LSFD/Functions.cs
    startLine: 15
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.Factions.LSFD
  syntax:
    content: >-
      [AsyncClientEvent("Server:Raycast:RevivePlayer")]

      public async void RevivePlayer(IPlayer player, IPlayer targetPlayer)
    parameters:
    - id: player
      type: AltV.Net.Elements.Entities.IPlayer
    - id: targetPlayer
      type: AltV.Net.Elements.Entities.IPlayer
    content.vb: >-
      <AsyncClientEvent("Server:Raycast:RevivePlayer")>

      Public Sub RevivePlayer(player As IPlayer, targetPlayer As IPlayer)
  overload: Altv_Roleplay.Factions.LSFD.Functions.RevivePlayer*
  attributes:
  - type: AltV.Net.Async.AsyncClientEventAttribute
    ctor: AltV.Net.Async.AsyncClientEventAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Server:Raycast:RevivePlayer
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: Altv_Roleplay.Factions.LSFD.Functions.HealPlayer(AltV.Net.Elements.Entities.IPlayer,AltV.Net.Elements.Entities.IPlayer)
  commentId: M:Altv_Roleplay.Factions.LSFD.Functions.HealPlayer(AltV.Net.Elements.Entities.IPlayer,AltV.Net.Elements.Entities.IPlayer)
  id: HealPlayer(AltV.Net.Elements.Entities.IPlayer,AltV.Net.Elements.Entities.IPlayer)
  parent: Altv_Roleplay.Factions.LSFD.Functions
  langs:
  - csharp
  - vb
  name: HealPlayer(IPlayer, IPlayer)
  nameWithType: Functions.HealPlayer(IPlayer, IPlayer)
  fullName: Altv_Roleplay.Factions.LSFD.Functions.HealPlayer(AltV.Net.Elements.Entities.IPlayer, AltV.Net.Elements.Entities.IPlayer)
  type: Method
  source:
    remote:
      path: Server/Altv-Roleplay/Factions/LSFD/Functions.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: HealPlayer
    path: Factions/LSFD/Functions.cs
    startLine: 52
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.Factions.LSFD
  syntax:
    content: >-
      [AsyncClientEvent("Server:Raycast:healPlayer")]

      public async void HealPlayer(IPlayer player, IPlayer targetPlayer)
    parameters:
    - id: player
      type: AltV.Net.Elements.Entities.IPlayer
    - id: targetPlayer
      type: AltV.Net.Elements.Entities.IPlayer
    content.vb: >-
      <AsyncClientEvent("Server:Raycast:healPlayer")>

      Public Sub HealPlayer(player As IPlayer, targetPlayer As IPlayer)
  overload: Altv_Roleplay.Factions.LSFD.Functions.HealPlayer*
  attributes:
  - type: AltV.Net.Async.AsyncClientEventAttribute
    ctor: AltV.Net.Async.AsyncClientEventAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Server:Raycast:healPlayer
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
references:
- uid: Altv_Roleplay.Factions.LSFD
  commentId: N:Altv_Roleplay.Factions.LSFD
  name: Altv_Roleplay.Factions.LSFD
  nameWithType: Altv_Roleplay.Factions.LSFD
  fullName: Altv_Roleplay.Factions.LSFD
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AltV.Net.IScript
  commentId: T:AltV.Net.IScript
  parent: AltV.Net
  isExternal: true
  name: IScript
  nameWithType: IScript
  fullName: AltV.Net.IScript
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AltV.Net
  commentId: N:AltV.Net
  isExternal: true
  name: AltV.Net
  nameWithType: AltV.Net
  fullName: AltV.Net
- uid: Altv_Roleplay.Factions.LSFD.Functions.RevivePlayer*
  commentId: Overload:Altv_Roleplay.Factions.LSFD.Functions.RevivePlayer
  name: RevivePlayer
  nameWithType: Functions.RevivePlayer
  fullName: Altv_Roleplay.Factions.LSFD.Functions.RevivePlayer
- uid: AltV.Net.Elements.Entities.IPlayer
  commentId: T:AltV.Net.Elements.Entities.IPlayer
  parent: AltV.Net.Elements.Entities
  isExternal: true
  name: IPlayer
  nameWithType: IPlayer
  fullName: AltV.Net.Elements.Entities.IPlayer
- uid: AltV.Net.Elements.Entities
  commentId: N:AltV.Net.Elements.Entities
  isExternal: true
  name: AltV.Net.Elements.Entities
  nameWithType: AltV.Net.Elements.Entities
  fullName: AltV.Net.Elements.Entities
- uid: Altv_Roleplay.Factions.LSFD.Functions.HealPlayer*
  commentId: Overload:Altv_Roleplay.Factions.LSFD.Functions.HealPlayer
  name: HealPlayer
  nameWithType: Functions.HealPlayer
  fullName: Altv_Roleplay.Factions.LSFD.Functions.HealPlayer
