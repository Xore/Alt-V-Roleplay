### YamlMime:ManagedReference
items:
- uid: Altv_Roleplay.models.gtaContext
  commentId: T:Altv_Roleplay.models.gtaContext
  id: gtaContext
  parent: Altv_Roleplay.models
  children:
  - Altv_Roleplay.models.gtaContext.#ctor
  - Altv_Roleplay.models.gtaContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Altv_Roleplay.models.gtaContext})
  - Altv_Roleplay.models.gtaContext.Accounts
  - Altv_Roleplay.models.gtaContext.AccountsCharacters
  - Altv_Roleplay.models.gtaContext.Characters_Bank
  - Altv_Roleplay.models.gtaContext.Characters_Inventory
  - Altv_Roleplay.models.gtaContext.Characters_LastPos
  - Altv_Roleplay.models.gtaContext.Characters_Licenses
  - Altv_Roleplay.models.gtaContext.Characters_Minijobs
  - Altv_Roleplay.models.gtaContext.Characters_Permissions
  - Altv_Roleplay.models.gtaContext.Characters_Skin
  - Altv_Roleplay.models.gtaContext.Characters_Tablet_Apps
  - Altv_Roleplay.models.gtaContext.Characters_Tattoos
  - Altv_Roleplay.models.gtaContext.Characters_Wanteds
  - Altv_Roleplay.models.gtaContext.CharactersOwnedClothes
  - Altv_Roleplay.models.gtaContext.CharactersPhoneChatMessages
  - Altv_Roleplay.models.gtaContext.CharactersPhoneChats
  - Altv_Roleplay.models.gtaContext.CharactersPhoneContacts
  - Altv_Roleplay.models.gtaContext.CharactersPhoneVerlauf
  - Altv_Roleplay.models.gtaContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  - Altv_Roleplay.models.gtaContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  - Altv_Roleplay.models.gtaContext.Server_All_Vehicles
  - Altv_Roleplay.models.gtaContext.Server_Animations
  - Altv_Roleplay.models.gtaContext.Server_ATM
  - Altv_Roleplay.models.gtaContext.Server_Bank_Paper
  - Altv_Roleplay.models.gtaContext.Server_Banks
  - Altv_Roleplay.models.gtaContext.Server_Barbers
  - Altv_Roleplay.models.gtaContext.Server_Blips
  - Altv_Roleplay.models.gtaContext.Server_Clothes_Shops
  - Altv_Roleplay.models.gtaContext.Server_Clothes_Shops_Items
  - Altv_Roleplay.models.gtaContext.Server_Clothes_Storages
  - Altv_Roleplay.models.gtaContext.Server_Company_Members
  - Altv_Roleplay.models.gtaContext.Server_Companys
  - Altv_Roleplay.models.gtaContext.Server_Doors
  - Altv_Roleplay.models.gtaContext.Server_Dropped_Items
  - Altv_Roleplay.models.gtaContext.Server_Faction_Dispatch
  - Altv_Roleplay.models.gtaContext.Server_Faction_Members
  - Altv_Roleplay.models.gtaContext.Server_Faction_Positions
  - Altv_Roleplay.models.gtaContext.Server_Faction_Ranks
  - Altv_Roleplay.models.gtaContext.Server_Faction_Storage_Items
  - Altv_Roleplay.models.gtaContext.Server_Factions
  - Altv_Roleplay.models.gtaContext.Server_Farming_Producer
  - Altv_Roleplay.models.gtaContext.Server_Farming_Spots
  - Altv_Roleplay.models.gtaContext.Server_Fuel_Spots
  - Altv_Roleplay.models.gtaContext.Server_Fuel_Stations
  - Altv_Roleplay.models.gtaContext.Server_Gang_Members
  - Altv_Roleplay.models.gtaContext.Server_Gang_Positions
  - Altv_Roleplay.models.gtaContext.Server_Gang_Ranks
  - Altv_Roleplay.models.gtaContext.Server_Gang_Storage_Items
  - Altv_Roleplay.models.gtaContext.Server_Gangs
  - Altv_Roleplay.models.gtaContext.Server_Garage_Slots
  - Altv_Roleplay.models.gtaContext.Server_Garages
  - Altv_Roleplay.models.gtaContext.Server_Hotels
  - Altv_Roleplay.models.gtaContext.Server_Hotels_Apartments
  - Altv_Roleplay.models.gtaContext.Server_Hotels_Storages
  - Altv_Roleplay.models.gtaContext.Server_Houses
  - Altv_Roleplay.models.gtaContext.Server_Houses_Interiors
  - Altv_Roleplay.models.gtaContext.Server_Houses_Renters
  - Altv_Roleplay.models.gtaContext.Server_Houses_Storages
  - Altv_Roleplay.models.gtaContext.Server_IdentifiedVehicles
  - Altv_Roleplay.models.gtaContext.Server_Items
  - Altv_Roleplay.models.gtaContext.Server_Jobs
  - Altv_Roleplay.models.gtaContext.Server_Licenses
  - Altv_Roleplay.models.gtaContext.Server_Markers
  - Altv_Roleplay.models.gtaContext.Server_Minijob_Busdriver_Routes
  - Altv_Roleplay.models.gtaContext.Server_Minijob_Busdriver_Spots
  - Altv_Roleplay.models.gtaContext.Server_Minijob_Garbage_Spots
  - Altv_Roleplay.models.gtaContext.Server_Peds
  - Altv_Roleplay.models.gtaContext.Server_Shops
  - Altv_Roleplay.models.gtaContext.Server_Shops_Items
  - Altv_Roleplay.models.gtaContext.Server_Storages
  - Altv_Roleplay.models.gtaContext.Server_Tablet_Apps
  - Altv_Roleplay.models.gtaContext.Server_Tablet_Events
  - Altv_Roleplay.models.gtaContext.Server_Tablet_Notes
  - Altv_Roleplay.models.gtaContext.Server_Tattoo_Shops
  - Altv_Roleplay.models.gtaContext.Server_Tattoos
  - Altv_Roleplay.models.gtaContext.Server_Teleports
  - Altv_Roleplay.models.gtaContext.Server_Vehicle_Items
  - Altv_Roleplay.models.gtaContext.Server_Vehicle_Shops
  - Altv_Roleplay.models.gtaContext.Server_Vehicle_Shops_Items
  - Altv_Roleplay.models.gtaContext.Server_Vehicles
  - Altv_Roleplay.models.gtaContext.Server_Vehicles_Mods
  - Altv_Roleplay.models.gtaContext.Server_Wanteds
  - Altv_Roleplay.models.gtaContext.WeedPot
  langs:
  - csharp
  - vb
  name: gtaContext
  nameWithType: gtaContext
  fullName: Altv_Roleplay.models.gtaContext
  type: Class
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: gtaContext
    path: models/gtaContext.cs
    startLine: 11
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: 'public class gtaContext : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IDisposable, IAsyncDisposable, IResettableService'
    content.vb: >-
      Public Class gtaContext
          Inherits DbContext
          Implements IInfrastructure(Of IServiceProvider), IDbContextDependencies, IDbSetCache, IDbContextPoolable, IDisposable, IAsyncDisposable, IResettableService
  inheritance:
  - System.Object
  - Microsoft.EntityFrameworkCore.DbContext
  implements:
  - Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}
  - Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies
  - Microsoft.EntityFrameworkCore.Internal.IDbSetCache
  - Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable
  - System.IDisposable
  - System.IAsyncDisposable
  - Microsoft.EntityFrameworkCore.Infrastructure.IResettableService
  inheritedMembers:
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbSetCache#GetOrAddSet(Microsoft.EntityFrameworkCore.Internal.IDbSetSource,System.Type)
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbSetCache#GetOrAddSet(Microsoft.EntityFrameworkCore.Internal.IDbSetSource,System.String,System.Type)
  - Microsoft.EntityFrameworkCore.DbContext.Set``1
  - Microsoft.EntityFrameworkCore.DbContext.Set``1(System.String)
  - Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  - Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean)
  - Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#ClearLease
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#SetLease(Microsoft.EntityFrameworkCore.Internal.DbContextLease)
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#SnapshotConfiguration
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Infrastructure#IResettableService#ResetState
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Infrastructure#IResettableService#ResetStateAsync(System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.Dispose
  - Microsoft.EntityFrameworkCore.DbContext.DisposeAsync
  - Microsoft.EntityFrameworkCore.DbContext.Entry``1({TEntity})
  - Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object)
  - Microsoft.EntityFrameworkCore.DbContext.Add``1({TEntity})
  - Microsoft.EntityFrameworkCore.DbContext.AddAsync``1({TEntity},System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.Attach``1({TEntity})
  - Microsoft.EntityFrameworkCore.DbContext.Update``1({TEntity})
  - Microsoft.EntityFrameworkCore.DbContext.Remove``1({TEntity})
  - Microsoft.EntityFrameworkCore.DbContext.Add(System.Object)
  - Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object,System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)
  - Microsoft.EntityFrameworkCore.DbContext.Update(System.Object)
  - Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object)
  - Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable{System.Object})
  - Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable{System.Object})
  - Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable{System.Object})
  - Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable{System.Object})
  - Microsoft.EntityFrameworkCore.DbContext.Find(System.Type,System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[],System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.Find``1(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[])
  - Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[],System.Threading.CancellationToken)
  - Microsoft.EntityFrameworkCore.DbContext.FromExpression``1(System.Linq.Expressions.Expression{System.Func{System.Linq.IQueryable{{TResult}}}})
  - Microsoft.EntityFrameworkCore.DbContext.Database
  - Microsoft.EntityFrameworkCore.DbContext.ChangeTracker
  - Microsoft.EntityFrameworkCore.DbContext.Model
  - Microsoft.EntityFrameworkCore.DbContext.ContextId
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#SetSource
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#EntityFinderFactory
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#QueryProvider
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#StateManager
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#ChangeDetector
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#EntityGraphAttacher
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#UpdateLogger
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#InfrastructureLogger
  - Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{System#IServiceProvider}#Instance
  - Microsoft.EntityFrameworkCore.DbContext.SavingChanges
  - Microsoft.EntityFrameworkCore.DbContext.SavedChanges
  - Microsoft.EntityFrameworkCore.DbContext.SaveChangesFailed
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Altv_Roleplay.models.gtaContext.#ctor
  commentId: M:Altv_Roleplay.models.gtaContext.#ctor
  id: '#ctor'
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: gtaContext()
  nameWithType: gtaContext.gtaContext()
  fullName: Altv_Roleplay.models.gtaContext.gtaContext()
  type: Constructor
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: .ctor
    path: models/gtaContext.cs
    startLine: 13
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public gtaContext()
    content.vb: Public Sub New
  overload: Altv_Roleplay.models.gtaContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Altv_Roleplay.models.gtaContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Altv_Roleplay.models.gtaContext})
  commentId: M:Altv_Roleplay.models.gtaContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Altv_Roleplay.models.gtaContext})
  id: '#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Altv_Roleplay.models.gtaContext})'
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: gtaContext(DbContextOptions<gtaContext>)
  nameWithType: gtaContext.gtaContext(DbContextOptions<gtaContext>)
  fullName: Altv_Roleplay.models.gtaContext.gtaContext(Microsoft.EntityFrameworkCore.DbContextOptions<Altv_Roleplay.models.gtaContext>)
  type: Constructor
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: .ctor
    path: models/gtaContext.cs
    startLine: 14
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public gtaContext(DbContextOptions<gtaContext> options)
    parameters:
    - id: options
      type: Microsoft.EntityFrameworkCore.DbContextOptions{Altv_Roleplay.models.gtaContext}
    content.vb: Public Sub New(options As DbContextOptions(Of gtaContext))
  overload: Altv_Roleplay.models.gtaContext.#ctor*
  nameWithType.vb: gtaContext.gtaContext(DbContextOptions(Of gtaContext))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Altv_Roleplay.models.gtaContext.gtaContext(Microsoft.EntityFrameworkCore.DbContextOptions(Of Altv_Roleplay.models.gtaContext))
  name.vb: gtaContext(DbContextOptions(Of gtaContext))
- uid: Altv_Roleplay.models.gtaContext.Accounts
  commentId: P:Altv_Roleplay.models.gtaContext.Accounts
  id: Accounts
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Accounts
  nameWithType: gtaContext.Accounts
  fullName: Altv_Roleplay.models.gtaContext.Accounts
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Accounts
    path: models/gtaContext.cs
    startLine: 15
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Accounts> Accounts { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Accounts}
    content.vb: Public Overridable Property Accounts As DbSet(Of Accounts)
  overload: Altv_Roleplay.models.gtaContext.Accounts*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.AccountsCharacters
  commentId: P:Altv_Roleplay.models.gtaContext.AccountsCharacters
  id: AccountsCharacters
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: AccountsCharacters
  nameWithType: gtaContext.AccountsCharacters
  fullName: Altv_Roleplay.models.gtaContext.AccountsCharacters
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: AccountsCharacters
    path: models/gtaContext.cs
    startLine: 16
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<AccountsCharacters> AccountsCharacters { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.AccountsCharacters}
    content.vb: Public Overridable Property AccountsCharacters As DbSet(Of AccountsCharacters)
  overload: Altv_Roleplay.models.gtaContext.AccountsCharacters*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Characters_Bank
  commentId: P:Altv_Roleplay.models.gtaContext.Characters_Bank
  id: Characters_Bank
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Characters_Bank
  nameWithType: gtaContext.Characters_Bank
  fullName: Altv_Roleplay.models.gtaContext.Characters_Bank
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Characters_Bank
    path: models/gtaContext.cs
    startLine: 17
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Characters_Bank> Characters_Bank { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Characters_Bank}
    content.vb: Public Overridable Property Characters_Bank As DbSet(Of Characters_Bank)
  overload: Altv_Roleplay.models.gtaContext.Characters_Bank*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Characters_Skin
  commentId: P:Altv_Roleplay.models.gtaContext.Characters_Skin
  id: Characters_Skin
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Characters_Skin
  nameWithType: gtaContext.Characters_Skin
  fullName: Altv_Roleplay.models.gtaContext.Characters_Skin
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Characters_Skin
    path: models/gtaContext.cs
    startLine: 18
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Characters_Skin> Characters_Skin { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Characters_Skin}
    content.vb: Public Overridable Property Characters_Skin As DbSet(Of Characters_Skin)
  overload: Altv_Roleplay.models.gtaContext.Characters_Skin*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Characters_LastPos
  commentId: P:Altv_Roleplay.models.gtaContext.Characters_LastPos
  id: Characters_LastPos
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Characters_LastPos
  nameWithType: gtaContext.Characters_LastPos
  fullName: Altv_Roleplay.models.gtaContext.Characters_LastPos
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Characters_LastPos
    path: models/gtaContext.cs
    startLine: 19
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Characters_LastPos> Characters_LastPos { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Characters_LastPos}
    content.vb: Public Overridable Property Characters_LastPos As DbSet(Of Characters_LastPos)
  overload: Altv_Roleplay.models.gtaContext.Characters_LastPos*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Characters_Licenses
  commentId: P:Altv_Roleplay.models.gtaContext.Characters_Licenses
  id: Characters_Licenses
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Characters_Licenses
  nameWithType: gtaContext.Characters_Licenses
  fullName: Altv_Roleplay.models.gtaContext.Characters_Licenses
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Characters_Licenses
    path: models/gtaContext.cs
    startLine: 20
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Characters_Licenses> Characters_Licenses { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Characters_Licenses}
    content.vb: Public Overridable Property Characters_Licenses As DbSet(Of Characters_Licenses)
  overload: Altv_Roleplay.models.gtaContext.Characters_Licenses*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Characters_Minijobs
  commentId: P:Altv_Roleplay.models.gtaContext.Characters_Minijobs
  id: Characters_Minijobs
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Characters_Minijobs
  nameWithType: gtaContext.Characters_Minijobs
  fullName: Altv_Roleplay.models.gtaContext.Characters_Minijobs
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Characters_Minijobs
    path: models/gtaContext.cs
    startLine: 21
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Characters_Minijobs> Characters_Minijobs { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Characters_Minijobs}
    content.vb: Public Overridable Property Characters_Minijobs As DbSet(Of Characters_Minijobs)
  overload: Altv_Roleplay.models.gtaContext.Characters_Minijobs*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Characters_Permissions
  commentId: P:Altv_Roleplay.models.gtaContext.Characters_Permissions
  id: Characters_Permissions
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Characters_Permissions
  nameWithType: gtaContext.Characters_Permissions
  fullName: Altv_Roleplay.models.gtaContext.Characters_Permissions
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Characters_Permissions
    path: models/gtaContext.cs
    startLine: 22
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Characters_Permissions> Characters_Permissions { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Characters_Permissions}
    content.vb: Public Overridable Property Characters_Permissions As DbSet(Of Characters_Permissions)
  overload: Altv_Roleplay.models.gtaContext.Characters_Permissions*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Characters_Inventory
  commentId: P:Altv_Roleplay.models.gtaContext.Characters_Inventory
  id: Characters_Inventory
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Characters_Inventory
  nameWithType: gtaContext.Characters_Inventory
  fullName: Altv_Roleplay.models.gtaContext.Characters_Inventory
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Characters_Inventory
    path: models/gtaContext.cs
    startLine: 23
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Characters_Inventory> Characters_Inventory { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Characters_Inventory}
    content.vb: Public Overridable Property Characters_Inventory As DbSet(Of Characters_Inventory)
  overload: Altv_Roleplay.models.gtaContext.Characters_Inventory*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Characters_Wanteds
  commentId: P:Altv_Roleplay.models.gtaContext.Characters_Wanteds
  id: Characters_Wanteds
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Characters_Wanteds
  nameWithType: gtaContext.Characters_Wanteds
  fullName: Altv_Roleplay.models.gtaContext.Characters_Wanteds
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Characters_Wanteds
    path: models/gtaContext.cs
    startLine: 24
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Characters_Wanteds> Characters_Wanteds { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Characters_Wanteds}
    content.vb: Public Overridable Property Characters_Wanteds As DbSet(Of Characters_Wanteds)
  overload: Altv_Roleplay.models.gtaContext.Characters_Wanteds*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Characters_Tablet_Apps
  commentId: P:Altv_Roleplay.models.gtaContext.Characters_Tablet_Apps
  id: Characters_Tablet_Apps
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Characters_Tablet_Apps
  nameWithType: gtaContext.Characters_Tablet_Apps
  fullName: Altv_Roleplay.models.gtaContext.Characters_Tablet_Apps
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Characters_Tablet_Apps
    path: models/gtaContext.cs
    startLine: 25
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Characters_Tablet_Apps> Characters_Tablet_Apps { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Characters_Tablet_Apps}
    content.vb: Public Overridable Property Characters_Tablet_Apps As DbSet(Of Characters_Tablet_Apps)
  overload: Altv_Roleplay.models.gtaContext.Characters_Tablet_Apps*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.CharactersPhoneChats
  commentId: P:Altv_Roleplay.models.gtaContext.CharactersPhoneChats
  id: CharactersPhoneChats
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: CharactersPhoneChats
  nameWithType: gtaContext.CharactersPhoneChats
  fullName: Altv_Roleplay.models.gtaContext.CharactersPhoneChats
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: CharactersPhoneChats
    path: models/gtaContext.cs
    startLine: 26
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<CharactersPhoneChats> CharactersPhoneChats { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.CharactersPhoneChats}
    content.vb: Public Overridable Property CharactersPhoneChats As DbSet(Of CharactersPhoneChats)
  overload: Altv_Roleplay.models.gtaContext.CharactersPhoneChats*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.CharactersPhoneChatMessages
  commentId: P:Altv_Roleplay.models.gtaContext.CharactersPhoneChatMessages
  id: CharactersPhoneChatMessages
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: CharactersPhoneChatMessages
  nameWithType: gtaContext.CharactersPhoneChatMessages
  fullName: Altv_Roleplay.models.gtaContext.CharactersPhoneChatMessages
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: CharactersPhoneChatMessages
    path: models/gtaContext.cs
    startLine: 27
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<CharactersPhoneChatMessages> CharactersPhoneChatMessages { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.CharactersPhoneChatMessages}
    content.vb: Public Overridable Property CharactersPhoneChatMessages As DbSet(Of CharactersPhoneChatMessages)
  overload: Altv_Roleplay.models.gtaContext.CharactersPhoneChatMessages*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.CharactersPhoneContacts
  commentId: P:Altv_Roleplay.models.gtaContext.CharactersPhoneContacts
  id: CharactersPhoneContacts
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: CharactersPhoneContacts
  nameWithType: gtaContext.CharactersPhoneContacts
  fullName: Altv_Roleplay.models.gtaContext.CharactersPhoneContacts
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: CharactersPhoneContacts
    path: models/gtaContext.cs
    startLine: 28
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<CharactersPhoneContacts> CharactersPhoneContacts { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.CharactersPhoneContacts}
    content.vb: Public Overridable Property CharactersPhoneContacts As DbSet(Of CharactersPhoneContacts)
  overload: Altv_Roleplay.models.gtaContext.CharactersPhoneContacts*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.CharactersPhoneVerlauf
  commentId: P:Altv_Roleplay.models.gtaContext.CharactersPhoneVerlauf
  id: CharactersPhoneVerlauf
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: CharactersPhoneVerlauf
  nameWithType: gtaContext.CharactersPhoneVerlauf
  fullName: Altv_Roleplay.models.gtaContext.CharactersPhoneVerlauf
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: CharactersPhoneVerlauf
    path: models/gtaContext.cs
    startLine: 29
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<CharactersPhoneVerlauf> CharactersPhoneVerlauf { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.CharactersPhoneVerlauf}
    content.vb: Public Overridable Property CharactersPhoneVerlauf As DbSet(Of CharactersPhoneVerlauf)
  overload: Altv_Roleplay.models.gtaContext.CharactersPhoneVerlauf*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.CharactersOwnedClothes
  commentId: P:Altv_Roleplay.models.gtaContext.CharactersOwnedClothes
  id: CharactersOwnedClothes
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: CharactersOwnedClothes
  nameWithType: gtaContext.CharactersOwnedClothes
  fullName: Altv_Roleplay.models.gtaContext.CharactersOwnedClothes
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: CharactersOwnedClothes
    path: models/gtaContext.cs
    startLine: 30
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<CharactersOwnedClothes> CharactersOwnedClothes { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.CharactersOwnedClothes}
    content.vb: Public Overridable Property CharactersOwnedClothes As DbSet(Of CharactersOwnedClothes)
  overload: Altv_Roleplay.models.gtaContext.CharactersOwnedClothes*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Characters_Tattoos
  commentId: P:Altv_Roleplay.models.gtaContext.Characters_Tattoos
  id: Characters_Tattoos
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Characters_Tattoos
  nameWithType: gtaContext.Characters_Tattoos
  fullName: Altv_Roleplay.models.gtaContext.Characters_Tattoos
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Characters_Tattoos
    path: models/gtaContext.cs
    startLine: 31
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Characters_Tattoos> Characters_Tattoos { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Characters_Tattoos}
    content.vb: Public Overridable Property Characters_Tattoos As DbSet(Of Characters_Tattoos)
  overload: Altv_Roleplay.models.gtaContext.Characters_Tattoos*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_All_Vehicles
  commentId: P:Altv_Roleplay.models.gtaContext.Server_All_Vehicles
  id: Server_All_Vehicles
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_All_Vehicles
  nameWithType: gtaContext.Server_All_Vehicles
  fullName: Altv_Roleplay.models.gtaContext.Server_All_Vehicles
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_All_Vehicles
    path: models/gtaContext.cs
    startLine: 32
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_All_Vehicles> Server_All_Vehicles { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_All_Vehicles}
    content.vb: Public Overridable Property Server_All_Vehicles As DbSet(Of Server_All_Vehicles)
  overload: Altv_Roleplay.models.gtaContext.Server_All_Vehicles*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Animations
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Animations
  id: Server_Animations
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Animations
  nameWithType: gtaContext.Server_Animations
  fullName: Altv_Roleplay.models.gtaContext.Server_Animations
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Animations
    path: models/gtaContext.cs
    startLine: 33
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Animations> Server_Animations { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Animations}
    content.vb: Public Overridable Property Server_Animations As DbSet(Of Server_Animations)
  overload: Altv_Roleplay.models.gtaContext.Server_Animations*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_ATM
  commentId: P:Altv_Roleplay.models.gtaContext.Server_ATM
  id: Server_ATM
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_ATM
  nameWithType: gtaContext.Server_ATM
  fullName: Altv_Roleplay.models.gtaContext.Server_ATM
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_ATM
    path: models/gtaContext.cs
    startLine: 34
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_ATM> Server_ATM { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_ATM}
    content.vb: Public Overridable Property Server_ATM As DbSet(Of Server_ATM)
  overload: Altv_Roleplay.models.gtaContext.Server_ATM*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Banks
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Banks
  id: Server_Banks
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Banks
  nameWithType: gtaContext.Server_Banks
  fullName: Altv_Roleplay.models.gtaContext.Server_Banks
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Banks
    path: models/gtaContext.cs
    startLine: 35
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Banks> Server_Banks { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Banks}
    content.vb: Public Overridable Property Server_Banks As DbSet(Of Server_Banks)
  overload: Altv_Roleplay.models.gtaContext.Server_Banks*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Bank_Paper
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Bank_Paper
  id: Server_Bank_Paper
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Bank_Paper
  nameWithType: gtaContext.Server_Bank_Paper
  fullName: Altv_Roleplay.models.gtaContext.Server_Bank_Paper
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Bank_Paper
    path: models/gtaContext.cs
    startLine: 36
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Bank_Paper> Server_Bank_Paper { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Bank_Paper}
    content.vb: Public Overridable Property Server_Bank_Paper As DbSet(Of Server_Bank_Paper)
  overload: Altv_Roleplay.models.gtaContext.Server_Bank_Paper*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Blips
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Blips
  id: Server_Blips
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Blips
  nameWithType: gtaContext.Server_Blips
  fullName: Altv_Roleplay.models.gtaContext.Server_Blips
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Blips
    path: models/gtaContext.cs
    startLine: 37
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Blips> Server_Blips { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Blips}
    content.vb: Public Overridable Property Server_Blips As DbSet(Of Server_Blips)
  overload: Altv_Roleplay.models.gtaContext.Server_Blips*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Barbers
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Barbers
  id: Server_Barbers
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Barbers
  nameWithType: gtaContext.Server_Barbers
  fullName: Altv_Roleplay.models.gtaContext.Server_Barbers
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Barbers
    path: models/gtaContext.cs
    startLine: 38
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Barbers> Server_Barbers { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Barbers}
    content.vb: Public Overridable Property Server_Barbers As DbSet(Of Server_Barbers)
  overload: Altv_Roleplay.models.gtaContext.Server_Barbers*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Companys
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Companys
  id: Server_Companys
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Companys
  nameWithType: gtaContext.Server_Companys
  fullName: Altv_Roleplay.models.gtaContext.Server_Companys
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Companys
    path: models/gtaContext.cs
    startLine: 39
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Companys> Server_Companys { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Companys}
    content.vb: Public Overridable Property Server_Companys As DbSet(Of Server_Companys)
  overload: Altv_Roleplay.models.gtaContext.Server_Companys*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Company_Members
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Company_Members
  id: Server_Company_Members
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Company_Members
  nameWithType: gtaContext.Server_Company_Members
  fullName: Altv_Roleplay.models.gtaContext.Server_Company_Members
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Company_Members
    path: models/gtaContext.cs
    startLine: 40
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Company_Members> Server_Company_Members { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Company_Members}
    content.vb: Public Overridable Property Server_Company_Members As DbSet(Of Server_Company_Members)
  overload: Altv_Roleplay.models.gtaContext.Server_Company_Members*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Clothes_Shops
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Clothes_Shops
  id: Server_Clothes_Shops
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Clothes_Shops
  nameWithType: gtaContext.Server_Clothes_Shops
  fullName: Altv_Roleplay.models.gtaContext.Server_Clothes_Shops
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Clothes_Shops
    path: models/gtaContext.cs
    startLine: 41
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Clothes_Shops> Server_Clothes_Shops { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Clothes_Shops}
    content.vb: Public Overridable Property Server_Clothes_Shops As DbSet(Of Server_Clothes_Shops)
  overload: Altv_Roleplay.models.gtaContext.Server_Clothes_Shops*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Clothes_Shops_Items
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Clothes_Shops_Items
  id: Server_Clothes_Shops_Items
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Clothes_Shops_Items
  nameWithType: gtaContext.Server_Clothes_Shops_Items
  fullName: Altv_Roleplay.models.gtaContext.Server_Clothes_Shops_Items
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Clothes_Shops_Items
    path: models/gtaContext.cs
    startLine: 42
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Clothes_Shops_Items> Server_Clothes_Shops_Items { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Clothes_Shops_Items}
    content.vb: Public Overridable Property Server_Clothes_Shops_Items As DbSet(Of Server_Clothes_Shops_Items)
  overload: Altv_Roleplay.models.gtaContext.Server_Clothes_Shops_Items*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Doors
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Doors
  id: Server_Doors
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Doors
  nameWithType: gtaContext.Server_Doors
  fullName: Altv_Roleplay.models.gtaContext.Server_Doors
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Doors
    path: models/gtaContext.cs
    startLine: 43
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Doors> Server_Doors { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Doors}
    content.vb: Public Overridable Property Server_Doors As DbSet(Of Server_Doors)
  overload: Altv_Roleplay.models.gtaContext.Server_Doors*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Factions
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Factions
  id: Server_Factions
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Factions
  nameWithType: gtaContext.Server_Factions
  fullName: Altv_Roleplay.models.gtaContext.Server_Factions
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Factions
    path: models/gtaContext.cs
    startLine: 44
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Factions> Server_Factions { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Factions}
    content.vb: Public Overridable Property Server_Factions As DbSet(Of Server_Factions)
  overload: Altv_Roleplay.models.gtaContext.Server_Factions*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Faction_Members
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Faction_Members
  id: Server_Faction_Members
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Faction_Members
  nameWithType: gtaContext.Server_Faction_Members
  fullName: Altv_Roleplay.models.gtaContext.Server_Faction_Members
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Faction_Members
    path: models/gtaContext.cs
    startLine: 45
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Faction_Members> Server_Faction_Members { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Faction_Members}
    content.vb: Public Overridable Property Server_Faction_Members As DbSet(Of Server_Faction_Members)
  overload: Altv_Roleplay.models.gtaContext.Server_Faction_Members*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Faction_Ranks
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Faction_Ranks
  id: Server_Faction_Ranks
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Faction_Ranks
  nameWithType: gtaContext.Server_Faction_Ranks
  fullName: Altv_Roleplay.models.gtaContext.Server_Faction_Ranks
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Faction_Ranks
    path: models/gtaContext.cs
    startLine: 46
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Faction_Ranks> Server_Faction_Ranks { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Faction_Ranks}
    content.vb: Public Overridable Property Server_Faction_Ranks As DbSet(Of Server_Faction_Ranks)
  overload: Altv_Roleplay.models.gtaContext.Server_Faction_Ranks*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Faction_Storage_Items
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Faction_Storage_Items
  id: Server_Faction_Storage_Items
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Faction_Storage_Items
  nameWithType: gtaContext.Server_Faction_Storage_Items
  fullName: Altv_Roleplay.models.gtaContext.Server_Faction_Storage_Items
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Faction_Storage_Items
    path: models/gtaContext.cs
    startLine: 47
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Faction_Storage_Items> Server_Faction_Storage_Items { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Faction_Storage_Items}
    content.vb: Public Overridable Property Server_Faction_Storage_Items As DbSet(Of Server_Faction_Storage_Items)
  overload: Altv_Roleplay.models.gtaContext.Server_Faction_Storage_Items*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Faction_Positions
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Faction_Positions
  id: Server_Faction_Positions
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Faction_Positions
  nameWithType: gtaContext.Server_Faction_Positions
  fullName: Altv_Roleplay.models.gtaContext.Server_Faction_Positions
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Faction_Positions
    path: models/gtaContext.cs
    startLine: 48
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Faction_Positions> Server_Faction_Positions { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Faction_Positions}
    content.vb: Public Overridable Property Server_Faction_Positions As DbSet(Of Server_Faction_Positions)
  overload: Altv_Roleplay.models.gtaContext.Server_Faction_Positions*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Gangs
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Gangs
  id: Server_Gangs
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Gangs
  nameWithType: gtaContext.Server_Gangs
  fullName: Altv_Roleplay.models.gtaContext.Server_Gangs
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Gangs
    path: models/gtaContext.cs
    startLine: 49
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Gangs> Server_Gangs { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Gangs}
    content.vb: Public Overridable Property Server_Gangs As DbSet(Of Server_Gangs)
  overload: Altv_Roleplay.models.gtaContext.Server_Gangs*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Gang_Members
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Gang_Members
  id: Server_Gang_Members
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Gang_Members
  nameWithType: gtaContext.Server_Gang_Members
  fullName: Altv_Roleplay.models.gtaContext.Server_Gang_Members
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Gang_Members
    path: models/gtaContext.cs
    startLine: 50
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Gang_Members> Server_Gang_Members { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Gang_Members}
    content.vb: Public Overridable Property Server_Gang_Members As DbSet(Of Server_Gang_Members)
  overload: Altv_Roleplay.models.gtaContext.Server_Gang_Members*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Gang_Ranks
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Gang_Ranks
  id: Server_Gang_Ranks
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Gang_Ranks
  nameWithType: gtaContext.Server_Gang_Ranks
  fullName: Altv_Roleplay.models.gtaContext.Server_Gang_Ranks
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Gang_Ranks
    path: models/gtaContext.cs
    startLine: 51
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Gang_Ranks> Server_Gang_Ranks { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Gang_Ranks}
    content.vb: Public Overridable Property Server_Gang_Ranks As DbSet(Of Server_Gang_Ranks)
  overload: Altv_Roleplay.models.gtaContext.Server_Gang_Ranks*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Gang_Storage_Items
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Gang_Storage_Items
  id: Server_Gang_Storage_Items
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Gang_Storage_Items
  nameWithType: gtaContext.Server_Gang_Storage_Items
  fullName: Altv_Roleplay.models.gtaContext.Server_Gang_Storage_Items
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Gang_Storage_Items
    path: models/gtaContext.cs
    startLine: 52
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Gang_Storage_Items> Server_Gang_Storage_Items { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Gang_Storage_Items}
    content.vb: Public Overridable Property Server_Gang_Storage_Items As DbSet(Of Server_Gang_Storage_Items)
  overload: Altv_Roleplay.models.gtaContext.Server_Gang_Storage_Items*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Gang_Positions
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Gang_Positions
  id: Server_Gang_Positions
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Gang_Positions
  nameWithType: gtaContext.Server_Gang_Positions
  fullName: Altv_Roleplay.models.gtaContext.Server_Gang_Positions
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Gang_Positions
    path: models/gtaContext.cs
    startLine: 53
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Gang_Positions> Server_Gang_Positions { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Gang_Positions}
    content.vb: Public Overridable Property Server_Gang_Positions As DbSet(Of Server_Gang_Positions)
  overload: Altv_Roleplay.models.gtaContext.Server_Gang_Positions*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Farming_Producer
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Farming_Producer
  id: Server_Farming_Producer
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Farming_Producer
  nameWithType: gtaContext.Server_Farming_Producer
  fullName: Altv_Roleplay.models.gtaContext.Server_Farming_Producer
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Farming_Producer
    path: models/gtaContext.cs
    startLine: 54
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Farming_Producer> Server_Farming_Producer { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Farming_Producer}
    content.vb: Public Overridable Property Server_Farming_Producer As DbSet(Of Server_Farming_Producer)
  overload: Altv_Roleplay.models.gtaContext.Server_Farming_Producer*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Farming_Spots
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Farming_Spots
  id: Server_Farming_Spots
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Farming_Spots
  nameWithType: gtaContext.Server_Farming_Spots
  fullName: Altv_Roleplay.models.gtaContext.Server_Farming_Spots
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Farming_Spots
    path: models/gtaContext.cs
    startLine: 55
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Farming_Spots> Server_Farming_Spots { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Farming_Spots}
    content.vb: Public Overridable Property Server_Farming_Spots As DbSet(Of Server_Farming_Spots)
  overload: Altv_Roleplay.models.gtaContext.Server_Farming_Spots*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Fuel_Stations
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Fuel_Stations
  id: Server_Fuel_Stations
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Fuel_Stations
  nameWithType: gtaContext.Server_Fuel_Stations
  fullName: Altv_Roleplay.models.gtaContext.Server_Fuel_Stations
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Fuel_Stations
    path: models/gtaContext.cs
    startLine: 56
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Fuel_Stations> Server_Fuel_Stations { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Fuel_Stations}
    content.vb: Public Overridable Property Server_Fuel_Stations As DbSet(Of Server_Fuel_Stations)
  overload: Altv_Roleplay.models.gtaContext.Server_Fuel_Stations*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Fuel_Spots
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Fuel_Spots
  id: Server_Fuel_Spots
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Fuel_Spots
  nameWithType: gtaContext.Server_Fuel_Spots
  fullName: Altv_Roleplay.models.gtaContext.Server_Fuel_Spots
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Fuel_Spots
    path: models/gtaContext.cs
    startLine: 57
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Fuel_Spots> Server_Fuel_Spots { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Fuel_Spots}
    content.vb: Public Overridable Property Server_Fuel_Spots As DbSet(Of Server_Fuel_Spots)
  overload: Altv_Roleplay.models.gtaContext.Server_Fuel_Spots*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Garages
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Garages
  id: Server_Garages
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Garages
  nameWithType: gtaContext.Server_Garages
  fullName: Altv_Roleplay.models.gtaContext.Server_Garages
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Garages
    path: models/gtaContext.cs
    startLine: 58
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Garages> Server_Garages { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Garages}
    content.vb: Public Overridable Property Server_Garages As DbSet(Of Server_Garages)
  overload: Altv_Roleplay.models.gtaContext.Server_Garages*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Garage_Slots
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Garage_Slots
  id: Server_Garage_Slots
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Garage_Slots
  nameWithType: gtaContext.Server_Garage_Slots
  fullName: Altv_Roleplay.models.gtaContext.Server_Garage_Slots
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Garage_Slots
    path: models/gtaContext.cs
    startLine: 59
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Garage_Slots> Server_Garage_Slots { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Garage_Slots}
    content.vb: Public Overridable Property Server_Garage_Slots As DbSet(Of Server_Garage_Slots)
  overload: Altv_Roleplay.models.gtaContext.Server_Garage_Slots*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Hotels
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Hotels
  id: Server_Hotels
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Hotels
  nameWithType: gtaContext.Server_Hotels
  fullName: Altv_Roleplay.models.gtaContext.Server_Hotels
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Hotels
    path: models/gtaContext.cs
    startLine: 60
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Hotels> Server_Hotels { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Hotels}
    content.vb: Public Overridable Property Server_Hotels As DbSet(Of Server_Hotels)
  overload: Altv_Roleplay.models.gtaContext.Server_Hotels*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Hotels_Apartments
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Hotels_Apartments
  id: Server_Hotels_Apartments
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Hotels_Apartments
  nameWithType: gtaContext.Server_Hotels_Apartments
  fullName: Altv_Roleplay.models.gtaContext.Server_Hotels_Apartments
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Hotels_Apartments
    path: models/gtaContext.cs
    startLine: 61
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Hotels_Apartments> Server_Hotels_Apartments { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Hotels_Apartments}
    content.vb: Public Overridable Property Server_Hotels_Apartments As DbSet(Of Server_Hotels_Apartments)
  overload: Altv_Roleplay.models.gtaContext.Server_Hotels_Apartments*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Hotels_Storages
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Hotels_Storages
  id: Server_Hotels_Storages
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Hotels_Storages
  nameWithType: gtaContext.Server_Hotels_Storages
  fullName: Altv_Roleplay.models.gtaContext.Server_Hotels_Storages
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Hotels_Storages
    path: models/gtaContext.cs
    startLine: 62
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Hotels_Storage> Server_Hotels_Storages { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Hotels_Storage}
    content.vb: Public Overridable Property Server_Hotels_Storages As DbSet(Of Server_Hotels_Storage)
  overload: Altv_Roleplay.models.gtaContext.Server_Hotels_Storages*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Houses_Interiors
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Houses_Interiors
  id: Server_Houses_Interiors
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Houses_Interiors
  nameWithType: gtaContext.Server_Houses_Interiors
  fullName: Altv_Roleplay.models.gtaContext.Server_Houses_Interiors
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Houses_Interiors
    path: models/gtaContext.cs
    startLine: 63
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Houses_Interiors> Server_Houses_Interiors { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Houses_Interiors}
    content.vb: Public Overridable Property Server_Houses_Interiors As DbSet(Of Server_Houses_Interiors)
  overload: Altv_Roleplay.models.gtaContext.Server_Houses_Interiors*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Houses_Storages
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Houses_Storages
  id: Server_Houses_Storages
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Houses_Storages
  nameWithType: gtaContext.Server_Houses_Storages
  fullName: Altv_Roleplay.models.gtaContext.Server_Houses_Storages
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Houses_Storages
    path: models/gtaContext.cs
    startLine: 64
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Houses_Storage> Server_Houses_Storages { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Houses_Storage}
    content.vb: Public Overridable Property Server_Houses_Storages As DbSet(Of Server_Houses_Storage)
  overload: Altv_Roleplay.models.gtaContext.Server_Houses_Storages*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Houses_Renters
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Houses_Renters
  id: Server_Houses_Renters
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Houses_Renters
  nameWithType: gtaContext.Server_Houses_Renters
  fullName: Altv_Roleplay.models.gtaContext.Server_Houses_Renters
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Houses_Renters
    path: models/gtaContext.cs
    startLine: 65
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Houses_Renter> Server_Houses_Renters { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Houses_Renter}
    content.vb: Public Overridable Property Server_Houses_Renters As DbSet(Of Server_Houses_Renter)
  overload: Altv_Roleplay.models.gtaContext.Server_Houses_Renters*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Houses
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Houses
  id: Server_Houses
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Houses
  nameWithType: gtaContext.Server_Houses
  fullName: Altv_Roleplay.models.gtaContext.Server_Houses
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Houses
    path: models/gtaContext.cs
    startLine: 66
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Houses> Server_Houses { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Houses}
    content.vb: Public Overridable Property Server_Houses As DbSet(Of Server_Houses)
  overload: Altv_Roleplay.models.gtaContext.Server_Houses*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Items
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Items
  id: Server_Items
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Items
  nameWithType: gtaContext.Server_Items
  fullName: Altv_Roleplay.models.gtaContext.Server_Items
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Items
    path: models/gtaContext.cs
    startLine: 67
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Items> Server_Items { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Items}
    content.vb: Public Overridable Property Server_Items As DbSet(Of Server_Items)
  overload: Altv_Roleplay.models.gtaContext.Server_Items*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Jobs
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Jobs
  id: Server_Jobs
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Jobs
  nameWithType: gtaContext.Server_Jobs
  fullName: Altv_Roleplay.models.gtaContext.Server_Jobs
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Jobs
    path: models/gtaContext.cs
    startLine: 68
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Jobs> Server_Jobs { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Jobs}
    content.vb: Public Overridable Property Server_Jobs As DbSet(Of Server_Jobs)
  overload: Altv_Roleplay.models.gtaContext.Server_Jobs*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Licenses
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Licenses
  id: Server_Licenses
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Licenses
  nameWithType: gtaContext.Server_Licenses
  fullName: Altv_Roleplay.models.gtaContext.Server_Licenses
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Licenses
    path: models/gtaContext.cs
    startLine: 69
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Licenses> Server_Licenses { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Licenses}
    content.vb: Public Overridable Property Server_Licenses As DbSet(Of Server_Licenses)
  overload: Altv_Roleplay.models.gtaContext.Server_Licenses*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Markers
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Markers
  id: Server_Markers
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Markers
  nameWithType: gtaContext.Server_Markers
  fullName: Altv_Roleplay.models.gtaContext.Server_Markers
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Markers
    path: models/gtaContext.cs
    startLine: 70
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Markers> Server_Markers { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Markers}
    content.vb: Public Overridable Property Server_Markers As DbSet(Of Server_Markers)
  overload: Altv_Roleplay.models.gtaContext.Server_Markers*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Minijob_Busdriver_Routes
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Minijob_Busdriver_Routes
  id: Server_Minijob_Busdriver_Routes
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Minijob_Busdriver_Routes
  nameWithType: gtaContext.Server_Minijob_Busdriver_Routes
  fullName: Altv_Roleplay.models.gtaContext.Server_Minijob_Busdriver_Routes
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Minijob_Busdriver_Routes
    path: models/gtaContext.cs
    startLine: 71
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Minijob_Busdriver_Routes> Server_Minijob_Busdriver_Routes { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Minijob_Busdriver_Routes}
    content.vb: Public Overridable Property Server_Minijob_Busdriver_Routes As DbSet(Of Server_Minijob_Busdriver_Routes)
  overload: Altv_Roleplay.models.gtaContext.Server_Minijob_Busdriver_Routes*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Minijob_Busdriver_Spots
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Minijob_Busdriver_Spots
  id: Server_Minijob_Busdriver_Spots
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Minijob_Busdriver_Spots
  nameWithType: gtaContext.Server_Minijob_Busdriver_Spots
  fullName: Altv_Roleplay.models.gtaContext.Server_Minijob_Busdriver_Spots
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Minijob_Busdriver_Spots
    path: models/gtaContext.cs
    startLine: 72
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Minijob_Busdriver_Spots> Server_Minijob_Busdriver_Spots { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Minijob_Busdriver_Spots}
    content.vb: Public Overridable Property Server_Minijob_Busdriver_Spots As DbSet(Of Server_Minijob_Busdriver_Spots)
  overload: Altv_Roleplay.models.gtaContext.Server_Minijob_Busdriver_Spots*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Minijob_Garbage_Spots
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Minijob_Garbage_Spots
  id: Server_Minijob_Garbage_Spots
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Minijob_Garbage_Spots
  nameWithType: gtaContext.Server_Minijob_Garbage_Spots
  fullName: Altv_Roleplay.models.gtaContext.Server_Minijob_Garbage_Spots
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Minijob_Garbage_Spots
    path: models/gtaContext.cs
    startLine: 73
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Minijob_Garbage_Spots> Server_Minijob_Garbage_Spots { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Minijob_Garbage_Spots}
    content.vb: Public Overridable Property Server_Minijob_Garbage_Spots As DbSet(Of Server_Minijob_Garbage_Spots)
  overload: Altv_Roleplay.models.gtaContext.Server_Minijob_Garbage_Spots*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Peds
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Peds
  id: Server_Peds
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Peds
  nameWithType: gtaContext.Server_Peds
  fullName: Altv_Roleplay.models.gtaContext.Server_Peds
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Peds
    path: models/gtaContext.cs
    startLine: 74
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Peds> Server_Peds { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Peds}
    content.vb: Public Overridable Property Server_Peds As DbSet(Of Server_Peds)
  overload: Altv_Roleplay.models.gtaContext.Server_Peds*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Shops
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Shops
  id: Server_Shops
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Shops
  nameWithType: gtaContext.Server_Shops
  fullName: Altv_Roleplay.models.gtaContext.Server_Shops
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Shops
    path: models/gtaContext.cs
    startLine: 75
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Shops> Server_Shops { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Shops}
    content.vb: Public Overridable Property Server_Shops As DbSet(Of Server_Shops)
  overload: Altv_Roleplay.models.gtaContext.Server_Shops*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Shops_Items
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Shops_Items
  id: Server_Shops_Items
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Shops_Items
  nameWithType: gtaContext.Server_Shops_Items
  fullName: Altv_Roleplay.models.gtaContext.Server_Shops_Items
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Shops_Items
    path: models/gtaContext.cs
    startLine: 76
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Shops_Items> Server_Shops_Items { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Shops_Items}
    content.vb: Public Overridable Property Server_Shops_Items As DbSet(Of Server_Shops_Items)
  overload: Altv_Roleplay.models.gtaContext.Server_Shops_Items*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Tablet_Apps
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Tablet_Apps
  id: Server_Tablet_Apps
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Tablet_Apps
  nameWithType: gtaContext.Server_Tablet_Apps
  fullName: Altv_Roleplay.models.gtaContext.Server_Tablet_Apps
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Tablet_Apps
    path: models/gtaContext.cs
    startLine: 77
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Tablet_Apps> Server_Tablet_Apps { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Tablet_Apps}
    content.vb: Public Overridable Property Server_Tablet_Apps As DbSet(Of Server_Tablet_Apps)
  overload: Altv_Roleplay.models.gtaContext.Server_Tablet_Apps*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Tablet_Events
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Tablet_Events
  id: Server_Tablet_Events
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Tablet_Events
  nameWithType: gtaContext.Server_Tablet_Events
  fullName: Altv_Roleplay.models.gtaContext.Server_Tablet_Events
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Tablet_Events
    path: models/gtaContext.cs
    startLine: 78
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Tablet_Events> Server_Tablet_Events { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Tablet_Events}
    content.vb: Public Overridable Property Server_Tablet_Events As DbSet(Of Server_Tablet_Events)
  overload: Altv_Roleplay.models.gtaContext.Server_Tablet_Events*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Tablet_Notes
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Tablet_Notes
  id: Server_Tablet_Notes
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Tablet_Notes
  nameWithType: gtaContext.Server_Tablet_Notes
  fullName: Altv_Roleplay.models.gtaContext.Server_Tablet_Notes
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Tablet_Notes
    path: models/gtaContext.cs
    startLine: 79
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Tablet_Notes> Server_Tablet_Notes { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Tablet_Notes}
    content.vb: Public Overridable Property Server_Tablet_Notes As DbSet(Of Server_Tablet_Notes)
  overload: Altv_Roleplay.models.gtaContext.Server_Tablet_Notes*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Teleports
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Teleports
  id: Server_Teleports
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Teleports
  nameWithType: gtaContext.Server_Teleports
  fullName: Altv_Roleplay.models.gtaContext.Server_Teleports
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Teleports
    path: models/gtaContext.cs
    startLine: 80
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Teleports> Server_Teleports { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Teleports}
    content.vb: Public Overridable Property Server_Teleports As DbSet(Of Server_Teleports)
  overload: Altv_Roleplay.models.gtaContext.Server_Teleports*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Vehicles
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Vehicles
  id: Server_Vehicles
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Vehicles
  nameWithType: gtaContext.Server_Vehicles
  fullName: Altv_Roleplay.models.gtaContext.Server_Vehicles
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Vehicles
    path: models/gtaContext.cs
    startLine: 81
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Vehicles> Server_Vehicles { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Vehicles}
    content.vb: Public Overridable Property Server_Vehicles As DbSet(Of Server_Vehicles)
  overload: Altv_Roleplay.models.gtaContext.Server_Vehicles*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Vehicles_Mods
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Vehicles_Mods
  id: Server_Vehicles_Mods
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Vehicles_Mods
  nameWithType: gtaContext.Server_Vehicles_Mods
  fullName: Altv_Roleplay.models.gtaContext.Server_Vehicles_Mods
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Vehicles_Mods
    path: models/gtaContext.cs
    startLine: 82
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Vehicles_Mod> Server_Vehicles_Mods { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Vehicles_Mod}
    content.vb: Public Overridable Property Server_Vehicles_Mods As DbSet(Of Server_Vehicles_Mod)
  overload: Altv_Roleplay.models.gtaContext.Server_Vehicles_Mods*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Vehicle_Items
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Vehicle_Items
  id: Server_Vehicle_Items
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Vehicle_Items
  nameWithType: gtaContext.Server_Vehicle_Items
  fullName: Altv_Roleplay.models.gtaContext.Server_Vehicle_Items
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Vehicle_Items
    path: models/gtaContext.cs
    startLine: 83
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Vehicle_Items> Server_Vehicle_Items { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Vehicle_Items}
    content.vb: Public Overridable Property Server_Vehicle_Items As DbSet(Of Server_Vehicle_Items)
  overload: Altv_Roleplay.models.gtaContext.Server_Vehicle_Items*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Vehicle_Shops
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Vehicle_Shops
  id: Server_Vehicle_Shops
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Vehicle_Shops
  nameWithType: gtaContext.Server_Vehicle_Shops
  fullName: Altv_Roleplay.models.gtaContext.Server_Vehicle_Shops
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Vehicle_Shops
    path: models/gtaContext.cs
    startLine: 84
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Vehicle_Shops> Server_Vehicle_Shops { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Vehicle_Shops}
    content.vb: Public Overridable Property Server_Vehicle_Shops As DbSet(Of Server_Vehicle_Shops)
  overload: Altv_Roleplay.models.gtaContext.Server_Vehicle_Shops*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Vehicle_Shops_Items
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Vehicle_Shops_Items
  id: Server_Vehicle_Shops_Items
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Vehicle_Shops_Items
  nameWithType: gtaContext.Server_Vehicle_Shops_Items
  fullName: Altv_Roleplay.models.gtaContext.Server_Vehicle_Shops_Items
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Vehicle_Shops_Items
    path: models/gtaContext.cs
    startLine: 85
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Vehicle_Shops_Items> Server_Vehicle_Shops_Items { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Vehicle_Shops_Items}
    content.vb: Public Overridable Property Server_Vehicle_Shops_Items As DbSet(Of Server_Vehicle_Shops_Items)
  overload: Altv_Roleplay.models.gtaContext.Server_Vehicle_Shops_Items*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_IdentifiedVehicles
  commentId: P:Altv_Roleplay.models.gtaContext.Server_IdentifiedVehicles
  id: Server_IdentifiedVehicles
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_IdentifiedVehicles
  nameWithType: gtaContext.Server_IdentifiedVehicles
  fullName: Altv_Roleplay.models.gtaContext.Server_IdentifiedVehicles
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_IdentifiedVehicles
    path: models/gtaContext.cs
    startLine: 86
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_IdentifiedVehicles> Server_IdentifiedVehicles { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_IdentifiedVehicles}
    content.vb: Public Overridable Property Server_IdentifiedVehicles As DbSet(Of Server_IdentifiedVehicles)
  overload: Altv_Roleplay.models.gtaContext.Server_IdentifiedVehicles*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Wanteds
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Wanteds
  id: Server_Wanteds
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Wanteds
  nameWithType: gtaContext.Server_Wanteds
  fullName: Altv_Roleplay.models.gtaContext.Server_Wanteds
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Wanteds
    path: models/gtaContext.cs
    startLine: 87
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Wanteds> Server_Wanteds { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Wanteds}
    content.vb: Public Overridable Property Server_Wanteds As DbSet(Of Server_Wanteds)
  overload: Altv_Roleplay.models.gtaContext.Server_Wanteds*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Tattoos
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Tattoos
  id: Server_Tattoos
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Tattoos
  nameWithType: gtaContext.Server_Tattoos
  fullName: Altv_Roleplay.models.gtaContext.Server_Tattoos
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Tattoos
    path: models/gtaContext.cs
    startLine: 88
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Tattoos> Server_Tattoos { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Tattoos}
    content.vb: Public Overridable Property Server_Tattoos As DbSet(Of Server_Tattoos)
  overload: Altv_Roleplay.models.gtaContext.Server_Tattoos*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Tattoo_Shops
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Tattoo_Shops
  id: Server_Tattoo_Shops
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Tattoo_Shops
  nameWithType: gtaContext.Server_Tattoo_Shops
  fullName: Altv_Roleplay.models.gtaContext.Server_Tattoo_Shops
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Tattoo_Shops
    path: models/gtaContext.cs
    startLine: 89
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Tattoo_Shops> Server_Tattoo_Shops { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Tattoo_Shops}
    content.vb: Public Overridable Property Server_Tattoo_Shops As DbSet(Of Server_Tattoo_Shops)
  overload: Altv_Roleplay.models.gtaContext.Server_Tattoo_Shops*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Faction_Dispatch
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Faction_Dispatch
  id: Server_Faction_Dispatch
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Faction_Dispatch
  nameWithType: gtaContext.Server_Faction_Dispatch
  fullName: Altv_Roleplay.models.gtaContext.Server_Faction_Dispatch
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Faction_Dispatch
    path: models/gtaContext.cs
    startLine: 90
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<ServerFaction_Dispatch> Server_Faction_Dispatch { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.ServerFaction_Dispatch}
    content.vb: Public Overridable Property Server_Faction_Dispatch As DbSet(Of ServerFaction_Dispatch)
  overload: Altv_Roleplay.models.gtaContext.Server_Faction_Dispatch*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.WeedPot
  commentId: P:Altv_Roleplay.models.gtaContext.WeedPot
  id: WeedPot
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: WeedPot
  nameWithType: gtaContext.WeedPot
  fullName: Altv_Roleplay.models.gtaContext.WeedPot
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: WeedPot
    path: models/gtaContext.cs
    startLine: 91
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<WeedPot> WeedPot { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.Handler.WeedPot}
    content.vb: Public Overridable Property WeedPot As DbSet(Of WeedPot)
  overload: Altv_Roleplay.models.gtaContext.WeedPot*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Dropped_Items
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Dropped_Items
  id: Server_Dropped_Items
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Dropped_Items
  nameWithType: gtaContext.Server_Dropped_Items
  fullName: Altv_Roleplay.models.gtaContext.Server_Dropped_Items
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Dropped_Items
    path: models/gtaContext.cs
    startLine: 92
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Dropped_Items> Server_Dropped_Items { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Dropped_Items}
    content.vb: Public Overridable Property Server_Dropped_Items As DbSet(Of Server_Dropped_Items)
  overload: Altv_Roleplay.models.gtaContext.Server_Dropped_Items*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Storages
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Storages
  id: Server_Storages
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Storages
  nameWithType: gtaContext.Server_Storages
  fullName: Altv_Roleplay.models.gtaContext.Server_Storages
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Storages
    path: models/gtaContext.cs
    startLine: 93
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Storages> Server_Storages { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Storages}
    content.vb: Public Overridable Property Server_Storages As DbSet(Of Server_Storages)
  overload: Altv_Roleplay.models.gtaContext.Server_Storages*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.Server_Clothes_Storages
  commentId: P:Altv_Roleplay.models.gtaContext.Server_Clothes_Storages
  id: Server_Clothes_Storages
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: Server_Clothes_Storages
  nameWithType: gtaContext.Server_Clothes_Storages
  fullName: Altv_Roleplay.models.gtaContext.Server_Clothes_Storages
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Server_Clothes_Storages
    path: models/gtaContext.cs
    startLine: 94
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public virtual DbSet<Server_Clothes_Storages> Server_Clothes_Storages { get; set; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Clothes_Storages}
    content.vb: Public Overridable Property Server_Clothes_Storages As DbSet(Of Server_Clothes_Storages)
  overload: Altv_Roleplay.models.gtaContext.Server_Clothes_Storages*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Altv_Roleplay.models.gtaContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  commentId: M:Altv_Roleplay.models.gtaContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  id: OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: OnConfiguring(DbContextOptionsBuilder)
  nameWithType: gtaContext.OnConfiguring(DbContextOptionsBuilder)
  fullName: Altv_Roleplay.models.gtaContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  type: Method
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: OnConfiguring
    path: models/gtaContext.cs
    startLine: 98
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    parameters:
    - id: optionsBuilder
      type: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
    content.vb: Protected Overrides Sub OnConfiguring(optionsBuilder As DbContextOptionsBuilder)
  overridden: Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  overload: Altv_Roleplay.models.gtaContext.OnConfiguring*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Altv_Roleplay.models.gtaContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  commentId: M:Altv_Roleplay.models.gtaContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  id: OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  parent: Altv_Roleplay.models.gtaContext
  langs:
  - csharp
  - vb
  name: OnModelCreating(ModelBuilder)
  nameWithType: gtaContext.OnModelCreating(ModelBuilder)
  fullName: Altv_Roleplay.models.gtaContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  type: Method
  source:
    remote:
      path: Server/Altv-Roleplay/models/gtaContext.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: OnModelCreating
    path: models/gtaContext.cs
    startLine: 109
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: protected override void OnModelCreating(ModelBuilder modelBuilder)
    parameters:
    - id: modelBuilder
      type: Microsoft.EntityFrameworkCore.ModelBuilder
    content.vb: Protected Overrides Sub OnModelCreating(modelBuilder As ModelBuilder)
  overridden: Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  overload: Altv_Roleplay.models.gtaContext.OnModelCreating*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Altv_Roleplay.models
  commentId: N:Altv_Roleplay.models
  name: Altv_Roleplay.models
  nameWithType: Altv_Roleplay.models
  fullName: Altv_Roleplay.models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: true
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider}
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  definition: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  name: IInfrastructure<IServiceProvider>
  nameWithType: IInfrastructure<IServiceProvider>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>
  nameWithType.vb: IInfrastructure(Of IServiceProvider)
  fullName.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of System.IServiceProvider)
  name.vb: IInfrastructure(Of IServiceProvider)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: true
  name: IDbContextDependencies
  nameWithType: IDbContextDependencies
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies
- uid: Microsoft.EntityFrameworkCore.Internal.IDbSetCache
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IDbSetCache
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: true
  name: IDbSetCache
  nameWithType: IDbSetCache
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbSetCache
- uid: Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable
  commentId: T:Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable
  parent: Microsoft.EntityFrameworkCore.Internal
  isExternal: true
  name: IDbContextPoolable
  nameWithType: IDbContextPoolable
  fullName: Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.IAsyncDisposable
  commentId: T:System.IAsyncDisposable
  parent: System
  isExternal: true
  name: IAsyncDisposable
  nameWithType: IAsyncDisposable
  fullName: System.IAsyncDisposable
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IResettableService
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IResettableService
  parent: Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: true
  name: IResettableService
  nameWithType: IResettableService
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IResettableService
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbSetCache#GetOrAddSet(Microsoft.EntityFrameworkCore.Internal.IDbSetSource,System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbSetCache#GetOrAddSet(Microsoft.EntityFrameworkCore.Internal.IDbSetSource,System.Type)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IDbSetCache.GetOrAddSet(IDbSetSource, Type)
  nameWithType: DbContext.IDbSetCache.GetOrAddSet(IDbSetSource, Type)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbSetCache.GetOrAddSet(Microsoft.EntityFrameworkCore.Internal.IDbSetSource, System.Type)
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbSetCache.GetOrAddSet(IDbSetSource, Type)
  name.vb: Microsoft.EntityFrameworkCore.Internal.IDbSetCache.GetOrAddSet(IDbSetSource, Type)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbSetCache#GetOrAddSet(Microsoft.EntityFrameworkCore.Internal.IDbSetSource,System.Type)
    name: IDbSetCache.GetOrAddSet
    nameWithType: DbContext.IDbSetCache.GetOrAddSet
    fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbSetCache.GetOrAddSet
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Internal.IDbSetSource
    name: IDbSetSource
    nameWithType: IDbSetSource
    fullName: Microsoft.EntityFrameworkCore.Internal.IDbSetSource
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbSetCache#GetOrAddSet(Microsoft.EntityFrameworkCore.Internal.IDbSetSource,System.Type)
    name: Microsoft.EntityFrameworkCore.Internal.IDbSetCache.GetOrAddSet
    nameWithType: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbSetCache.GetOrAddSet
    fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbSetCache.GetOrAddSet
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Internal.IDbSetSource
    name: IDbSetSource
    nameWithType: IDbSetSource
    fullName: Microsoft.EntityFrameworkCore.Internal.IDbSetSource
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbSetCache#GetOrAddSet(Microsoft.EntityFrameworkCore.Internal.IDbSetSource,System.String,System.Type)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbSetCache#GetOrAddSet(Microsoft.EntityFrameworkCore.Internal.IDbSetSource,System.String,System.Type)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IDbSetCache.GetOrAddSet(IDbSetSource, String, Type)
  nameWithType: DbContext.IDbSetCache.GetOrAddSet(IDbSetSource, String, Type)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbSetCache.GetOrAddSet(Microsoft.EntityFrameworkCore.Internal.IDbSetSource, System.String, System.Type)
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbSetCache.GetOrAddSet(IDbSetSource, String, Type)
  name.vb: Microsoft.EntityFrameworkCore.Internal.IDbSetCache.GetOrAddSet(IDbSetSource, String, Type)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbSetCache#GetOrAddSet(Microsoft.EntityFrameworkCore.Internal.IDbSetSource,System.String,System.Type)
    name: IDbSetCache.GetOrAddSet
    nameWithType: DbContext.IDbSetCache.GetOrAddSet
    fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbSetCache.GetOrAddSet
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Internal.IDbSetSource
    name: IDbSetSource
    nameWithType: IDbSetSource
    fullName: Microsoft.EntityFrameworkCore.Internal.IDbSetSource
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbSetCache#GetOrAddSet(Microsoft.EntityFrameworkCore.Internal.IDbSetSource,System.String,System.Type)
    name: Microsoft.EntityFrameworkCore.Internal.IDbSetCache.GetOrAddSet
    nameWithType: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbSetCache.GetOrAddSet
    fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbSetCache.GetOrAddSet
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Internal.IDbSetSource
    name: IDbSetSource
    nameWithType: IDbSetSource
    fullName: Microsoft.EntityFrameworkCore.Internal.IDbSetSource
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Set``1
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Set``1
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Set<TEntity>()
  nameWithType: DbContext.Set<TEntity>()
  fullName: Microsoft.EntityFrameworkCore.DbContext.Set<TEntity>()
  nameWithType.vb: DbContext.Set(Of TEntity)()
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Set(Of TEntity)()
  name.vb: Set(Of TEntity)()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Set``1
    name: Set<TEntity>
    nameWithType: DbContext.Set<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Set<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Set``1
    name: Set(Of TEntity)
    nameWithType: DbContext.Set(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Set(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Set``1(System.String)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Set``1(System.String)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Set<TEntity>(String)
  nameWithType: DbContext.Set<TEntity>(String)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Set<TEntity>(System.String)
  nameWithType.vb: DbContext.Set(Of TEntity)(String)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Set(Of TEntity)(System.String)
  name.vb: Set(Of TEntity)(String)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Set``1(System.String)
    name: Set<TEntity>
    nameWithType: DbContext.Set<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Set<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Set``1(System.String)
    name: Set(Of TEntity)
    nameWithType: DbContext.Set(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Set(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: SaveChanges()
  nameWithType: DbContext.SaveChanges()
  fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    name: SaveChanges
    nameWithType: DbContext.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    name: SaveChanges
    nameWithType: DbContext.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: SaveChanges(Boolean)
  nameWithType: DbContext.SaveChanges(Boolean)
  fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean)
    name: SaveChanges
    nameWithType: DbContext.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean)
    name: SaveChanges
    nameWithType: DbContext.SaveChanges
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChanges
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: SaveChangesAsync(CancellationToken)
  nameWithType: DbContext.SaveChangesAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
    name: SaveChangesAsync
    nameWithType: DbContext.SaveChangesAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)
    name: SaveChangesAsync
    nameWithType: DbContext.SaveChangesAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: SaveChangesAsync(Boolean, CancellationToken)
  nameWithType: DbContext.SaveChangesAsync(Boolean, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)
    name: SaveChangesAsync
    nameWithType: DbContext.SaveChangesAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)
    name: SaveChangesAsync
    nameWithType: DbContext.SaveChangesAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#ClearLease
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#ClearLease
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IDbContextPoolable.ClearLease()
  nameWithType: DbContext.IDbContextPoolable.ClearLease()
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.ClearLease()
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.ClearLease()
  name.vb: Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.ClearLease()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#ClearLease
    name: IDbContextPoolable.ClearLease
    nameWithType: DbContext.IDbContextPoolable.ClearLease
    fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.ClearLease
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#ClearLease
    name: Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.ClearLease
    nameWithType: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.ClearLease
    fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.ClearLease
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#SetLease(Microsoft.EntityFrameworkCore.Internal.DbContextLease)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#SetLease(Microsoft.EntityFrameworkCore.Internal.DbContextLease)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IDbContextPoolable.SetLease(DbContextLease)
  nameWithType: DbContext.IDbContextPoolable.SetLease(DbContextLease)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SetLease(Microsoft.EntityFrameworkCore.Internal.DbContextLease)
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SetLease(DbContextLease)
  name.vb: Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SetLease(DbContextLease)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#SetLease(Microsoft.EntityFrameworkCore.Internal.DbContextLease)
    name: IDbContextPoolable.SetLease
    nameWithType: DbContext.IDbContextPoolable.SetLease
    fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SetLease
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Internal.DbContextLease
    name: DbContextLease
    nameWithType: DbContextLease
    fullName: Microsoft.EntityFrameworkCore.Internal.DbContextLease
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#SetLease(Microsoft.EntityFrameworkCore.Internal.DbContextLease)
    name: Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SetLease
    nameWithType: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SetLease
    fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SetLease
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.Internal.DbContextLease
    name: DbContextLease
    nameWithType: DbContextLease
    fullName: Microsoft.EntityFrameworkCore.Internal.DbContextLease
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#SnapshotConfiguration
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#SnapshotConfiguration
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IDbContextPoolable.SnapshotConfiguration()
  nameWithType: DbContext.IDbContextPoolable.SnapshotConfiguration()
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SnapshotConfiguration()
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SnapshotConfiguration()
  name.vb: Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SnapshotConfiguration()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#SnapshotConfiguration
    name: IDbContextPoolable.SnapshotConfiguration
    nameWithType: DbContext.IDbContextPoolable.SnapshotConfiguration
    fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SnapshotConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextPoolable#SnapshotConfiguration
    name: Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SnapshotConfiguration
    nameWithType: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SnapshotConfiguration
    fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SnapshotConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Infrastructure#IResettableService#ResetState
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Infrastructure#IResettableService#ResetState
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IResettableService.ResetState()
  nameWithType: DbContext.IResettableService.ResetState()
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IResettableService.ResetState()
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IResettableService.ResetState()
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IResettableService.ResetState()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Infrastructure#IResettableService#ResetState
    name: IResettableService.ResetState
    nameWithType: DbContext.IResettableService.ResetState
    fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IResettableService.ResetState
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Infrastructure#IResettableService#ResetState
    name: Microsoft.EntityFrameworkCore.Infrastructure.IResettableService.ResetState
    nameWithType: DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IResettableService.ResetState
    fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IResettableService.ResetState
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Infrastructure#IResettableService#ResetStateAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Infrastructure#IResettableService#ResetStateAsync(System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IResettableService.ResetStateAsync(CancellationToken)
  nameWithType: DbContext.IResettableService.ResetStateAsync(CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IResettableService.ResetStateAsync(System.Threading.CancellationToken)
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IResettableService.ResetStateAsync(CancellationToken)
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IResettableService.ResetStateAsync(CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Infrastructure#IResettableService#ResetStateAsync(System.Threading.CancellationToken)
    name: IResettableService.ResetStateAsync
    nameWithType: DbContext.IResettableService.ResetStateAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IResettableService.ResetStateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Infrastructure#IResettableService#ResetStateAsync(System.Threading.CancellationToken)
    name: Microsoft.EntityFrameworkCore.Infrastructure.IResettableService.ResetStateAsync
    nameWithType: DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IResettableService.ResetStateAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IResettableService.ResetStateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Dispose
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Dispose
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Dispose()
  nameWithType: DbContext.Dispose()
  fullName: Microsoft.EntityFrameworkCore.DbContext.Dispose()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Dispose
    name: Dispose
    nameWithType: DbContext.Dispose
    fullName: Microsoft.EntityFrameworkCore.DbContext.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Dispose
    name: Dispose
    nameWithType: DbContext.Dispose
    fullName: Microsoft.EntityFrameworkCore.DbContext.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.DisposeAsync
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.DisposeAsync
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: DisposeAsync()
  nameWithType: DbContext.DisposeAsync()
  fullName: Microsoft.EntityFrameworkCore.DbContext.DisposeAsync()
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.DisposeAsync
    name: DisposeAsync
    nameWithType: DbContext.DisposeAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.DisposeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.DisposeAsync
    name: DisposeAsync
    nameWithType: DbContext.DisposeAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.DisposeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Entry``1({TEntity})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
  name: Entry<TEntity>(TEntity)
  nameWithType: DbContext.Entry<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Entry<TEntity>(TEntity)
  nameWithType.vb: DbContext.Entry(Of TEntity)(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Entry(Of TEntity)(TEntity)
  name.vb: Entry(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
    name: Entry<TEntity>
    nameWithType: DbContext.Entry<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Entry<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
    name: Entry(Of TEntity)
    nameWithType: DbContext.Entry(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Entry(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Entry(Object)
  nameWithType: DbContext.Entry(Object)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object)
    name: Entry
    nameWithType: DbContext.Entry
    fullName: Microsoft.EntityFrameworkCore.DbContext.Entry
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object)
    name: Entry
    nameWithType: DbContext.Entry
    fullName: Microsoft.EntityFrameworkCore.DbContext.Entry
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Add``1({TEntity})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
  name: Add<TEntity>(TEntity)
  nameWithType: DbContext.Add<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Add<TEntity>(TEntity)
  nameWithType.vb: DbContext.Add(Of TEntity)(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Add(Of TEntity)(TEntity)
  name.vb: Add(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
    name: Add<TEntity>
    nameWithType: DbContext.Add<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Add<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
    name: Add(Of TEntity)
    nameWithType: DbContext.Add(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Add(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1({TEntity},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
  name: AddAsync<TEntity>(TEntity, CancellationToken)
  nameWithType: DbContext.AddAsync<TEntity>(TEntity, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync<TEntity>(TEntity, System.Threading.CancellationToken)
  nameWithType.vb: DbContext.AddAsync(Of TEntity)(TEntity, CancellationToken)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.AddAsync(Of TEntity)(TEntity, System.Threading.CancellationToken)
  name.vb: AddAsync(Of TEntity)(TEntity, CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
    name: AddAsync<TEntity>
    nameWithType: DbContext.AddAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
    name: AddAsync(Of TEntity)
    nameWithType: DbContext.AddAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Attach``1({TEntity})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
  name: Attach<TEntity>(TEntity)
  nameWithType: DbContext.Attach<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Attach<TEntity>(TEntity)
  nameWithType.vb: DbContext.Attach(Of TEntity)(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Attach(Of TEntity)(TEntity)
  name.vb: Attach(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
    name: Attach<TEntity>
    nameWithType: DbContext.Attach<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Attach<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
    name: Attach(Of TEntity)
    nameWithType: DbContext.Attach(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Attach(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Update``1({TEntity})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
  name: Update<TEntity>(TEntity)
  nameWithType: DbContext.Update<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Update<TEntity>(TEntity)
  nameWithType.vb: DbContext.Update(Of TEntity)(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Update(Of TEntity)(TEntity)
  name.vb: Update(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
    name: Update<TEntity>
    nameWithType: DbContext.Update<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Update<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
    name: Update(Of TEntity)
    nameWithType: DbContext.Update(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Update(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Remove``1({TEntity})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
  name: Remove<TEntity>(TEntity)
  nameWithType: DbContext.Remove<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Remove<TEntity>(TEntity)
  nameWithType.vb: DbContext.Remove(Of TEntity)(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Remove(Of TEntity)(TEntity)
  name.vb: Remove(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
    name: Remove<TEntity>
    nameWithType: DbContext.Remove<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Remove<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
    name: Remove(Of TEntity)
    nameWithType: DbContext.Remove(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Remove(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Add(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Add(System.Object)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Add(Object)
  nameWithType: DbContext.Add(Object)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Add(System.Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Add(System.Object)
    name: Add
    nameWithType: DbContext.Add
    fullName: Microsoft.EntityFrameworkCore.DbContext.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Add(System.Object)
    name: Add
    nameWithType: DbContext.Add
    fullName: Microsoft.EntityFrameworkCore.DbContext.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object,System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: AddAsync(Object, CancellationToken)
  nameWithType: DbContext.AddAsync(Object, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object,System.Threading.CancellationToken)
    name: AddAsync
    nameWithType: DbContext.AddAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object,System.Threading.CancellationToken)
    name: AddAsync
    nameWithType: DbContext.AddAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Attach(Object)
  nameWithType: DbContext.Attach(Object)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)
    name: Attach
    nameWithType: DbContext.Attach
    fullName: Microsoft.EntityFrameworkCore.DbContext.Attach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)
    name: Attach
    nameWithType: DbContext.Attach
    fullName: Microsoft.EntityFrameworkCore.DbContext.Attach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Update(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Update(System.Object)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Update(Object)
  nameWithType: DbContext.Update(Object)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Update(System.Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Update(System.Object)
    name: Update
    nameWithType: DbContext.Update
    fullName: Microsoft.EntityFrameworkCore.DbContext.Update
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Update(System.Object)
    name: Update
    nameWithType: DbContext.Update
    fullName: Microsoft.EntityFrameworkCore.DbContext.Update
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Remove(Object)
  nameWithType: DbContext.Remove(Object)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object)
    name: Remove
    nameWithType: DbContext.Remove
    fullName: Microsoft.EntityFrameworkCore.DbContext.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object)
    name: Remove
    nameWithType: DbContext.Remove
    fullName: Microsoft.EntityFrameworkCore.DbContext.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: AddRange(Object[])
  nameWithType: DbContext.AddRange(Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[])
  nameWithType.vb: DbContext.AddRange(Object())
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object())
  name.vb: AddRange(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[])
    name: AddRange
    nameWithType: DbContext.AddRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[])
    name: AddRange
    nameWithType: DbContext.AddRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: AddRangeAsync(Object[])
  nameWithType: DbContext.AddRangeAsync(Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[])
  nameWithType.vb: DbContext.AddRangeAsync(Object())
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object())
  name.vb: AddRangeAsync(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[])
    name: AddRangeAsync
    nameWithType: DbContext.AddRangeAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[])
    name: AddRangeAsync
    nameWithType: DbContext.AddRangeAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: AttachRange(Object[])
  nameWithType: DbContext.AttachRange(Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])
  nameWithType.vb: DbContext.AttachRange(Object())
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object())
  name.vb: AttachRange(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])
    name: AttachRange
    nameWithType: DbContext.AttachRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AttachRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])
    name: AttachRange
    nameWithType: DbContext.AttachRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AttachRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: UpdateRange(Object[])
  nameWithType: DbContext.UpdateRange(Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[])
  nameWithType.vb: DbContext.UpdateRange(Object())
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object())
  name.vb: UpdateRange(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[])
    name: UpdateRange
    nameWithType: DbContext.UpdateRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.UpdateRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[])
    name: UpdateRange
    nameWithType: DbContext.UpdateRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.UpdateRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: RemoveRange(Object[])
  nameWithType: DbContext.RemoveRange(Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[])
  nameWithType.vb: DbContext.RemoveRange(Object())
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object())
  name.vb: RemoveRange(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[])
    name: RemoveRange
    nameWithType: DbContext.RemoveRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[])
    name: RemoveRange
    nameWithType: DbContext.RemoveRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable{System.Object})
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: AddRange(IEnumerable<Object>)
  nameWithType: DbContext.AddRange(IEnumerable<Object>)
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable<System.Object>)
  nameWithType.vb: DbContext.AddRange(IEnumerable(Of Object))
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: AddRange(IEnumerable(Of Object))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable{System.Object})
    name: AddRange
    nameWithType: DbContext.AddRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable{System.Object})
    name: AddRange
    nameWithType: DbContext.AddRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: AddRangeAsync(IEnumerable<Object>, CancellationToken)
  nameWithType: DbContext.AddRangeAsync(IEnumerable<Object>, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable<System.Object>, System.Threading.CancellationToken)
  nameWithType.vb: DbContext.AddRangeAsync(IEnumerable(Of Object), CancellationToken)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable(Of System.Object), System.Threading.CancellationToken)
  name.vb: AddRangeAsync(IEnumerable(Of Object), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)
    name: AddRangeAsync
    nameWithType: DbContext.AddRangeAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)
    name: AddRangeAsync
    nameWithType: DbContext.AddRangeAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable{System.Object})
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: AttachRange(IEnumerable<Object>)
  nameWithType: DbContext.AttachRange(IEnumerable<Object>)
  fullName: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable<System.Object>)
  nameWithType.vb: DbContext.AttachRange(IEnumerable(Of Object))
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: AttachRange(IEnumerable(Of Object))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable{System.Object})
    name: AttachRange
    nameWithType: DbContext.AttachRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AttachRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable{System.Object})
    name: AttachRange
    nameWithType: DbContext.AttachRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.AttachRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable{System.Object})
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: UpdateRange(IEnumerable<Object>)
  nameWithType: DbContext.UpdateRange(IEnumerable<Object>)
  fullName: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable<System.Object>)
  nameWithType.vb: DbContext.UpdateRange(IEnumerable(Of Object))
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: UpdateRange(IEnumerable(Of Object))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable{System.Object})
    name: UpdateRange
    nameWithType: DbContext.UpdateRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.UpdateRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable{System.Object})
    name: UpdateRange
    nameWithType: DbContext.UpdateRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.UpdateRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable{System.Object})
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: RemoveRange(IEnumerable<Object>)
  nameWithType: DbContext.RemoveRange(IEnumerable<Object>)
  fullName: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable<System.Object>)
  nameWithType.vb: DbContext.RemoveRange(IEnumerable(Of Object))
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: RemoveRange(IEnumerable(Of Object))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable{System.Object})
    name: RemoveRange
    nameWithType: DbContext.RemoveRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable{System.Object})
    name: RemoveRange
    nameWithType: DbContext.RemoveRange
    fullName: Microsoft.EntityFrameworkCore.DbContext.RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Find(System.Type,System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Find(System.Type,System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Find(Type, Object[])
  nameWithType: DbContext.Find(Type, Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.Find(System.Type, System.Object[])
  nameWithType.vb: DbContext.Find(Type, Object())
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Find(System.Type, System.Object())
  name.vb: Find(Type, Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Find(System.Type,System.Object[])
    name: Find
    nameWithType: DbContext.Find
    fullName: Microsoft.EntityFrameworkCore.DbContext.Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Find(System.Type,System.Object[])
    name: Find
    nameWithType: DbContext.Find
    fullName: Microsoft.EntityFrameworkCore.DbContext.Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: FindAsync(Type, Object[])
  nameWithType: DbContext.FindAsync(Type, Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, System.Object[])
  nameWithType.vb: DbContext.FindAsync(Type, Object())
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, System.Object())
  name.vb: FindAsync(Type, Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[])
    name: FindAsync
    nameWithType: DbContext.FindAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[])
    name: FindAsync
    nameWithType: DbContext.FindAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[],System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[],System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: FindAsync(Type, Object[], CancellationToken)
  nameWithType: DbContext.FindAsync(Type, Object[], CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, System.Object[], System.Threading.CancellationToken)
  nameWithType.vb: DbContext.FindAsync(Type, Object(), CancellationToken)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, System.Object(), System.Threading.CancellationToken)
  name.vb: FindAsync(Type, Object(), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[],System.Threading.CancellationToken)
    name: FindAsync
    nameWithType: DbContext.FindAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[],System.Threading.CancellationToken)
    name: FindAsync
    nameWithType: DbContext.FindAsync
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Find``1(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Find``1(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Find<TEntity>(Object[])
  nameWithType: DbContext.Find<TEntity>(Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.Find<TEntity>(System.Object[])
  nameWithType.vb: DbContext.Find(Of TEntity)(Object())
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Find(Of TEntity)(System.Object())
  name.vb: Find(Of TEntity)(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Find``1(System.Object[])
    name: Find<TEntity>
    nameWithType: DbContext.Find<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Find<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Find``1(System.Object[])
    name: Find(Of TEntity)
    nameWithType: DbContext.Find(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Find(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[])
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[])
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: FindAsync<TEntity>(Object[])
  nameWithType: DbContext.FindAsync<TEntity>(Object[])
  fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync<TEntity>(System.Object[])
  nameWithType.vb: DbContext.FindAsync(Of TEntity)(Object())
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.FindAsync(Of TEntity)(System.Object())
  name.vb: FindAsync(Of TEntity)(Object())
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[])
    name: FindAsync<TEntity>
    nameWithType: DbContext.FindAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[])
    name: FindAsync(Of TEntity)
    nameWithType: DbContext.FindAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[],System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[],System.Threading.CancellationToken)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: FindAsync<TEntity>(Object[], CancellationToken)
  nameWithType: DbContext.FindAsync<TEntity>(Object[], CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync<TEntity>(System.Object[], System.Threading.CancellationToken)
  nameWithType.vb: DbContext.FindAsync(Of TEntity)(Object(), CancellationToken)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.FindAsync(Of TEntity)(System.Object(), System.Threading.CancellationToken)
  name.vb: FindAsync(Of TEntity)(Object(), CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[],System.Threading.CancellationToken)
    name: FindAsync<TEntity>
    nameWithType: DbContext.FindAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[],System.Threading.CancellationToken)
    name: FindAsync(Of TEntity)
    nameWithType: DbContext.FindAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.FindAsync(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.FromExpression``1(System.Linq.Expressions.Expression{System.Func{System.Linq.IQueryable{{TResult}}}})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.FromExpression``1(System.Linq.Expressions.Expression{System.Func{System.Linq.IQueryable{``0}}})
  parent: Microsoft.EntityFrameworkCore.DbContext
  definition: Microsoft.EntityFrameworkCore.DbContext.FromExpression``1(System.Linq.Expressions.Expression{System.Func{System.Linq.IQueryable{``0}}})
  name: FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>)
  nameWithType: DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>)
  fullName: Microsoft.EntityFrameworkCore.DbContext.FromExpression<TResult>(System.Linq.Expressions.Expression<System.Func<System.Linq.IQueryable<TResult>>>)
  nameWithType.vb: DbContext.FromExpression(Of TResult)(Expression(Of Func(Of IQueryable(Of TResult))))
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.FromExpression(Of TResult)(System.Linq.Expressions.Expression(Of System.Func(Of System.Linq.IQueryable(Of TResult))))
  name.vb: FromExpression(Of TResult)(Expression(Of Func(Of IQueryable(Of TResult))))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FromExpression``1(System.Linq.Expressions.Expression{System.Func{System.Linq.IQueryable{``0}}})
    name: FromExpression<TResult>
    nameWithType: DbContext.FromExpression<TResult>
    fullName: Microsoft.EntityFrameworkCore.DbContext.FromExpression<TResult>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FromExpression``1(System.Linq.Expressions.Expression{System.Func{System.Linq.IQueryable{``0}}})
    name: FromExpression(Of TResult)
    nameWithType: DbContext.FromExpression(Of TResult)
    fullName: Microsoft.EntityFrameworkCore.DbContext.FromExpression(Of TResult)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Database
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Database
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Database
  nameWithType: DbContext.Database
  fullName: Microsoft.EntityFrameworkCore.DbContext.Database
- uid: Microsoft.EntityFrameworkCore.DbContext.ChangeTracker
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.ChangeTracker
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: ChangeTracker
  nameWithType: DbContext.ChangeTracker
  fullName: Microsoft.EntityFrameworkCore.DbContext.ChangeTracker
- uid: Microsoft.EntityFrameworkCore.DbContext.Model
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Model
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: Model
  nameWithType: DbContext.Model
  fullName: Microsoft.EntityFrameworkCore.DbContext.Model
- uid: Microsoft.EntityFrameworkCore.DbContext.ContextId
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.ContextId
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: ContextId
  nameWithType: DbContext.ContextId
  fullName: Microsoft.EntityFrameworkCore.DbContext.ContextId
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#SetSource
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#SetSource
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IDbContextDependencies.SetSource
  nameWithType: DbContext.IDbContextDependencies.SetSource
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.SetSource
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.SetSource
  name.vb: Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.SetSource
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#EntityFinderFactory
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#EntityFinderFactory
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IDbContextDependencies.EntityFinderFactory
  nameWithType: DbContext.IDbContextDependencies.EntityFinderFactory
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.EntityFinderFactory
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.EntityFinderFactory
  name.vb: Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.EntityFinderFactory
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#QueryProvider
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#QueryProvider
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IDbContextDependencies.QueryProvider
  nameWithType: DbContext.IDbContextDependencies.QueryProvider
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.QueryProvider
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.QueryProvider
  name.vb: Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.QueryProvider
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#StateManager
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#StateManager
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IDbContextDependencies.StateManager
  nameWithType: DbContext.IDbContextDependencies.StateManager
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.StateManager
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.StateManager
  name.vb: Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.StateManager
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#ChangeDetector
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#ChangeDetector
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IDbContextDependencies.ChangeDetector
  nameWithType: DbContext.IDbContextDependencies.ChangeDetector
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.ChangeDetector
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.ChangeDetector
  name.vb: Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.ChangeDetector
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#EntityGraphAttacher
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#EntityGraphAttacher
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IDbContextDependencies.EntityGraphAttacher
  nameWithType: DbContext.IDbContextDependencies.EntityGraphAttacher
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.EntityGraphAttacher
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.EntityGraphAttacher
  name.vb: Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.EntityGraphAttacher
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#UpdateLogger
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#UpdateLogger
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IDbContextDependencies.UpdateLogger
  nameWithType: DbContext.IDbContextDependencies.UpdateLogger
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.UpdateLogger
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.UpdateLogger
  name.vb: Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.UpdateLogger
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#InfrastructureLogger
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Internal#IDbContextDependencies#InfrastructureLogger
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IDbContextDependencies.InfrastructureLogger
  nameWithType: DbContext.IDbContextDependencies.InfrastructureLogger
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.InfrastructureLogger
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.InfrastructureLogger
  name.vb: Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.InfrastructureLogger
- uid: Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{System#IServiceProvider}#Instance
  commentId: P:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{System#IServiceProvider}#Instance
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: IInfrastructure<IServiceProvider>.Instance
  nameWithType: DbContext.IInfrastructure<IServiceProvider>.Instance
  fullName: Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance
  nameWithType.vb: DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance
  name.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance
- uid: Microsoft.EntityFrameworkCore.DbContext.SavingChanges
  commentId: E:Microsoft.EntityFrameworkCore.DbContext.SavingChanges
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: SavingChanges
  nameWithType: DbContext.SavingChanges
  fullName: Microsoft.EntityFrameworkCore.DbContext.SavingChanges
- uid: Microsoft.EntityFrameworkCore.DbContext.SavedChanges
  commentId: E:Microsoft.EntityFrameworkCore.DbContext.SavedChanges
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: SavedChanges
  nameWithType: DbContext.SavedChanges
  fullName: Microsoft.EntityFrameworkCore.DbContext.SavedChanges
- uid: Microsoft.EntityFrameworkCore.DbContext.SaveChangesFailed
  commentId: E:Microsoft.EntityFrameworkCore.DbContext.SaveChangesFailed
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: SaveChangesFailed
  nameWithType: DbContext.SaveChangesFailed
  fullName: Microsoft.EntityFrameworkCore.DbContext.SaveChangesFailed
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: true
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  commentId: T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
  isExternal: true
  name: IInfrastructure<T>
  nameWithType: IInfrastructure<T>
  fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T>
  nameWithType.vb: IInfrastructure(Of T)
  fullName.vb: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure(Of T)
  name.vb: IInfrastructure(Of T)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1
    name: IInfrastructure
    nameWithType: IInfrastructure
    fullName: Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Infrastructure
  commentId: N:Microsoft.EntityFrameworkCore.Infrastructure
  isExternal: true
  name: Microsoft.EntityFrameworkCore.Infrastructure
  nameWithType: Microsoft.EntityFrameworkCore.Infrastructure
  fullName: Microsoft.EntityFrameworkCore.Infrastructure
- uid: Microsoft.EntityFrameworkCore.Internal
  commentId: N:Microsoft.EntityFrameworkCore.Internal
  isExternal: true
  name: Microsoft.EntityFrameworkCore.Internal
  nameWithType: Microsoft.EntityFrameworkCore.Internal
  fullName: Microsoft.EntityFrameworkCore.Internal
- uid: Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
  isExternal: true
  name: Entry<TEntity>(TEntity)
  nameWithType: DbContext.Entry<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Entry<TEntity>(TEntity)
  nameWithType.vb: DbContext.Entry(Of TEntity)(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Entry(Of TEntity)(TEntity)
  name.vb: Entry(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
    name: Entry<TEntity>
    nameWithType: DbContext.Entry<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Entry<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)
    name: Entry(Of TEntity)
    nameWithType: DbContext.Entry(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Entry(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
  isExternal: true
  name: Add<TEntity>(TEntity)
  nameWithType: DbContext.Add<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Add<TEntity>(TEntity)
  nameWithType.vb: DbContext.Add(Of TEntity)(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Add(Of TEntity)(TEntity)
  name.vb: Add(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
    name: Add<TEntity>
    nameWithType: DbContext.Add<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Add<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)
    name: Add(Of TEntity)
    nameWithType: DbContext.Add(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Add(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
  isExternal: true
  name: AddAsync<TEntity>(TEntity, CancellationToken)
  nameWithType: DbContext.AddAsync<TEntity>(TEntity, CancellationToken)
  fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync<TEntity>(TEntity, System.Threading.CancellationToken)
  nameWithType.vb: DbContext.AddAsync(Of TEntity)(TEntity, CancellationToken)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.AddAsync(Of TEntity)(TEntity, System.Threading.CancellationToken)
  name.vb: AddAsync(Of TEntity)(TEntity, CancellationToken)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
    name: AddAsync<TEntity>
    nameWithType: DbContext.AddAsync<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)
    name: AddAsync(Of TEntity)
    nameWithType: DbContext.AddAsync(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.AddAsync(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
  isExternal: true
  name: Attach<TEntity>(TEntity)
  nameWithType: DbContext.Attach<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Attach<TEntity>(TEntity)
  nameWithType.vb: DbContext.Attach(Of TEntity)(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Attach(Of TEntity)(TEntity)
  name.vb: Attach(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
    name: Attach<TEntity>
    nameWithType: DbContext.Attach<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Attach<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)
    name: Attach(Of TEntity)
    nameWithType: DbContext.Attach(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Attach(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
  isExternal: true
  name: Update<TEntity>(TEntity)
  nameWithType: DbContext.Update<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Update<TEntity>(TEntity)
  nameWithType.vb: DbContext.Update(Of TEntity)(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Update(Of TEntity)(TEntity)
  name.vb: Update(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
    name: Update<TEntity>
    nameWithType: DbContext.Update<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Update<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)
    name: Update(Of TEntity)
    nameWithType: DbContext.Update(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Update(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
  isExternal: true
  name: Remove<TEntity>(TEntity)
  nameWithType: DbContext.Remove<TEntity>(TEntity)
  fullName: Microsoft.EntityFrameworkCore.DbContext.Remove<TEntity>(TEntity)
  nameWithType.vb: DbContext.Remove(Of TEntity)(TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.Remove(Of TEntity)(TEntity)
  name.vb: Remove(Of TEntity)(TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
    name: Remove<TEntity>
    nameWithType: DbContext.Remove<TEntity>
    fullName: Microsoft.EntityFrameworkCore.DbContext.Remove<TEntity>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)
    name: Remove(Of TEntity)
    nameWithType: DbContext.Remove(Of TEntity)
    fullName: Microsoft.EntityFrameworkCore.DbContext.Remove(Of TEntity)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.FromExpression``1(System.Linq.Expressions.Expression{System.Func{System.Linq.IQueryable{``0}}})
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.FromExpression``1(System.Linq.Expressions.Expression{System.Func{System.Linq.IQueryable{``0}}})
  isExternal: true
  name: FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>)
  nameWithType: DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>)
  fullName: Microsoft.EntityFrameworkCore.DbContext.FromExpression<TResult>(System.Linq.Expressions.Expression<System.Func<System.Linq.IQueryable<TResult>>>)
  nameWithType.vb: DbContext.FromExpression(Of TResult)(Expression(Of Func(Of IQueryable(Of TResult))))
  fullName.vb: Microsoft.EntityFrameworkCore.DbContext.FromExpression(Of TResult)(System.Linq.Expressions.Expression(Of System.Func(Of System.Linq.IQueryable(Of TResult))))
  name.vb: FromExpression(Of TResult)(Expression(Of Func(Of IQueryable(Of TResult))))
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FromExpression``1(System.Linq.Expressions.Expression{System.Func{System.Linq.IQueryable{``0}}})
    name: FromExpression<TResult>
    nameWithType: DbContext.FromExpression<TResult>
    fullName: Microsoft.EntityFrameworkCore.DbContext.FromExpression<TResult>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.FromExpression``1(System.Linq.Expressions.Expression{System.Func{System.Linq.IQueryable{``0}}})
    name: FromExpression(Of TResult)
    nameWithType: DbContext.FromExpression(Of TResult)
    fullName: Microsoft.EntityFrameworkCore.DbContext.FromExpression(Of TResult)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.#ctor*
  commentId: Overload:Altv_Roleplay.models.gtaContext.#ctor
  name: gtaContext
  nameWithType: gtaContext.gtaContext
  fullName: Altv_Roleplay.models.gtaContext.gtaContext
- uid: Microsoft.EntityFrameworkCore.DbContextOptions{Altv_Roleplay.models.gtaContext}
  commentId: T:Microsoft.EntityFrameworkCore.DbContextOptions{Altv_Roleplay.models.gtaContext}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbContextOptions`1
  name: DbContextOptions<gtaContext>
  nameWithType: DbContextOptions<gtaContext>
  fullName: Microsoft.EntityFrameworkCore.DbContextOptions<Altv_Roleplay.models.gtaContext>
  nameWithType.vb: DbContextOptions(Of gtaContext)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContextOptions(Of Altv_Roleplay.models.gtaContext)
  name.vb: DbContextOptions(Of gtaContext)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContextOptions`1
    name: DbContextOptions
    nameWithType: DbContextOptions
    fullName: Microsoft.EntityFrameworkCore.DbContextOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.gtaContext
    name: gtaContext
    nameWithType: gtaContext
    fullName: Altv_Roleplay.models.gtaContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContextOptions`1
    name: DbContextOptions
    nameWithType: DbContextOptions
    fullName: Microsoft.EntityFrameworkCore.DbContextOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.gtaContext
    name: gtaContext
    nameWithType: gtaContext
    fullName: Altv_Roleplay.models.gtaContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContextOptions`1
  commentId: T:Microsoft.EntityFrameworkCore.DbContextOptions`1
  isExternal: true
  name: DbContextOptions<TContext>
  nameWithType: DbContextOptions<TContext>
  fullName: Microsoft.EntityFrameworkCore.DbContextOptions<TContext>
  nameWithType.vb: DbContextOptions(Of TContext)
  fullName.vb: Microsoft.EntityFrameworkCore.DbContextOptions(Of TContext)
  name.vb: DbContextOptions(Of TContext)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContextOptions`1
    name: DbContextOptions
    nameWithType: DbContextOptions
    fullName: Microsoft.EntityFrameworkCore.DbContextOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContextOptions`1
    name: DbContextOptions
    nameWithType: DbContextOptions
    fullName: Microsoft.EntityFrameworkCore.DbContextOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Accounts*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Accounts
  name: Accounts
  nameWithType: gtaContext.Accounts
  fullName: Altv_Roleplay.models.gtaContext.Accounts
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Accounts}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Accounts}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Accounts>
  nameWithType: DbSet<Accounts>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Accounts>
  nameWithType.vb: DbSet(Of Accounts)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Accounts)
  name.vb: DbSet(Of Accounts)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Accounts
    name: Accounts
    nameWithType: Accounts
    fullName: Altv_Roleplay.models.Accounts
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Accounts
    name: Accounts
    nameWithType: Accounts
    fullName: Altv_Roleplay.models.Accounts
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbSet`1
  commentId: T:Microsoft.EntityFrameworkCore.DbSet`1
  isExternal: true
  name: DbSet<TEntity>
  nameWithType: DbSet<TEntity>
  fullName: Microsoft.EntityFrameworkCore.DbSet<TEntity>
  nameWithType.vb: DbSet(Of TEntity)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of TEntity)
  name.vb: DbSet(Of TEntity)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.AccountsCharacters*
  commentId: Overload:Altv_Roleplay.models.gtaContext.AccountsCharacters
  name: AccountsCharacters
  nameWithType: gtaContext.AccountsCharacters
  fullName: Altv_Roleplay.models.gtaContext.AccountsCharacters
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.AccountsCharacters}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.AccountsCharacters}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<AccountsCharacters>
  nameWithType: DbSet<AccountsCharacters>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.AccountsCharacters>
  nameWithType.vb: DbSet(Of AccountsCharacters)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.AccountsCharacters)
  name.vb: DbSet(Of AccountsCharacters)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.AccountsCharacters
    name: AccountsCharacters
    nameWithType: AccountsCharacters
    fullName: Altv_Roleplay.models.AccountsCharacters
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.AccountsCharacters
    name: AccountsCharacters
    nameWithType: AccountsCharacters
    fullName: Altv_Roleplay.models.AccountsCharacters
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Characters_Bank*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Characters_Bank
  name: Characters_Bank
  nameWithType: gtaContext.Characters_Bank
  fullName: Altv_Roleplay.models.gtaContext.Characters_Bank
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Characters_Bank}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Characters_Bank}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Characters_Bank>
  nameWithType: DbSet<Characters_Bank>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Characters_Bank>
  nameWithType.vb: DbSet(Of Characters_Bank)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Characters_Bank)
  name.vb: DbSet(Of Characters_Bank)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Characters_Bank
    name: Characters_Bank
    nameWithType: Characters_Bank
    fullName: Altv_Roleplay.models.Characters_Bank
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Characters_Bank
    name: Characters_Bank
    nameWithType: Characters_Bank
    fullName: Altv_Roleplay.models.Characters_Bank
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Characters_Skin*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Characters_Skin
  name: Characters_Skin
  nameWithType: gtaContext.Characters_Skin
  fullName: Altv_Roleplay.models.gtaContext.Characters_Skin
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Characters_Skin}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Characters_Skin}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Characters_Skin>
  nameWithType: DbSet<Characters_Skin>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Characters_Skin>
  nameWithType.vb: DbSet(Of Characters_Skin)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Characters_Skin)
  name.vb: DbSet(Of Characters_Skin)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Characters_Skin
    name: Characters_Skin
    nameWithType: Characters_Skin
    fullName: Altv_Roleplay.models.Characters_Skin
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Characters_Skin
    name: Characters_Skin
    nameWithType: Characters_Skin
    fullName: Altv_Roleplay.models.Characters_Skin
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Characters_LastPos*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Characters_LastPos
  name: Characters_LastPos
  nameWithType: gtaContext.Characters_LastPos
  fullName: Altv_Roleplay.models.gtaContext.Characters_LastPos
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Characters_LastPos}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Characters_LastPos}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Characters_LastPos>
  nameWithType: DbSet<Characters_LastPos>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Characters_LastPos>
  nameWithType.vb: DbSet(Of Characters_LastPos)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Characters_LastPos)
  name.vb: DbSet(Of Characters_LastPos)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Characters_LastPos
    name: Characters_LastPos
    nameWithType: Characters_LastPos
    fullName: Altv_Roleplay.models.Characters_LastPos
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Characters_LastPos
    name: Characters_LastPos
    nameWithType: Characters_LastPos
    fullName: Altv_Roleplay.models.Characters_LastPos
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Characters_Licenses*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Characters_Licenses
  name: Characters_Licenses
  nameWithType: gtaContext.Characters_Licenses
  fullName: Altv_Roleplay.models.gtaContext.Characters_Licenses
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Characters_Licenses}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Characters_Licenses}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Characters_Licenses>
  nameWithType: DbSet<Characters_Licenses>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Characters_Licenses>
  nameWithType.vb: DbSet(Of Characters_Licenses)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Characters_Licenses)
  name.vb: DbSet(Of Characters_Licenses)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Characters_Licenses
    name: Characters_Licenses
    nameWithType: Characters_Licenses
    fullName: Altv_Roleplay.models.Characters_Licenses
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Characters_Licenses
    name: Characters_Licenses
    nameWithType: Characters_Licenses
    fullName: Altv_Roleplay.models.Characters_Licenses
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Characters_Minijobs*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Characters_Minijobs
  name: Characters_Minijobs
  nameWithType: gtaContext.Characters_Minijobs
  fullName: Altv_Roleplay.models.gtaContext.Characters_Minijobs
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Characters_Minijobs}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Characters_Minijobs}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Characters_Minijobs>
  nameWithType: DbSet<Characters_Minijobs>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Characters_Minijobs>
  nameWithType.vb: DbSet(Of Characters_Minijobs)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Characters_Minijobs)
  name.vb: DbSet(Of Characters_Minijobs)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Characters_Minijobs
    name: Characters_Minijobs
    nameWithType: Characters_Minijobs
    fullName: Altv_Roleplay.models.Characters_Minijobs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Characters_Minijobs
    name: Characters_Minijobs
    nameWithType: Characters_Minijobs
    fullName: Altv_Roleplay.models.Characters_Minijobs
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Characters_Permissions*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Characters_Permissions
  name: Characters_Permissions
  nameWithType: gtaContext.Characters_Permissions
  fullName: Altv_Roleplay.models.gtaContext.Characters_Permissions
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Characters_Permissions}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Characters_Permissions}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Characters_Permissions>
  nameWithType: DbSet<Characters_Permissions>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Characters_Permissions>
  nameWithType.vb: DbSet(Of Characters_Permissions)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Characters_Permissions)
  name.vb: DbSet(Of Characters_Permissions)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Characters_Permissions
    name: Characters_Permissions
    nameWithType: Characters_Permissions
    fullName: Altv_Roleplay.models.Characters_Permissions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Characters_Permissions
    name: Characters_Permissions
    nameWithType: Characters_Permissions
    fullName: Altv_Roleplay.models.Characters_Permissions
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Characters_Inventory*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Characters_Inventory
  name: Characters_Inventory
  nameWithType: gtaContext.Characters_Inventory
  fullName: Altv_Roleplay.models.gtaContext.Characters_Inventory
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Characters_Inventory}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Characters_Inventory}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Characters_Inventory>
  nameWithType: DbSet<Characters_Inventory>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Characters_Inventory>
  nameWithType.vb: DbSet(Of Characters_Inventory)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Characters_Inventory)
  name.vb: DbSet(Of Characters_Inventory)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Characters_Inventory
    name: Characters_Inventory
    nameWithType: Characters_Inventory
    fullName: Altv_Roleplay.models.Characters_Inventory
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Characters_Inventory
    name: Characters_Inventory
    nameWithType: Characters_Inventory
    fullName: Altv_Roleplay.models.Characters_Inventory
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Characters_Wanteds*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Characters_Wanteds
  name: Characters_Wanteds
  nameWithType: gtaContext.Characters_Wanteds
  fullName: Altv_Roleplay.models.gtaContext.Characters_Wanteds
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Characters_Wanteds}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Characters_Wanteds}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Characters_Wanteds>
  nameWithType: DbSet<Characters_Wanteds>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Characters_Wanteds>
  nameWithType.vb: DbSet(Of Characters_Wanteds)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Characters_Wanteds)
  name.vb: DbSet(Of Characters_Wanteds)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Characters_Wanteds
    name: Characters_Wanteds
    nameWithType: Characters_Wanteds
    fullName: Altv_Roleplay.models.Characters_Wanteds
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Characters_Wanteds
    name: Characters_Wanteds
    nameWithType: Characters_Wanteds
    fullName: Altv_Roleplay.models.Characters_Wanteds
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Characters_Tablet_Apps*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Characters_Tablet_Apps
  name: Characters_Tablet_Apps
  nameWithType: gtaContext.Characters_Tablet_Apps
  fullName: Altv_Roleplay.models.gtaContext.Characters_Tablet_Apps
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Characters_Tablet_Apps}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Characters_Tablet_Apps}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Characters_Tablet_Apps>
  nameWithType: DbSet<Characters_Tablet_Apps>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Characters_Tablet_Apps>
  nameWithType.vb: DbSet(Of Characters_Tablet_Apps)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Characters_Tablet_Apps)
  name.vb: DbSet(Of Characters_Tablet_Apps)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Characters_Tablet_Apps
    name: Characters_Tablet_Apps
    nameWithType: Characters_Tablet_Apps
    fullName: Altv_Roleplay.models.Characters_Tablet_Apps
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Characters_Tablet_Apps
    name: Characters_Tablet_Apps
    nameWithType: Characters_Tablet_Apps
    fullName: Altv_Roleplay.models.Characters_Tablet_Apps
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.CharactersPhoneChats*
  commentId: Overload:Altv_Roleplay.models.gtaContext.CharactersPhoneChats
  name: CharactersPhoneChats
  nameWithType: gtaContext.CharactersPhoneChats
  fullName: Altv_Roleplay.models.gtaContext.CharactersPhoneChats
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.CharactersPhoneChats}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.CharactersPhoneChats}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<CharactersPhoneChats>
  nameWithType: DbSet<CharactersPhoneChats>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.CharactersPhoneChats>
  nameWithType.vb: DbSet(Of CharactersPhoneChats)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.CharactersPhoneChats)
  name.vb: DbSet(Of CharactersPhoneChats)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.CharactersPhoneChats
    name: CharactersPhoneChats
    nameWithType: CharactersPhoneChats
    fullName: Altv_Roleplay.models.CharactersPhoneChats
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.CharactersPhoneChats
    name: CharactersPhoneChats
    nameWithType: CharactersPhoneChats
    fullName: Altv_Roleplay.models.CharactersPhoneChats
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.CharactersPhoneChatMessages*
  commentId: Overload:Altv_Roleplay.models.gtaContext.CharactersPhoneChatMessages
  name: CharactersPhoneChatMessages
  nameWithType: gtaContext.CharactersPhoneChatMessages
  fullName: Altv_Roleplay.models.gtaContext.CharactersPhoneChatMessages
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.CharactersPhoneChatMessages}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.CharactersPhoneChatMessages}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<CharactersPhoneChatMessages>
  nameWithType: DbSet<CharactersPhoneChatMessages>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.CharactersPhoneChatMessages>
  nameWithType.vb: DbSet(Of CharactersPhoneChatMessages)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.CharactersPhoneChatMessages)
  name.vb: DbSet(Of CharactersPhoneChatMessages)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.CharactersPhoneChatMessages
    name: CharactersPhoneChatMessages
    nameWithType: CharactersPhoneChatMessages
    fullName: Altv_Roleplay.models.CharactersPhoneChatMessages
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.CharactersPhoneChatMessages
    name: CharactersPhoneChatMessages
    nameWithType: CharactersPhoneChatMessages
    fullName: Altv_Roleplay.models.CharactersPhoneChatMessages
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.CharactersPhoneContacts*
  commentId: Overload:Altv_Roleplay.models.gtaContext.CharactersPhoneContacts
  name: CharactersPhoneContacts
  nameWithType: gtaContext.CharactersPhoneContacts
  fullName: Altv_Roleplay.models.gtaContext.CharactersPhoneContacts
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.CharactersPhoneContacts}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.CharactersPhoneContacts}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<CharactersPhoneContacts>
  nameWithType: DbSet<CharactersPhoneContacts>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.CharactersPhoneContacts>
  nameWithType.vb: DbSet(Of CharactersPhoneContacts)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.CharactersPhoneContacts)
  name.vb: DbSet(Of CharactersPhoneContacts)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.CharactersPhoneContacts
    name: CharactersPhoneContacts
    nameWithType: CharactersPhoneContacts
    fullName: Altv_Roleplay.models.CharactersPhoneContacts
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.CharactersPhoneContacts
    name: CharactersPhoneContacts
    nameWithType: CharactersPhoneContacts
    fullName: Altv_Roleplay.models.CharactersPhoneContacts
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.CharactersPhoneVerlauf*
  commentId: Overload:Altv_Roleplay.models.gtaContext.CharactersPhoneVerlauf
  name: CharactersPhoneVerlauf
  nameWithType: gtaContext.CharactersPhoneVerlauf
  fullName: Altv_Roleplay.models.gtaContext.CharactersPhoneVerlauf
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.CharactersPhoneVerlauf}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.CharactersPhoneVerlauf}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<CharactersPhoneVerlauf>
  nameWithType: DbSet<CharactersPhoneVerlauf>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.CharactersPhoneVerlauf>
  nameWithType.vb: DbSet(Of CharactersPhoneVerlauf)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.CharactersPhoneVerlauf)
  name.vb: DbSet(Of CharactersPhoneVerlauf)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.CharactersPhoneVerlauf
    name: CharactersPhoneVerlauf
    nameWithType: CharactersPhoneVerlauf
    fullName: Altv_Roleplay.models.CharactersPhoneVerlauf
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.CharactersPhoneVerlauf
    name: CharactersPhoneVerlauf
    nameWithType: CharactersPhoneVerlauf
    fullName: Altv_Roleplay.models.CharactersPhoneVerlauf
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.CharactersOwnedClothes*
  commentId: Overload:Altv_Roleplay.models.gtaContext.CharactersOwnedClothes
  name: CharactersOwnedClothes
  nameWithType: gtaContext.CharactersOwnedClothes
  fullName: Altv_Roleplay.models.gtaContext.CharactersOwnedClothes
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.CharactersOwnedClothes}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.CharactersOwnedClothes}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<CharactersOwnedClothes>
  nameWithType: DbSet<CharactersOwnedClothes>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.CharactersOwnedClothes>
  nameWithType.vb: DbSet(Of CharactersOwnedClothes)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.CharactersOwnedClothes)
  name.vb: DbSet(Of CharactersOwnedClothes)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.CharactersOwnedClothes
    name: CharactersOwnedClothes
    nameWithType: CharactersOwnedClothes
    fullName: Altv_Roleplay.models.CharactersOwnedClothes
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.CharactersOwnedClothes
    name: CharactersOwnedClothes
    nameWithType: CharactersOwnedClothes
    fullName: Altv_Roleplay.models.CharactersOwnedClothes
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Characters_Tattoos*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Characters_Tattoos
  name: Characters_Tattoos
  nameWithType: gtaContext.Characters_Tattoos
  fullName: Altv_Roleplay.models.gtaContext.Characters_Tattoos
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Characters_Tattoos}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Characters_Tattoos}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Characters_Tattoos>
  nameWithType: DbSet<Characters_Tattoos>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Characters_Tattoos>
  nameWithType.vb: DbSet(Of Characters_Tattoos)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Characters_Tattoos)
  name.vb: DbSet(Of Characters_Tattoos)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Characters_Tattoos
    name: Characters_Tattoos
    nameWithType: Characters_Tattoos
    fullName: Altv_Roleplay.models.Characters_Tattoos
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Characters_Tattoos
    name: Characters_Tattoos
    nameWithType: Characters_Tattoos
    fullName: Altv_Roleplay.models.Characters_Tattoos
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_All_Vehicles*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_All_Vehicles
  name: Server_All_Vehicles
  nameWithType: gtaContext.Server_All_Vehicles
  fullName: Altv_Roleplay.models.gtaContext.Server_All_Vehicles
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_All_Vehicles}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_All_Vehicles}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_All_Vehicles>
  nameWithType: DbSet<Server_All_Vehicles>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_All_Vehicles>
  nameWithType.vb: DbSet(Of Server_All_Vehicles)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_All_Vehicles)
  name.vb: DbSet(Of Server_All_Vehicles)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_All_Vehicles
    name: Server_All_Vehicles
    nameWithType: Server_All_Vehicles
    fullName: Altv_Roleplay.models.Server_All_Vehicles
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_All_Vehicles
    name: Server_All_Vehicles
    nameWithType: Server_All_Vehicles
    fullName: Altv_Roleplay.models.Server_All_Vehicles
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Animations*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Animations
  name: Server_Animations
  nameWithType: gtaContext.Server_Animations
  fullName: Altv_Roleplay.models.gtaContext.Server_Animations
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Animations}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Animations}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Animations>
  nameWithType: DbSet<Server_Animations>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Animations>
  nameWithType.vb: DbSet(Of Server_Animations)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Animations)
  name.vb: DbSet(Of Server_Animations)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Animations
    name: Server_Animations
    nameWithType: Server_Animations
    fullName: Altv_Roleplay.models.Server_Animations
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Animations
    name: Server_Animations
    nameWithType: Server_Animations
    fullName: Altv_Roleplay.models.Server_Animations
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_ATM*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_ATM
  name: Server_ATM
  nameWithType: gtaContext.Server_ATM
  fullName: Altv_Roleplay.models.gtaContext.Server_ATM
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_ATM}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_ATM}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_ATM>
  nameWithType: DbSet<Server_ATM>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_ATM>
  nameWithType.vb: DbSet(Of Server_ATM)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_ATM)
  name.vb: DbSet(Of Server_ATM)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_ATM
    name: Server_ATM
    nameWithType: Server_ATM
    fullName: Altv_Roleplay.models.Server_ATM
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_ATM
    name: Server_ATM
    nameWithType: Server_ATM
    fullName: Altv_Roleplay.models.Server_ATM
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Banks*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Banks
  name: Server_Banks
  nameWithType: gtaContext.Server_Banks
  fullName: Altv_Roleplay.models.gtaContext.Server_Banks
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Banks}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Banks}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Banks>
  nameWithType: DbSet<Server_Banks>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Banks>
  nameWithType.vb: DbSet(Of Server_Banks)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Banks)
  name.vb: DbSet(Of Server_Banks)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Banks
    name: Server_Banks
    nameWithType: Server_Banks
    fullName: Altv_Roleplay.models.Server_Banks
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Banks
    name: Server_Banks
    nameWithType: Server_Banks
    fullName: Altv_Roleplay.models.Server_Banks
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Bank_Paper*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Bank_Paper
  name: Server_Bank_Paper
  nameWithType: gtaContext.Server_Bank_Paper
  fullName: Altv_Roleplay.models.gtaContext.Server_Bank_Paper
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Bank_Paper}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Bank_Paper}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Bank_Paper>
  nameWithType: DbSet<Server_Bank_Paper>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Bank_Paper>
  nameWithType.vb: DbSet(Of Server_Bank_Paper)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Bank_Paper)
  name.vb: DbSet(Of Server_Bank_Paper)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Bank_Paper
    name: Server_Bank_Paper
    nameWithType: Server_Bank_Paper
    fullName: Altv_Roleplay.models.Server_Bank_Paper
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Bank_Paper
    name: Server_Bank_Paper
    nameWithType: Server_Bank_Paper
    fullName: Altv_Roleplay.models.Server_Bank_Paper
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Blips*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Blips
  name: Server_Blips
  nameWithType: gtaContext.Server_Blips
  fullName: Altv_Roleplay.models.gtaContext.Server_Blips
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Blips}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Blips}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Blips>
  nameWithType: DbSet<Server_Blips>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Blips>
  nameWithType.vb: DbSet(Of Server_Blips)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Blips)
  name.vb: DbSet(Of Server_Blips)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Blips
    name: Server_Blips
    nameWithType: Server_Blips
    fullName: Altv_Roleplay.models.Server_Blips
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Blips
    name: Server_Blips
    nameWithType: Server_Blips
    fullName: Altv_Roleplay.models.Server_Blips
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Barbers*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Barbers
  name: Server_Barbers
  nameWithType: gtaContext.Server_Barbers
  fullName: Altv_Roleplay.models.gtaContext.Server_Barbers
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Barbers}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Barbers}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Barbers>
  nameWithType: DbSet<Server_Barbers>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Barbers>
  nameWithType.vb: DbSet(Of Server_Barbers)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Barbers)
  name.vb: DbSet(Of Server_Barbers)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Barbers
    name: Server_Barbers
    nameWithType: Server_Barbers
    fullName: Altv_Roleplay.models.Server_Barbers
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Barbers
    name: Server_Barbers
    nameWithType: Server_Barbers
    fullName: Altv_Roleplay.models.Server_Barbers
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Companys*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Companys
  name: Server_Companys
  nameWithType: gtaContext.Server_Companys
  fullName: Altv_Roleplay.models.gtaContext.Server_Companys
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Companys}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Companys}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Companys>
  nameWithType: DbSet<Server_Companys>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Companys>
  nameWithType.vb: DbSet(Of Server_Companys)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Companys)
  name.vb: DbSet(Of Server_Companys)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Companys
    name: Server_Companys
    nameWithType: Server_Companys
    fullName: Altv_Roleplay.models.Server_Companys
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Companys
    name: Server_Companys
    nameWithType: Server_Companys
    fullName: Altv_Roleplay.models.Server_Companys
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Company_Members*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Company_Members
  name: Server_Company_Members
  nameWithType: gtaContext.Server_Company_Members
  fullName: Altv_Roleplay.models.gtaContext.Server_Company_Members
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Company_Members}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Company_Members}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Company_Members>
  nameWithType: DbSet<Server_Company_Members>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Company_Members>
  nameWithType.vb: DbSet(Of Server_Company_Members)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Company_Members)
  name.vb: DbSet(Of Server_Company_Members)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Company_Members
    name: Server_Company_Members
    nameWithType: Server_Company_Members
    fullName: Altv_Roleplay.models.Server_Company_Members
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Company_Members
    name: Server_Company_Members
    nameWithType: Server_Company_Members
    fullName: Altv_Roleplay.models.Server_Company_Members
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Clothes_Shops*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Clothes_Shops
  name: Server_Clothes_Shops
  nameWithType: gtaContext.Server_Clothes_Shops
  fullName: Altv_Roleplay.models.gtaContext.Server_Clothes_Shops
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Clothes_Shops}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Clothes_Shops}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Clothes_Shops>
  nameWithType: DbSet<Server_Clothes_Shops>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Clothes_Shops>
  nameWithType.vb: DbSet(Of Server_Clothes_Shops)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Clothes_Shops)
  name.vb: DbSet(Of Server_Clothes_Shops)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Clothes_Shops
    name: Server_Clothes_Shops
    nameWithType: Server_Clothes_Shops
    fullName: Altv_Roleplay.models.Server_Clothes_Shops
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Clothes_Shops
    name: Server_Clothes_Shops
    nameWithType: Server_Clothes_Shops
    fullName: Altv_Roleplay.models.Server_Clothes_Shops
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Clothes_Shops_Items*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Clothes_Shops_Items
  name: Server_Clothes_Shops_Items
  nameWithType: gtaContext.Server_Clothes_Shops_Items
  fullName: Altv_Roleplay.models.gtaContext.Server_Clothes_Shops_Items
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Clothes_Shops_Items}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Clothes_Shops_Items}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Clothes_Shops_Items>
  nameWithType: DbSet<Server_Clothes_Shops_Items>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Clothes_Shops_Items>
  nameWithType.vb: DbSet(Of Server_Clothes_Shops_Items)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Clothes_Shops_Items)
  name.vb: DbSet(Of Server_Clothes_Shops_Items)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Clothes_Shops_Items
    name: Server_Clothes_Shops_Items
    nameWithType: Server_Clothes_Shops_Items
    fullName: Altv_Roleplay.models.Server_Clothes_Shops_Items
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Clothes_Shops_Items
    name: Server_Clothes_Shops_Items
    nameWithType: Server_Clothes_Shops_Items
    fullName: Altv_Roleplay.models.Server_Clothes_Shops_Items
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Doors*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Doors
  name: Server_Doors
  nameWithType: gtaContext.Server_Doors
  fullName: Altv_Roleplay.models.gtaContext.Server_Doors
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Doors}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Doors}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Doors>
  nameWithType: DbSet<Server_Doors>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Doors>
  nameWithType.vb: DbSet(Of Server_Doors)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Doors)
  name.vb: DbSet(Of Server_Doors)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Doors
    name: Server_Doors
    nameWithType: Server_Doors
    fullName: Altv_Roleplay.models.Server_Doors
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Doors
    name: Server_Doors
    nameWithType: Server_Doors
    fullName: Altv_Roleplay.models.Server_Doors
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Factions*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Factions
  name: Server_Factions
  nameWithType: gtaContext.Server_Factions
  fullName: Altv_Roleplay.models.gtaContext.Server_Factions
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Factions}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Factions}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Factions>
  nameWithType: DbSet<Server_Factions>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Factions>
  nameWithType.vb: DbSet(Of Server_Factions)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Factions)
  name.vb: DbSet(Of Server_Factions)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Factions
    name: Server_Factions
    nameWithType: Server_Factions
    fullName: Altv_Roleplay.models.Server_Factions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Factions
    name: Server_Factions
    nameWithType: Server_Factions
    fullName: Altv_Roleplay.models.Server_Factions
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Faction_Members*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Faction_Members
  name: Server_Faction_Members
  nameWithType: gtaContext.Server_Faction_Members
  fullName: Altv_Roleplay.models.gtaContext.Server_Faction_Members
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Faction_Members}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Faction_Members}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Faction_Members>
  nameWithType: DbSet<Server_Faction_Members>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Faction_Members>
  nameWithType.vb: DbSet(Of Server_Faction_Members)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Faction_Members)
  name.vb: DbSet(Of Server_Faction_Members)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Faction_Members
    name: Server_Faction_Members
    nameWithType: Server_Faction_Members
    fullName: Altv_Roleplay.models.Server_Faction_Members
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Faction_Members
    name: Server_Faction_Members
    nameWithType: Server_Faction_Members
    fullName: Altv_Roleplay.models.Server_Faction_Members
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Faction_Ranks*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Faction_Ranks
  name: Server_Faction_Ranks
  nameWithType: gtaContext.Server_Faction_Ranks
  fullName: Altv_Roleplay.models.gtaContext.Server_Faction_Ranks
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Faction_Ranks}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Faction_Ranks}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Faction_Ranks>
  nameWithType: DbSet<Server_Faction_Ranks>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Faction_Ranks>
  nameWithType.vb: DbSet(Of Server_Faction_Ranks)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Faction_Ranks)
  name.vb: DbSet(Of Server_Faction_Ranks)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Faction_Ranks
    name: Server_Faction_Ranks
    nameWithType: Server_Faction_Ranks
    fullName: Altv_Roleplay.models.Server_Faction_Ranks
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Faction_Ranks
    name: Server_Faction_Ranks
    nameWithType: Server_Faction_Ranks
    fullName: Altv_Roleplay.models.Server_Faction_Ranks
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Faction_Storage_Items*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Faction_Storage_Items
  name: Server_Faction_Storage_Items
  nameWithType: gtaContext.Server_Faction_Storage_Items
  fullName: Altv_Roleplay.models.gtaContext.Server_Faction_Storage_Items
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Faction_Storage_Items}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Faction_Storage_Items}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Faction_Storage_Items>
  nameWithType: DbSet<Server_Faction_Storage_Items>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Faction_Storage_Items>
  nameWithType.vb: DbSet(Of Server_Faction_Storage_Items)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Faction_Storage_Items)
  name.vb: DbSet(Of Server_Faction_Storage_Items)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Faction_Storage_Items
    name: Server_Faction_Storage_Items
    nameWithType: Server_Faction_Storage_Items
    fullName: Altv_Roleplay.models.Server_Faction_Storage_Items
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Faction_Storage_Items
    name: Server_Faction_Storage_Items
    nameWithType: Server_Faction_Storage_Items
    fullName: Altv_Roleplay.models.Server_Faction_Storage_Items
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Faction_Positions*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Faction_Positions
  name: Server_Faction_Positions
  nameWithType: gtaContext.Server_Faction_Positions
  fullName: Altv_Roleplay.models.gtaContext.Server_Faction_Positions
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Faction_Positions}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Faction_Positions}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Faction_Positions>
  nameWithType: DbSet<Server_Faction_Positions>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Faction_Positions>
  nameWithType.vb: DbSet(Of Server_Faction_Positions)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Faction_Positions)
  name.vb: DbSet(Of Server_Faction_Positions)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Faction_Positions
    name: Server_Faction_Positions
    nameWithType: Server_Faction_Positions
    fullName: Altv_Roleplay.models.Server_Faction_Positions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Faction_Positions
    name: Server_Faction_Positions
    nameWithType: Server_Faction_Positions
    fullName: Altv_Roleplay.models.Server_Faction_Positions
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Gangs*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Gangs
  name: Server_Gangs
  nameWithType: gtaContext.Server_Gangs
  fullName: Altv_Roleplay.models.gtaContext.Server_Gangs
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Gangs}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Gangs}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Gangs>
  nameWithType: DbSet<Server_Gangs>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Gangs>
  nameWithType.vb: DbSet(Of Server_Gangs)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Gangs)
  name.vb: DbSet(Of Server_Gangs)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Gangs
    name: Server_Gangs
    nameWithType: Server_Gangs
    fullName: Altv_Roleplay.models.Server_Gangs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Gangs
    name: Server_Gangs
    nameWithType: Server_Gangs
    fullName: Altv_Roleplay.models.Server_Gangs
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Gang_Members*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Gang_Members
  name: Server_Gang_Members
  nameWithType: gtaContext.Server_Gang_Members
  fullName: Altv_Roleplay.models.gtaContext.Server_Gang_Members
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Gang_Members}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Gang_Members}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Gang_Members>
  nameWithType: DbSet<Server_Gang_Members>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Gang_Members>
  nameWithType.vb: DbSet(Of Server_Gang_Members)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Gang_Members)
  name.vb: DbSet(Of Server_Gang_Members)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Gang_Members
    name: Server_Gang_Members
    nameWithType: Server_Gang_Members
    fullName: Altv_Roleplay.models.Server_Gang_Members
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Gang_Members
    name: Server_Gang_Members
    nameWithType: Server_Gang_Members
    fullName: Altv_Roleplay.models.Server_Gang_Members
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Gang_Ranks*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Gang_Ranks
  name: Server_Gang_Ranks
  nameWithType: gtaContext.Server_Gang_Ranks
  fullName: Altv_Roleplay.models.gtaContext.Server_Gang_Ranks
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Gang_Ranks}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Gang_Ranks}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Gang_Ranks>
  nameWithType: DbSet<Server_Gang_Ranks>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Gang_Ranks>
  nameWithType.vb: DbSet(Of Server_Gang_Ranks)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Gang_Ranks)
  name.vb: DbSet(Of Server_Gang_Ranks)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Gang_Ranks
    name: Server_Gang_Ranks
    nameWithType: Server_Gang_Ranks
    fullName: Altv_Roleplay.models.Server_Gang_Ranks
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Gang_Ranks
    name: Server_Gang_Ranks
    nameWithType: Server_Gang_Ranks
    fullName: Altv_Roleplay.models.Server_Gang_Ranks
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Gang_Storage_Items*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Gang_Storage_Items
  name: Server_Gang_Storage_Items
  nameWithType: gtaContext.Server_Gang_Storage_Items
  fullName: Altv_Roleplay.models.gtaContext.Server_Gang_Storage_Items
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Gang_Storage_Items}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Gang_Storage_Items}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Gang_Storage_Items>
  nameWithType: DbSet<Server_Gang_Storage_Items>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Gang_Storage_Items>
  nameWithType.vb: DbSet(Of Server_Gang_Storage_Items)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Gang_Storage_Items)
  name.vb: DbSet(Of Server_Gang_Storage_Items)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Gang_Storage_Items
    name: Server_Gang_Storage_Items
    nameWithType: Server_Gang_Storage_Items
    fullName: Altv_Roleplay.models.Server_Gang_Storage_Items
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Gang_Storage_Items
    name: Server_Gang_Storage_Items
    nameWithType: Server_Gang_Storage_Items
    fullName: Altv_Roleplay.models.Server_Gang_Storage_Items
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Gang_Positions*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Gang_Positions
  name: Server_Gang_Positions
  nameWithType: gtaContext.Server_Gang_Positions
  fullName: Altv_Roleplay.models.gtaContext.Server_Gang_Positions
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Gang_Positions}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Gang_Positions}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Gang_Positions>
  nameWithType: DbSet<Server_Gang_Positions>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Gang_Positions>
  nameWithType.vb: DbSet(Of Server_Gang_Positions)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Gang_Positions)
  name.vb: DbSet(Of Server_Gang_Positions)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Gang_Positions
    name: Server_Gang_Positions
    nameWithType: Server_Gang_Positions
    fullName: Altv_Roleplay.models.Server_Gang_Positions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Gang_Positions
    name: Server_Gang_Positions
    nameWithType: Server_Gang_Positions
    fullName: Altv_Roleplay.models.Server_Gang_Positions
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Farming_Producer*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Farming_Producer
  name: Server_Farming_Producer
  nameWithType: gtaContext.Server_Farming_Producer
  fullName: Altv_Roleplay.models.gtaContext.Server_Farming_Producer
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Farming_Producer}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Farming_Producer}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Farming_Producer>
  nameWithType: DbSet<Server_Farming_Producer>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Farming_Producer>
  nameWithType.vb: DbSet(Of Server_Farming_Producer)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Farming_Producer)
  name.vb: DbSet(Of Server_Farming_Producer)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Farming_Producer
    name: Server_Farming_Producer
    nameWithType: Server_Farming_Producer
    fullName: Altv_Roleplay.models.Server_Farming_Producer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Farming_Producer
    name: Server_Farming_Producer
    nameWithType: Server_Farming_Producer
    fullName: Altv_Roleplay.models.Server_Farming_Producer
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Farming_Spots*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Farming_Spots
  name: Server_Farming_Spots
  nameWithType: gtaContext.Server_Farming_Spots
  fullName: Altv_Roleplay.models.gtaContext.Server_Farming_Spots
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Farming_Spots}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Farming_Spots}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Farming_Spots>
  nameWithType: DbSet<Server_Farming_Spots>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Farming_Spots>
  nameWithType.vb: DbSet(Of Server_Farming_Spots)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Farming_Spots)
  name.vb: DbSet(Of Server_Farming_Spots)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Farming_Spots
    name: Server_Farming_Spots
    nameWithType: Server_Farming_Spots
    fullName: Altv_Roleplay.models.Server_Farming_Spots
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Farming_Spots
    name: Server_Farming_Spots
    nameWithType: Server_Farming_Spots
    fullName: Altv_Roleplay.models.Server_Farming_Spots
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Fuel_Stations*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Fuel_Stations
  name: Server_Fuel_Stations
  nameWithType: gtaContext.Server_Fuel_Stations
  fullName: Altv_Roleplay.models.gtaContext.Server_Fuel_Stations
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Fuel_Stations}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Fuel_Stations}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Fuel_Stations>
  nameWithType: DbSet<Server_Fuel_Stations>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Fuel_Stations>
  nameWithType.vb: DbSet(Of Server_Fuel_Stations)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Fuel_Stations)
  name.vb: DbSet(Of Server_Fuel_Stations)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Fuel_Stations
    name: Server_Fuel_Stations
    nameWithType: Server_Fuel_Stations
    fullName: Altv_Roleplay.models.Server_Fuel_Stations
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Fuel_Stations
    name: Server_Fuel_Stations
    nameWithType: Server_Fuel_Stations
    fullName: Altv_Roleplay.models.Server_Fuel_Stations
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Fuel_Spots*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Fuel_Spots
  name: Server_Fuel_Spots
  nameWithType: gtaContext.Server_Fuel_Spots
  fullName: Altv_Roleplay.models.gtaContext.Server_Fuel_Spots
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Fuel_Spots}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Fuel_Spots}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Fuel_Spots>
  nameWithType: DbSet<Server_Fuel_Spots>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Fuel_Spots>
  nameWithType.vb: DbSet(Of Server_Fuel_Spots)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Fuel_Spots)
  name.vb: DbSet(Of Server_Fuel_Spots)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Fuel_Spots
    name: Server_Fuel_Spots
    nameWithType: Server_Fuel_Spots
    fullName: Altv_Roleplay.models.Server_Fuel_Spots
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Fuel_Spots
    name: Server_Fuel_Spots
    nameWithType: Server_Fuel_Spots
    fullName: Altv_Roleplay.models.Server_Fuel_Spots
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Garages*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Garages
  name: Server_Garages
  nameWithType: gtaContext.Server_Garages
  fullName: Altv_Roleplay.models.gtaContext.Server_Garages
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Garages}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Garages}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Garages>
  nameWithType: DbSet<Server_Garages>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Garages>
  nameWithType.vb: DbSet(Of Server_Garages)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Garages)
  name.vb: DbSet(Of Server_Garages)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Garages
    name: Server_Garages
    nameWithType: Server_Garages
    fullName: Altv_Roleplay.models.Server_Garages
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Garages
    name: Server_Garages
    nameWithType: Server_Garages
    fullName: Altv_Roleplay.models.Server_Garages
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Garage_Slots*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Garage_Slots
  name: Server_Garage_Slots
  nameWithType: gtaContext.Server_Garage_Slots
  fullName: Altv_Roleplay.models.gtaContext.Server_Garage_Slots
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Garage_Slots}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Garage_Slots}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Garage_Slots>
  nameWithType: DbSet<Server_Garage_Slots>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Garage_Slots>
  nameWithType.vb: DbSet(Of Server_Garage_Slots)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Garage_Slots)
  name.vb: DbSet(Of Server_Garage_Slots)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Garage_Slots
    name: Server_Garage_Slots
    nameWithType: Server_Garage_Slots
    fullName: Altv_Roleplay.models.Server_Garage_Slots
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Garage_Slots
    name: Server_Garage_Slots
    nameWithType: Server_Garage_Slots
    fullName: Altv_Roleplay.models.Server_Garage_Slots
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Hotels*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Hotels
  name: Server_Hotels
  nameWithType: gtaContext.Server_Hotels
  fullName: Altv_Roleplay.models.gtaContext.Server_Hotels
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Hotels}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Hotels}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Hotels>
  nameWithType: DbSet<Server_Hotels>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Hotels>
  nameWithType.vb: DbSet(Of Server_Hotels)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Hotels)
  name.vb: DbSet(Of Server_Hotels)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Hotels
    name: Server_Hotels
    nameWithType: Server_Hotels
    fullName: Altv_Roleplay.models.Server_Hotels
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Hotels
    name: Server_Hotels
    nameWithType: Server_Hotels
    fullName: Altv_Roleplay.models.Server_Hotels
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Hotels_Apartments*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Hotels_Apartments
  name: Server_Hotels_Apartments
  nameWithType: gtaContext.Server_Hotels_Apartments
  fullName: Altv_Roleplay.models.gtaContext.Server_Hotels_Apartments
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Hotels_Apartments}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Hotels_Apartments}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Hotels_Apartments>
  nameWithType: DbSet<Server_Hotels_Apartments>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Hotels_Apartments>
  nameWithType.vb: DbSet(Of Server_Hotels_Apartments)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Hotels_Apartments)
  name.vb: DbSet(Of Server_Hotels_Apartments)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Hotels_Apartments
    name: Server_Hotels_Apartments
    nameWithType: Server_Hotels_Apartments
    fullName: Altv_Roleplay.models.Server_Hotels_Apartments
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Hotels_Apartments
    name: Server_Hotels_Apartments
    nameWithType: Server_Hotels_Apartments
    fullName: Altv_Roleplay.models.Server_Hotels_Apartments
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Hotels_Storages*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Hotels_Storages
  name: Server_Hotels_Storages
  nameWithType: gtaContext.Server_Hotels_Storages
  fullName: Altv_Roleplay.models.gtaContext.Server_Hotels_Storages
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Hotels_Storage}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Hotels_Storage}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Hotels_Storage>
  nameWithType: DbSet<Server_Hotels_Storage>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Hotels_Storage>
  nameWithType.vb: DbSet(Of Server_Hotels_Storage)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Hotels_Storage)
  name.vb: DbSet(Of Server_Hotels_Storage)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Hotels_Storage
    name: Server_Hotels_Storage
    nameWithType: Server_Hotels_Storage
    fullName: Altv_Roleplay.models.Server_Hotels_Storage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Hotels_Storage
    name: Server_Hotels_Storage
    nameWithType: Server_Hotels_Storage
    fullName: Altv_Roleplay.models.Server_Hotels_Storage
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Houses_Interiors*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Houses_Interiors
  name: Server_Houses_Interiors
  nameWithType: gtaContext.Server_Houses_Interiors
  fullName: Altv_Roleplay.models.gtaContext.Server_Houses_Interiors
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Houses_Interiors}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Houses_Interiors}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Houses_Interiors>
  nameWithType: DbSet<Server_Houses_Interiors>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Houses_Interiors>
  nameWithType.vb: DbSet(Of Server_Houses_Interiors)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Houses_Interiors)
  name.vb: DbSet(Of Server_Houses_Interiors)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Houses_Interiors
    name: Server_Houses_Interiors
    nameWithType: Server_Houses_Interiors
    fullName: Altv_Roleplay.models.Server_Houses_Interiors
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Houses_Interiors
    name: Server_Houses_Interiors
    nameWithType: Server_Houses_Interiors
    fullName: Altv_Roleplay.models.Server_Houses_Interiors
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Houses_Storages*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Houses_Storages
  name: Server_Houses_Storages
  nameWithType: gtaContext.Server_Houses_Storages
  fullName: Altv_Roleplay.models.gtaContext.Server_Houses_Storages
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Houses_Storage}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Houses_Storage}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Houses_Storage>
  nameWithType: DbSet<Server_Houses_Storage>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Houses_Storage>
  nameWithType.vb: DbSet(Of Server_Houses_Storage)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Houses_Storage)
  name.vb: DbSet(Of Server_Houses_Storage)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Houses_Storage
    name: Server_Houses_Storage
    nameWithType: Server_Houses_Storage
    fullName: Altv_Roleplay.models.Server_Houses_Storage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Houses_Storage
    name: Server_Houses_Storage
    nameWithType: Server_Houses_Storage
    fullName: Altv_Roleplay.models.Server_Houses_Storage
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Houses_Renters*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Houses_Renters
  name: Server_Houses_Renters
  nameWithType: gtaContext.Server_Houses_Renters
  fullName: Altv_Roleplay.models.gtaContext.Server_Houses_Renters
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Houses_Renter}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Houses_Renter}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Houses_Renter>
  nameWithType: DbSet<Server_Houses_Renter>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Houses_Renter>
  nameWithType.vb: DbSet(Of Server_Houses_Renter)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Houses_Renter)
  name.vb: DbSet(Of Server_Houses_Renter)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Houses_Renter
    name: Server_Houses_Renter
    nameWithType: Server_Houses_Renter
    fullName: Altv_Roleplay.models.Server_Houses_Renter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Houses_Renter
    name: Server_Houses_Renter
    nameWithType: Server_Houses_Renter
    fullName: Altv_Roleplay.models.Server_Houses_Renter
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Houses*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Houses
  name: Server_Houses
  nameWithType: gtaContext.Server_Houses
  fullName: Altv_Roleplay.models.gtaContext.Server_Houses
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Houses}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Houses}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Houses>
  nameWithType: DbSet<Server_Houses>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Houses>
  nameWithType.vb: DbSet(Of Server_Houses)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Houses)
  name.vb: DbSet(Of Server_Houses)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Houses
    name: Server_Houses
    nameWithType: Server_Houses
    fullName: Altv_Roleplay.models.Server_Houses
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Houses
    name: Server_Houses
    nameWithType: Server_Houses
    fullName: Altv_Roleplay.models.Server_Houses
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Items*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Items
  name: Server_Items
  nameWithType: gtaContext.Server_Items
  fullName: Altv_Roleplay.models.gtaContext.Server_Items
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Items}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Items}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Items>
  nameWithType: DbSet<Server_Items>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Items>
  nameWithType.vb: DbSet(Of Server_Items)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Items)
  name.vb: DbSet(Of Server_Items)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Items
    name: Server_Items
    nameWithType: Server_Items
    fullName: Altv_Roleplay.models.Server_Items
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Items
    name: Server_Items
    nameWithType: Server_Items
    fullName: Altv_Roleplay.models.Server_Items
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Jobs*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Jobs
  name: Server_Jobs
  nameWithType: gtaContext.Server_Jobs
  fullName: Altv_Roleplay.models.gtaContext.Server_Jobs
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Jobs}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Jobs}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Jobs>
  nameWithType: DbSet<Server_Jobs>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Jobs>
  nameWithType.vb: DbSet(Of Server_Jobs)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Jobs)
  name.vb: DbSet(Of Server_Jobs)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Jobs
    name: Server_Jobs
    nameWithType: Server_Jobs
    fullName: Altv_Roleplay.models.Server_Jobs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Jobs
    name: Server_Jobs
    nameWithType: Server_Jobs
    fullName: Altv_Roleplay.models.Server_Jobs
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Licenses*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Licenses
  name: Server_Licenses
  nameWithType: gtaContext.Server_Licenses
  fullName: Altv_Roleplay.models.gtaContext.Server_Licenses
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Licenses}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Licenses}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Licenses>
  nameWithType: DbSet<Server_Licenses>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Licenses>
  nameWithType.vb: DbSet(Of Server_Licenses)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Licenses)
  name.vb: DbSet(Of Server_Licenses)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Licenses
    name: Server_Licenses
    nameWithType: Server_Licenses
    fullName: Altv_Roleplay.models.Server_Licenses
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Licenses
    name: Server_Licenses
    nameWithType: Server_Licenses
    fullName: Altv_Roleplay.models.Server_Licenses
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Markers*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Markers
  name: Server_Markers
  nameWithType: gtaContext.Server_Markers
  fullName: Altv_Roleplay.models.gtaContext.Server_Markers
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Markers}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Markers}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Markers>
  nameWithType: DbSet<Server_Markers>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Markers>
  nameWithType.vb: DbSet(Of Server_Markers)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Markers)
  name.vb: DbSet(Of Server_Markers)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Markers
    name: Server_Markers
    nameWithType: Server_Markers
    fullName: Altv_Roleplay.models.Server_Markers
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Markers
    name: Server_Markers
    nameWithType: Server_Markers
    fullName: Altv_Roleplay.models.Server_Markers
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Minijob_Busdriver_Routes*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Minijob_Busdriver_Routes
  name: Server_Minijob_Busdriver_Routes
  nameWithType: gtaContext.Server_Minijob_Busdriver_Routes
  fullName: Altv_Roleplay.models.gtaContext.Server_Minijob_Busdriver_Routes
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Minijob_Busdriver_Routes}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Minijob_Busdriver_Routes}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Minijob_Busdriver_Routes>
  nameWithType: DbSet<Server_Minijob_Busdriver_Routes>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Minijob_Busdriver_Routes>
  nameWithType.vb: DbSet(Of Server_Minijob_Busdriver_Routes)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Minijob_Busdriver_Routes)
  name.vb: DbSet(Of Server_Minijob_Busdriver_Routes)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Minijob_Busdriver_Routes
    name: Server_Minijob_Busdriver_Routes
    nameWithType: Server_Minijob_Busdriver_Routes
    fullName: Altv_Roleplay.models.Server_Minijob_Busdriver_Routes
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Minijob_Busdriver_Routes
    name: Server_Minijob_Busdriver_Routes
    nameWithType: Server_Minijob_Busdriver_Routes
    fullName: Altv_Roleplay.models.Server_Minijob_Busdriver_Routes
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Minijob_Busdriver_Spots*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Minijob_Busdriver_Spots
  name: Server_Minijob_Busdriver_Spots
  nameWithType: gtaContext.Server_Minijob_Busdriver_Spots
  fullName: Altv_Roleplay.models.gtaContext.Server_Minijob_Busdriver_Spots
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Minijob_Busdriver_Spots}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Minijob_Busdriver_Spots}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Minijob_Busdriver_Spots>
  nameWithType: DbSet<Server_Minijob_Busdriver_Spots>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Minijob_Busdriver_Spots>
  nameWithType.vb: DbSet(Of Server_Minijob_Busdriver_Spots)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Minijob_Busdriver_Spots)
  name.vb: DbSet(Of Server_Minijob_Busdriver_Spots)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Minijob_Busdriver_Spots
    name: Server_Minijob_Busdriver_Spots
    nameWithType: Server_Minijob_Busdriver_Spots
    fullName: Altv_Roleplay.models.Server_Minijob_Busdriver_Spots
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Minijob_Busdriver_Spots
    name: Server_Minijob_Busdriver_Spots
    nameWithType: Server_Minijob_Busdriver_Spots
    fullName: Altv_Roleplay.models.Server_Minijob_Busdriver_Spots
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Minijob_Garbage_Spots*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Minijob_Garbage_Spots
  name: Server_Minijob_Garbage_Spots
  nameWithType: gtaContext.Server_Minijob_Garbage_Spots
  fullName: Altv_Roleplay.models.gtaContext.Server_Minijob_Garbage_Spots
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Minijob_Garbage_Spots}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Minijob_Garbage_Spots}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Minijob_Garbage_Spots>
  nameWithType: DbSet<Server_Minijob_Garbage_Spots>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Minijob_Garbage_Spots>
  nameWithType.vb: DbSet(Of Server_Minijob_Garbage_Spots)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Minijob_Garbage_Spots)
  name.vb: DbSet(Of Server_Minijob_Garbage_Spots)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Minijob_Garbage_Spots
    name: Server_Minijob_Garbage_Spots
    nameWithType: Server_Minijob_Garbage_Spots
    fullName: Altv_Roleplay.models.Server_Minijob_Garbage_Spots
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Minijob_Garbage_Spots
    name: Server_Minijob_Garbage_Spots
    nameWithType: Server_Minijob_Garbage_Spots
    fullName: Altv_Roleplay.models.Server_Minijob_Garbage_Spots
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Peds*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Peds
  name: Server_Peds
  nameWithType: gtaContext.Server_Peds
  fullName: Altv_Roleplay.models.gtaContext.Server_Peds
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Peds}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Peds}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Peds>
  nameWithType: DbSet<Server_Peds>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Peds>
  nameWithType.vb: DbSet(Of Server_Peds)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Peds)
  name.vb: DbSet(Of Server_Peds)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Peds
    name: Server_Peds
    nameWithType: Server_Peds
    fullName: Altv_Roleplay.models.Server_Peds
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Peds
    name: Server_Peds
    nameWithType: Server_Peds
    fullName: Altv_Roleplay.models.Server_Peds
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Shops*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Shops
  name: Server_Shops
  nameWithType: gtaContext.Server_Shops
  fullName: Altv_Roleplay.models.gtaContext.Server_Shops
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Shops}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Shops}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Shops>
  nameWithType: DbSet<Server_Shops>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Shops>
  nameWithType.vb: DbSet(Of Server_Shops)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Shops)
  name.vb: DbSet(Of Server_Shops)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Shops
    name: Server_Shops
    nameWithType: Server_Shops
    fullName: Altv_Roleplay.models.Server_Shops
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Shops
    name: Server_Shops
    nameWithType: Server_Shops
    fullName: Altv_Roleplay.models.Server_Shops
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Shops_Items*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Shops_Items
  name: Server_Shops_Items
  nameWithType: gtaContext.Server_Shops_Items
  fullName: Altv_Roleplay.models.gtaContext.Server_Shops_Items
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Shops_Items}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Shops_Items}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Shops_Items>
  nameWithType: DbSet<Server_Shops_Items>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Shops_Items>
  nameWithType.vb: DbSet(Of Server_Shops_Items)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Shops_Items)
  name.vb: DbSet(Of Server_Shops_Items)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Shops_Items
    name: Server_Shops_Items
    nameWithType: Server_Shops_Items
    fullName: Altv_Roleplay.models.Server_Shops_Items
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Shops_Items
    name: Server_Shops_Items
    nameWithType: Server_Shops_Items
    fullName: Altv_Roleplay.models.Server_Shops_Items
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Tablet_Apps*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Tablet_Apps
  name: Server_Tablet_Apps
  nameWithType: gtaContext.Server_Tablet_Apps
  fullName: Altv_Roleplay.models.gtaContext.Server_Tablet_Apps
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Tablet_Apps}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Tablet_Apps}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Tablet_Apps>
  nameWithType: DbSet<Server_Tablet_Apps>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Tablet_Apps>
  nameWithType.vb: DbSet(Of Server_Tablet_Apps)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Tablet_Apps)
  name.vb: DbSet(Of Server_Tablet_Apps)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Tablet_Apps
    name: Server_Tablet_Apps
    nameWithType: Server_Tablet_Apps
    fullName: Altv_Roleplay.models.Server_Tablet_Apps
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Tablet_Apps
    name: Server_Tablet_Apps
    nameWithType: Server_Tablet_Apps
    fullName: Altv_Roleplay.models.Server_Tablet_Apps
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Tablet_Events*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Tablet_Events
  name: Server_Tablet_Events
  nameWithType: gtaContext.Server_Tablet_Events
  fullName: Altv_Roleplay.models.gtaContext.Server_Tablet_Events
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Tablet_Events}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Tablet_Events}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Tablet_Events>
  nameWithType: DbSet<Server_Tablet_Events>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Tablet_Events>
  nameWithType.vb: DbSet(Of Server_Tablet_Events)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Tablet_Events)
  name.vb: DbSet(Of Server_Tablet_Events)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Tablet_Events
    name: Server_Tablet_Events
    nameWithType: Server_Tablet_Events
    fullName: Altv_Roleplay.models.Server_Tablet_Events
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Tablet_Events
    name: Server_Tablet_Events
    nameWithType: Server_Tablet_Events
    fullName: Altv_Roleplay.models.Server_Tablet_Events
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Tablet_Notes*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Tablet_Notes
  name: Server_Tablet_Notes
  nameWithType: gtaContext.Server_Tablet_Notes
  fullName: Altv_Roleplay.models.gtaContext.Server_Tablet_Notes
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Tablet_Notes}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Tablet_Notes}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Tablet_Notes>
  nameWithType: DbSet<Server_Tablet_Notes>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Tablet_Notes>
  nameWithType.vb: DbSet(Of Server_Tablet_Notes)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Tablet_Notes)
  name.vb: DbSet(Of Server_Tablet_Notes)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Tablet_Notes
    name: Server_Tablet_Notes
    nameWithType: Server_Tablet_Notes
    fullName: Altv_Roleplay.models.Server_Tablet_Notes
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Tablet_Notes
    name: Server_Tablet_Notes
    nameWithType: Server_Tablet_Notes
    fullName: Altv_Roleplay.models.Server_Tablet_Notes
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Teleports*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Teleports
  name: Server_Teleports
  nameWithType: gtaContext.Server_Teleports
  fullName: Altv_Roleplay.models.gtaContext.Server_Teleports
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Teleports}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Teleports}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Teleports>
  nameWithType: DbSet<Server_Teleports>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Teleports>
  nameWithType.vb: DbSet(Of Server_Teleports)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Teleports)
  name.vb: DbSet(Of Server_Teleports)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Teleports
    name: Server_Teleports
    nameWithType: Server_Teleports
    fullName: Altv_Roleplay.models.Server_Teleports
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Teleports
    name: Server_Teleports
    nameWithType: Server_Teleports
    fullName: Altv_Roleplay.models.Server_Teleports
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Vehicles*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Vehicles
  name: Server_Vehicles
  nameWithType: gtaContext.Server_Vehicles
  fullName: Altv_Roleplay.models.gtaContext.Server_Vehicles
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Vehicles}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Vehicles}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Vehicles>
  nameWithType: DbSet<Server_Vehicles>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Vehicles>
  nameWithType.vb: DbSet(Of Server_Vehicles)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Vehicles)
  name.vb: DbSet(Of Server_Vehicles)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Vehicles
    name: Server_Vehicles
    nameWithType: Server_Vehicles
    fullName: Altv_Roleplay.models.Server_Vehicles
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Vehicles
    name: Server_Vehicles
    nameWithType: Server_Vehicles
    fullName: Altv_Roleplay.models.Server_Vehicles
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Vehicles_Mods*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Vehicles_Mods
  name: Server_Vehicles_Mods
  nameWithType: gtaContext.Server_Vehicles_Mods
  fullName: Altv_Roleplay.models.gtaContext.Server_Vehicles_Mods
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Vehicles_Mod}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Vehicles_Mod}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Vehicles_Mod>
  nameWithType: DbSet<Server_Vehicles_Mod>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Vehicles_Mod>
  nameWithType.vb: DbSet(Of Server_Vehicles_Mod)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Vehicles_Mod)
  name.vb: DbSet(Of Server_Vehicles_Mod)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Vehicles_Mod
    name: Server_Vehicles_Mod
    nameWithType: Server_Vehicles_Mod
    fullName: Altv_Roleplay.models.Server_Vehicles_Mod
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Vehicles_Mod
    name: Server_Vehicles_Mod
    nameWithType: Server_Vehicles_Mod
    fullName: Altv_Roleplay.models.Server_Vehicles_Mod
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Vehicle_Items*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Vehicle_Items
  name: Server_Vehicle_Items
  nameWithType: gtaContext.Server_Vehicle_Items
  fullName: Altv_Roleplay.models.gtaContext.Server_Vehicle_Items
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Vehicle_Items}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Vehicle_Items}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Vehicle_Items>
  nameWithType: DbSet<Server_Vehicle_Items>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Vehicle_Items>
  nameWithType.vb: DbSet(Of Server_Vehicle_Items)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Vehicle_Items)
  name.vb: DbSet(Of Server_Vehicle_Items)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Vehicle_Items
    name: Server_Vehicle_Items
    nameWithType: Server_Vehicle_Items
    fullName: Altv_Roleplay.models.Server_Vehicle_Items
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Vehicle_Items
    name: Server_Vehicle_Items
    nameWithType: Server_Vehicle_Items
    fullName: Altv_Roleplay.models.Server_Vehicle_Items
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Vehicle_Shops*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Vehicle_Shops
  name: Server_Vehicle_Shops
  nameWithType: gtaContext.Server_Vehicle_Shops
  fullName: Altv_Roleplay.models.gtaContext.Server_Vehicle_Shops
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Vehicle_Shops}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Vehicle_Shops}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Vehicle_Shops>
  nameWithType: DbSet<Server_Vehicle_Shops>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Vehicle_Shops>
  nameWithType.vb: DbSet(Of Server_Vehicle_Shops)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Vehicle_Shops)
  name.vb: DbSet(Of Server_Vehicle_Shops)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Vehicle_Shops
    name: Server_Vehicle_Shops
    nameWithType: Server_Vehicle_Shops
    fullName: Altv_Roleplay.models.Server_Vehicle_Shops
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Vehicle_Shops
    name: Server_Vehicle_Shops
    nameWithType: Server_Vehicle_Shops
    fullName: Altv_Roleplay.models.Server_Vehicle_Shops
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Vehicle_Shops_Items*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Vehicle_Shops_Items
  name: Server_Vehicle_Shops_Items
  nameWithType: gtaContext.Server_Vehicle_Shops_Items
  fullName: Altv_Roleplay.models.gtaContext.Server_Vehicle_Shops_Items
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Vehicle_Shops_Items}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Vehicle_Shops_Items}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Vehicle_Shops_Items>
  nameWithType: DbSet<Server_Vehicle_Shops_Items>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Vehicle_Shops_Items>
  nameWithType.vb: DbSet(Of Server_Vehicle_Shops_Items)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Vehicle_Shops_Items)
  name.vb: DbSet(Of Server_Vehicle_Shops_Items)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Vehicle_Shops_Items
    name: Server_Vehicle_Shops_Items
    nameWithType: Server_Vehicle_Shops_Items
    fullName: Altv_Roleplay.models.Server_Vehicle_Shops_Items
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Vehicle_Shops_Items
    name: Server_Vehicle_Shops_Items
    nameWithType: Server_Vehicle_Shops_Items
    fullName: Altv_Roleplay.models.Server_Vehicle_Shops_Items
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_IdentifiedVehicles*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_IdentifiedVehicles
  name: Server_IdentifiedVehicles
  nameWithType: gtaContext.Server_IdentifiedVehicles
  fullName: Altv_Roleplay.models.gtaContext.Server_IdentifiedVehicles
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_IdentifiedVehicles}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_IdentifiedVehicles}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_IdentifiedVehicles>
  nameWithType: DbSet<Server_IdentifiedVehicles>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_IdentifiedVehicles>
  nameWithType.vb: DbSet(Of Server_IdentifiedVehicles)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_IdentifiedVehicles)
  name.vb: DbSet(Of Server_IdentifiedVehicles)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_IdentifiedVehicles
    name: Server_IdentifiedVehicles
    nameWithType: Server_IdentifiedVehicles
    fullName: Altv_Roleplay.models.Server_IdentifiedVehicles
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_IdentifiedVehicles
    name: Server_IdentifiedVehicles
    nameWithType: Server_IdentifiedVehicles
    fullName: Altv_Roleplay.models.Server_IdentifiedVehicles
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Wanteds*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Wanteds
  name: Server_Wanteds
  nameWithType: gtaContext.Server_Wanteds
  fullName: Altv_Roleplay.models.gtaContext.Server_Wanteds
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Wanteds}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Wanteds}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Wanteds>
  nameWithType: DbSet<Server_Wanteds>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Wanteds>
  nameWithType.vb: DbSet(Of Server_Wanteds)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Wanteds)
  name.vb: DbSet(Of Server_Wanteds)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Wanteds
    name: Server_Wanteds
    nameWithType: Server_Wanteds
    fullName: Altv_Roleplay.models.Server_Wanteds
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Wanteds
    name: Server_Wanteds
    nameWithType: Server_Wanteds
    fullName: Altv_Roleplay.models.Server_Wanteds
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Tattoos*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Tattoos
  name: Server_Tattoos
  nameWithType: gtaContext.Server_Tattoos
  fullName: Altv_Roleplay.models.gtaContext.Server_Tattoos
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Tattoos}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Tattoos}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Tattoos>
  nameWithType: DbSet<Server_Tattoos>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Tattoos>
  nameWithType.vb: DbSet(Of Server_Tattoos)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Tattoos)
  name.vb: DbSet(Of Server_Tattoos)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Tattoos
    name: Server_Tattoos
    nameWithType: Server_Tattoos
    fullName: Altv_Roleplay.models.Server_Tattoos
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Tattoos
    name: Server_Tattoos
    nameWithType: Server_Tattoos
    fullName: Altv_Roleplay.models.Server_Tattoos
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Tattoo_Shops*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Tattoo_Shops
  name: Server_Tattoo_Shops
  nameWithType: gtaContext.Server_Tattoo_Shops
  fullName: Altv_Roleplay.models.gtaContext.Server_Tattoo_Shops
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Tattoo_Shops}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Tattoo_Shops}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Tattoo_Shops>
  nameWithType: DbSet<Server_Tattoo_Shops>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Tattoo_Shops>
  nameWithType.vb: DbSet(Of Server_Tattoo_Shops)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Tattoo_Shops)
  name.vb: DbSet(Of Server_Tattoo_Shops)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Tattoo_Shops
    name: Server_Tattoo_Shops
    nameWithType: Server_Tattoo_Shops
    fullName: Altv_Roleplay.models.Server_Tattoo_Shops
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Tattoo_Shops
    name: Server_Tattoo_Shops
    nameWithType: Server_Tattoo_Shops
    fullName: Altv_Roleplay.models.Server_Tattoo_Shops
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Faction_Dispatch*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Faction_Dispatch
  name: Server_Faction_Dispatch
  nameWithType: gtaContext.Server_Faction_Dispatch
  fullName: Altv_Roleplay.models.gtaContext.Server_Faction_Dispatch
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.ServerFaction_Dispatch}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.ServerFaction_Dispatch}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<ServerFaction_Dispatch>
  nameWithType: DbSet<ServerFaction_Dispatch>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.ServerFaction_Dispatch>
  nameWithType.vb: DbSet(Of ServerFaction_Dispatch)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.ServerFaction_Dispatch)
  name.vb: DbSet(Of ServerFaction_Dispatch)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.ServerFaction_Dispatch
    name: ServerFaction_Dispatch
    nameWithType: ServerFaction_Dispatch
    fullName: Altv_Roleplay.models.ServerFaction_Dispatch
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.ServerFaction_Dispatch
    name: ServerFaction_Dispatch
    nameWithType: ServerFaction_Dispatch
    fullName: Altv_Roleplay.models.ServerFaction_Dispatch
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.WeedPot*
  commentId: Overload:Altv_Roleplay.models.gtaContext.WeedPot
  name: WeedPot
  nameWithType: gtaContext.WeedPot
  fullName: Altv_Roleplay.models.gtaContext.WeedPot
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.Handler.WeedPot}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.Handler.WeedPot}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<WeedPot>
  nameWithType: DbSet<WeedPot>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.Handler.WeedPot>
  nameWithType.vb: DbSet(Of WeedPot)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.Handler.WeedPot)
  name.vb: DbSet(Of WeedPot)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.Handler.WeedPot
    name: WeedPot
    nameWithType: WeedPot
    fullName: Altv_Roleplay.Handler.WeedPot
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.Handler.WeedPot
    name: WeedPot
    nameWithType: WeedPot
    fullName: Altv_Roleplay.Handler.WeedPot
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Dropped_Items*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Dropped_Items
  name: Server_Dropped_Items
  nameWithType: gtaContext.Server_Dropped_Items
  fullName: Altv_Roleplay.models.gtaContext.Server_Dropped_Items
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Dropped_Items}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Dropped_Items}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Dropped_Items>
  nameWithType: DbSet<Server_Dropped_Items>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Dropped_Items>
  nameWithType.vb: DbSet(Of Server_Dropped_Items)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Dropped_Items)
  name.vb: DbSet(Of Server_Dropped_Items)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Dropped_Items
    name: Server_Dropped_Items
    nameWithType: Server_Dropped_Items
    fullName: Altv_Roleplay.models.Server_Dropped_Items
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Dropped_Items
    name: Server_Dropped_Items
    nameWithType: Server_Dropped_Items
    fullName: Altv_Roleplay.models.Server_Dropped_Items
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Storages*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Storages
  name: Server_Storages
  nameWithType: gtaContext.Server_Storages
  fullName: Altv_Roleplay.models.gtaContext.Server_Storages
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Storages}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Storages}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Storages>
  nameWithType: DbSet<Server_Storages>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Storages>
  nameWithType.vb: DbSet(Of Server_Storages)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Storages)
  name.vb: DbSet(Of Server_Storages)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Storages
    name: Server_Storages
    nameWithType: Server_Storages
    fullName: Altv_Roleplay.models.Server_Storages
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Storages
    name: Server_Storages
    nameWithType: Server_Storages
    fullName: Altv_Roleplay.models.Server_Storages
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.Server_Clothes_Storages*
  commentId: Overload:Altv_Roleplay.models.gtaContext.Server_Clothes_Storages
  name: Server_Clothes_Storages
  nameWithType: gtaContext.Server_Clothes_Storages
  fullName: Altv_Roleplay.models.gtaContext.Server_Clothes_Storages
- uid: Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Clothes_Storages}
  commentId: T:Microsoft.EntityFrameworkCore.DbSet{Altv_Roleplay.models.Server_Clothes_Storages}
  parent: Microsoft.EntityFrameworkCore
  definition: Microsoft.EntityFrameworkCore.DbSet`1
  name: DbSet<Server_Clothes_Storages>
  nameWithType: DbSet<Server_Clothes_Storages>
  fullName: Microsoft.EntityFrameworkCore.DbSet<Altv_Roleplay.models.Server_Clothes_Storages>
  nameWithType.vb: DbSet(Of Server_Clothes_Storages)
  fullName.vb: Microsoft.EntityFrameworkCore.DbSet(Of Altv_Roleplay.models.Server_Clothes_Storages)
  name.vb: DbSet(Of Server_Clothes_Storages)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.models.Server_Clothes_Storages
    name: Server_Clothes_Storages
    nameWithType: Server_Clothes_Storages
    fullName: Altv_Roleplay.models.Server_Clothes_Storages
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: Microsoft.EntityFrameworkCore.DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.models.Server_Clothes_Storages
    name: Server_Clothes_Storages
    nameWithType: Server_Clothes_Storages
    fullName: Altv_Roleplay.models.Server_Clothes_Storages
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: OnConfiguring(DbContextOptionsBuilder)
  nameWithType: DbContext.OnConfiguring(DbContextOptionsBuilder)
  fullName: Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
    name: OnConfiguring
    nameWithType: DbContext.OnConfiguring
    fullName: Microsoft.EntityFrameworkCore.DbContext.OnConfiguring
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
    name: DbContextOptionsBuilder
    nameWithType: DbContextOptionsBuilder
    fullName: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
    name: OnConfiguring
    nameWithType: DbContext.OnConfiguring
    fullName: Microsoft.EntityFrameworkCore.DbContext.OnConfiguring
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
    name: DbContextOptionsBuilder
    nameWithType: DbContextOptionsBuilder
    fullName: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.OnConfiguring*
  commentId: Overload:Altv_Roleplay.models.gtaContext.OnConfiguring
  name: OnConfiguring
  nameWithType: gtaContext.OnConfiguring
  fullName: Altv_Roleplay.models.gtaContext.OnConfiguring
- uid: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
  commentId: T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
  parent: Microsoft.EntityFrameworkCore
  isExternal: true
  name: DbContextOptionsBuilder
  nameWithType: DbContextOptionsBuilder
  fullName: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
- uid: Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  commentId: M:Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  parent: Microsoft.EntityFrameworkCore.DbContext
  isExternal: true
  name: OnModelCreating(ModelBuilder)
  nameWithType: DbContext.OnModelCreating(ModelBuilder)
  fullName: Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  spec.csharp:
  - uid: Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
    name: OnModelCreating
    nameWithType: DbContext.OnModelCreating
    fullName: Microsoft.EntityFrameworkCore.DbContext.OnModelCreating
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ModelBuilder
    name: ModelBuilder
    nameWithType: ModelBuilder
    fullName: Microsoft.EntityFrameworkCore.ModelBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
    name: OnModelCreating
    nameWithType: DbContext.OnModelCreating
    fullName: Microsoft.EntityFrameworkCore.DbContext.OnModelCreating
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.EntityFrameworkCore.ModelBuilder
    name: ModelBuilder
    nameWithType: ModelBuilder
    fullName: Microsoft.EntityFrameworkCore.ModelBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Altv_Roleplay.models.gtaContext.OnModelCreating*
  commentId: Overload:Altv_Roleplay.models.gtaContext.OnModelCreating
  name: OnModelCreating
  nameWithType: gtaContext.OnModelCreating
  fullName: Altv_Roleplay.models.gtaContext.OnModelCreating
- uid: Microsoft.EntityFrameworkCore.ModelBuilder
  commentId: T:Microsoft.EntityFrameworkCore.ModelBuilder
  parent: Microsoft.EntityFrameworkCore
  isExternal: true
  name: ModelBuilder
  nameWithType: ModelBuilder
  fullName: Microsoft.EntityFrameworkCore.ModelBuilder
