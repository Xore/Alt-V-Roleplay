### YamlMime:ManagedReference
items:
- uid: Altv_Roleplay.models.Accounts
  commentId: T:Altv_Roleplay.models.Accounts
  id: Accounts
  parent: Altv_Roleplay.models
  children:
  - Altv_Roleplay.models.Accounts.adminLevel
  - Altv_Roleplay.models.Accounts.ban
  - Altv_Roleplay.models.Accounts.banReason
  - Altv_Roleplay.models.Accounts.hardwareId
  - Altv_Roleplay.models.Accounts.Online
  - Altv_Roleplay.models.Accounts.playerid
  - Altv_Roleplay.models.Accounts.playerName
  - Altv_Roleplay.models.Accounts.socialClub
  - Altv_Roleplay.models.Accounts.whitelisted
  langs:
  - csharp
  - vb
  name: Accounts
  nameWithType: Accounts
  fullName: Altv_Roleplay.models.Accounts
  type: Class
  source:
    remote:
      path: Server/Altv-Roleplay/models/Accounts.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Accounts
    path: models/Accounts.cs
    startLine: 8
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public class Accounts
    content.vb: Public Class Accounts
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Altv_Roleplay.models.Accounts.playerid
  commentId: P:Altv_Roleplay.models.Accounts.playerid
  id: playerid
  parent: Altv_Roleplay.models.Accounts
  langs:
  - csharp
  - vb
  name: playerid
  nameWithType: Accounts.playerid
  fullName: Altv_Roleplay.models.Accounts.playerid
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/Accounts.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: playerid
    path: models/Accounts.cs
    startLine: 10
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: >-
      [Key]

      [DatabaseGenerated(DatabaseGeneratedOption.Identity)]

      public int playerid { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Key>

      <DatabaseGenerated(DatabaseGeneratedOption.Identity)>

      Public Property playerid As Integer
  overload: Altv_Roleplay.models.Accounts.playerid*
  attributes:
  - type: System.ComponentModel.DataAnnotations.KeyAttribute
    ctor: System.ComponentModel.DataAnnotations.KeyAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute.#ctor(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption)
    arguments:
    - type: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Altv_Roleplay.models.Accounts.playerName
  commentId: P:Altv_Roleplay.models.Accounts.playerName
  id: playerName
  parent: Altv_Roleplay.models.Accounts
  langs:
  - csharp
  - vb
  name: playerName
  nameWithType: Accounts.playerName
  fullName: Altv_Roleplay.models.Accounts.playerName
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/Accounts.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: playerName
    path: models/Accounts.cs
    startLine: 13
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public string playerName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property playerName As String
  overload: Altv_Roleplay.models.Accounts.playerName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Altv_Roleplay.models.Accounts.socialClub
  commentId: P:Altv_Roleplay.models.Accounts.socialClub
  id: socialClub
  parent: Altv_Roleplay.models.Accounts
  langs:
  - csharp
  - vb
  name: socialClub
  nameWithType: Accounts.socialClub
  fullName: Altv_Roleplay.models.Accounts.socialClub
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/Accounts.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: socialClub
    path: models/Accounts.cs
    startLine: 14
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public ulong socialClub { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public Property socialClub As ULong
  overload: Altv_Roleplay.models.Accounts.socialClub*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Altv_Roleplay.models.Accounts.hardwareId
  commentId: P:Altv_Roleplay.models.Accounts.hardwareId
  id: hardwareId
  parent: Altv_Roleplay.models.Accounts
  langs:
  - csharp
  - vb
  name: hardwareId
  nameWithType: Accounts.hardwareId
  fullName: Altv_Roleplay.models.Accounts.hardwareId
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/Accounts.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: hardwareId
    path: models/Accounts.cs
    startLine: 15
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public ulong hardwareId { get; set; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public Property hardwareId As ULong
  overload: Altv_Roleplay.models.Accounts.hardwareId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Altv_Roleplay.models.Accounts.Online
  commentId: P:Altv_Roleplay.models.Accounts.Online
  id: Online
  parent: Altv_Roleplay.models.Accounts
  langs:
  - csharp
  - vb
  name: Online
  nameWithType: Accounts.Online
  fullName: Altv_Roleplay.models.Accounts.Online
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/Accounts.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Online
    path: models/Accounts.cs
    startLine: 16
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public int Online { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Online As Integer
  overload: Altv_Roleplay.models.Accounts.Online*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Altv_Roleplay.models.Accounts.whitelisted
  commentId: P:Altv_Roleplay.models.Accounts.whitelisted
  id: whitelisted
  parent: Altv_Roleplay.models.Accounts
  langs:
  - csharp
  - vb
  name: whitelisted
  nameWithType: Accounts.whitelisted
  fullName: Altv_Roleplay.models.Accounts.whitelisted
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/Accounts.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: whitelisted
    path: models/Accounts.cs
    startLine: 17
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public bool whitelisted { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property whitelisted As Boolean
  overload: Altv_Roleplay.models.Accounts.whitelisted*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Altv_Roleplay.models.Accounts.ban
  commentId: P:Altv_Roleplay.models.Accounts.ban
  id: ban
  parent: Altv_Roleplay.models.Accounts
  langs:
  - csharp
  - vb
  name: ban
  nameWithType: Accounts.ban
  fullName: Altv_Roleplay.models.Accounts.ban
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/Accounts.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: ban
    path: models/Accounts.cs
    startLine: 18
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public bool ban { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ban As Boolean
  overload: Altv_Roleplay.models.Accounts.ban*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Altv_Roleplay.models.Accounts.banReason
  commentId: P:Altv_Roleplay.models.Accounts.banReason
  id: banReason
  parent: Altv_Roleplay.models.Accounts
  langs:
  - csharp
  - vb
  name: banReason
  nameWithType: Accounts.banReason
  fullName: Altv_Roleplay.models.Accounts.banReason
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/Accounts.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: banReason
    path: models/Accounts.cs
    startLine: 19
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public string banReason { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property banReason As String
  overload: Altv_Roleplay.models.Accounts.banReason*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Altv_Roleplay.models.Accounts.adminLevel
  commentId: P:Altv_Roleplay.models.Accounts.adminLevel
  id: adminLevel
  parent: Altv_Roleplay.models.Accounts
  langs:
  - csharp
  - vb
  name: adminLevel
  nameWithType: Accounts.adminLevel
  fullName: Altv_Roleplay.models.Accounts.adminLevel
  type: Property
  source:
    remote:
      path: Server/Altv-Roleplay/models/Accounts.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: adminLevel
    path: models/Accounts.cs
    startLine: 20
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.models
  syntax:
    content: public int adminLevel { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property adminLevel As Integer
  overload: Altv_Roleplay.models.Accounts.adminLevel*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Altv_Roleplay.models
  commentId: N:Altv_Roleplay.models
  name: Altv_Roleplay.models
  nameWithType: Altv_Roleplay.models
  fullName: Altv_Roleplay.models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Altv_Roleplay.models.Accounts.playerid*
  commentId: Overload:Altv_Roleplay.models.Accounts.playerid
  name: playerid
  nameWithType: Accounts.playerid
  fullName: Altv_Roleplay.models.Accounts.playerid
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Altv_Roleplay.models.Accounts.playerName*
  commentId: Overload:Altv_Roleplay.models.Accounts.playerName
  name: playerName
  nameWithType: Accounts.playerName
  fullName: Altv_Roleplay.models.Accounts.playerName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Altv_Roleplay.models.Accounts.socialClub*
  commentId: Overload:Altv_Roleplay.models.Accounts.socialClub
  name: socialClub
  nameWithType: Accounts.socialClub
  fullName: Altv_Roleplay.models.Accounts.socialClub
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Altv_Roleplay.models.Accounts.hardwareId*
  commentId: Overload:Altv_Roleplay.models.Accounts.hardwareId
  name: hardwareId
  nameWithType: Accounts.hardwareId
  fullName: Altv_Roleplay.models.Accounts.hardwareId
- uid: Altv_Roleplay.models.Accounts.Online*
  commentId: Overload:Altv_Roleplay.models.Accounts.Online
  name: Online
  nameWithType: Accounts.Online
  fullName: Altv_Roleplay.models.Accounts.Online
- uid: Altv_Roleplay.models.Accounts.whitelisted*
  commentId: Overload:Altv_Roleplay.models.Accounts.whitelisted
  name: whitelisted
  nameWithType: Accounts.whitelisted
  fullName: Altv_Roleplay.models.Accounts.whitelisted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Altv_Roleplay.models.Accounts.ban*
  commentId: Overload:Altv_Roleplay.models.Accounts.ban
  name: ban
  nameWithType: Accounts.ban
  fullName: Altv_Roleplay.models.Accounts.ban
- uid: Altv_Roleplay.models.Accounts.banReason*
  commentId: Overload:Altv_Roleplay.models.Accounts.banReason
  name: banReason
  nameWithType: Accounts.banReason
  fullName: Altv_Roleplay.models.Accounts.banReason
- uid: Altv_Roleplay.models.Accounts.adminLevel*
  commentId: Overload:Altv_Roleplay.models.Accounts.adminLevel
  name: adminLevel
  nameWithType: Accounts.adminLevel
  fullName: Altv_Roleplay.models.Accounts.adminLevel
