### YamlMime:ManagedReference
items:
- uid: Altv_Roleplay.EntityStreamer.PedStreamer
  commentId: T:Altv_Roleplay.EntityStreamer.PedStreamer
  id: PedStreamer
  parent: Altv_Roleplay.EntityStreamer
  children:
  - Altv_Roleplay.EntityStreamer.PedStreamer.Create(System.String,System.Numerics.Vector3,System.Numerics.Vector3,System.Int32,System.UInt32)
  - Altv_Roleplay.EntityStreamer.PedStreamer.Delete(Altv_Roleplay.EntityStreamer.Ped)
  - Altv_Roleplay.EntityStreamer.PedStreamer.Delete(System.UInt64)
  - Altv_Roleplay.EntityStreamer.PedStreamer.DestroyAllPeds
  - Altv_Roleplay.EntityStreamer.PedStreamer.GetAllPeds
  - Altv_Roleplay.EntityStreamer.PedStreamer.GetClosestPed(System.Numerics.Vector3)
  - Altv_Roleplay.EntityStreamer.PedStreamer.GetPed(System.UInt64)
  langs:
  - csharp
  - vb
  name: PedStreamer
  nameWithType: PedStreamer
  fullName: Altv_Roleplay.EntityStreamer.PedStreamer
  type: Class
  source:
    remote:
      path: Server/Altv-Roleplay/EntityStreamer/PedManager.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: PedStreamer
    path: EntityStreamer/PedManager.cs
    startLine: 104
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.EntityStreamer
  syntax:
    content: public static class PedStreamer
    content.vb: Public Module PedStreamer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Altv_Roleplay.EntityStreamer.PedStreamer.Create(System.String,System.Numerics.Vector3,System.Numerics.Vector3,System.Int32,System.UInt32)
  commentId: M:Altv_Roleplay.EntityStreamer.PedStreamer.Create(System.String,System.Numerics.Vector3,System.Numerics.Vector3,System.Int32,System.UInt32)
  id: Create(System.String,System.Numerics.Vector3,System.Numerics.Vector3,System.Int32,System.UInt32)
  parent: Altv_Roleplay.EntityStreamer.PedStreamer
  langs:
  - csharp
  - vb
  name: Create(String, Vector3, Vector3, Int32, UInt32)
  nameWithType: PedStreamer.Create(String, Vector3, Vector3, Int32, UInt32)
  fullName: Altv_Roleplay.EntityStreamer.PedStreamer.Create(System.String, System.Numerics.Vector3, System.Numerics.Vector3, System.Int32, System.UInt32)
  type: Method
  source:
    remote:
      path: Server/Altv-Roleplay/EntityStreamer/PedManager.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Create
    path: EntityStreamer/PedManager.cs
    startLine: 109
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.EntityStreamer
  summary: "\nCreate Ped\n"
  example: []
  syntax:
    content: public static Ped Create(string model, Vector3 position, Vector3 rotation, int dimension = 0, uint streamRange = 100U)
    parameters:
    - id: model
      type: System.String
    - id: position
      type: System.Numerics.Vector3
    - id: rotation
      type: System.Numerics.Vector3
    - id: dimension
      type: System.Int32
    - id: streamRange
      type: System.UInt32
    return:
      type: Altv_Roleplay.EntityStreamer.Ped
    content.vb: Public Shared Function Create(model As String, position As Vector3, rotation As Vector3, dimension As Integer = 0, streamRange As UInteger = 100UI) As Ped
  overload: Altv_Roleplay.EntityStreamer.PedStreamer.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Altv_Roleplay.EntityStreamer.PedStreamer.Delete(System.UInt64)
  commentId: M:Altv_Roleplay.EntityStreamer.PedStreamer.Delete(System.UInt64)
  id: Delete(System.UInt64)
  parent: Altv_Roleplay.EntityStreamer.PedStreamer
  langs:
  - csharp
  - vb
  name: Delete(UInt64)
  nameWithType: PedStreamer.Delete(UInt64)
  fullName: Altv_Roleplay.EntityStreamer.PedStreamer.Delete(System.UInt64)
  type: Method
  source:
    remote:
      path: Server/Altv-Roleplay/EntityStreamer/PedManager.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Delete
    path: EntityStreamer/PedManager.cs
    startLine: 121
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.EntityStreamer
  syntax:
    content: public static bool Delete(ulong dynamicObjectId)
    parameters:
    - id: dynamicObjectId
      type: System.UInt64
    return:
      type: System.Boolean
    content.vb: Public Shared Function Delete(dynamicObjectId As ULong) As Boolean
  overload: Altv_Roleplay.EntityStreamer.PedStreamer.Delete*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Altv_Roleplay.EntityStreamer.PedStreamer.Delete(Altv_Roleplay.EntityStreamer.Ped)
  commentId: M:Altv_Roleplay.EntityStreamer.PedStreamer.Delete(Altv_Roleplay.EntityStreamer.Ped)
  id: Delete(Altv_Roleplay.EntityStreamer.Ped)
  parent: Altv_Roleplay.EntityStreamer.PedStreamer
  langs:
  - csharp
  - vb
  name: Delete(Ped)
  nameWithType: PedStreamer.Delete(Ped)
  fullName: Altv_Roleplay.EntityStreamer.PedStreamer.Delete(Altv_Roleplay.EntityStreamer.Ped)
  type: Method
  source:
    remote:
      path: Server/Altv-Roleplay/EntityStreamer/PedManager.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: Delete
    path: EntityStreamer/PedManager.cs
    startLine: 132
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.EntityStreamer
  syntax:
    content: public static void Delete(Ped obj)
    parameters:
    - id: obj
      type: Altv_Roleplay.EntityStreamer.Ped
    content.vb: Public Shared Sub Delete(obj As Ped)
  overload: Altv_Roleplay.EntityStreamer.PedStreamer.Delete*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Altv_Roleplay.EntityStreamer.PedStreamer.GetPed(System.UInt64)
  commentId: M:Altv_Roleplay.EntityStreamer.PedStreamer.GetPed(System.UInt64)
  id: GetPed(System.UInt64)
  parent: Altv_Roleplay.EntityStreamer.PedStreamer
  langs:
  - csharp
  - vb
  name: GetPed(UInt64)
  nameWithType: PedStreamer.GetPed(UInt64)
  fullName: Altv_Roleplay.EntityStreamer.PedStreamer.GetPed(System.UInt64)
  type: Method
  source:
    remote:
      path: Server/Altv-Roleplay/EntityStreamer/PedManager.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: GetPed
    path: EntityStreamer/PedManager.cs
    startLine: 138
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.EntityStreamer
  syntax:
    content: public static Ped GetPed(ulong dynamicObjectId)
    parameters:
    - id: dynamicObjectId
      type: System.UInt64
    return:
      type: Altv_Roleplay.EntityStreamer.Ped
    content.vb: Public Shared Function GetPed(dynamicObjectId As ULong) As Ped
  overload: Altv_Roleplay.EntityStreamer.PedStreamer.GetPed*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Altv_Roleplay.EntityStreamer.PedStreamer.DestroyAllPeds
  commentId: M:Altv_Roleplay.EntityStreamer.PedStreamer.DestroyAllPeds
  id: DestroyAllPeds
  parent: Altv_Roleplay.EntityStreamer.PedStreamer
  langs:
  - csharp
  - vb
  name: DestroyAllPeds()
  nameWithType: PedStreamer.DestroyAllPeds()
  fullName: Altv_Roleplay.EntityStreamer.PedStreamer.DestroyAllPeds()
  type: Method
  source:
    remote:
      path: Server/Altv-Roleplay/EntityStreamer/PedManager.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: DestroyAllPeds
    path: EntityStreamer/PedManager.cs
    startLine: 152
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.EntityStreamer
  syntax:
    content: public static void DestroyAllPeds()
    content.vb: Public Shared Sub DestroyAllPeds
  overload: Altv_Roleplay.EntityStreamer.PedStreamer.DestroyAllPeds*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Altv_Roleplay.EntityStreamer.PedStreamer.GetAllPeds
  commentId: M:Altv_Roleplay.EntityStreamer.PedStreamer.GetAllPeds
  id: GetAllPeds
  parent: Altv_Roleplay.EntityStreamer.PedStreamer
  langs:
  - csharp
  - vb
  name: GetAllPeds()
  nameWithType: PedStreamer.GetAllPeds()
  fullName: Altv_Roleplay.EntityStreamer.PedStreamer.GetAllPeds()
  type: Method
  source:
    remote:
      path: Server/Altv-Roleplay/EntityStreamer/PedManager.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: GetAllPeds
    path: EntityStreamer/PedManager.cs
    startLine: 160
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.EntityStreamer
  syntax:
    content: public static List<Ped> GetAllPeds()
    return:
      type: System.Collections.Generic.List{Altv_Roleplay.EntityStreamer.Ped}
    content.vb: Public Shared Function GetAllPeds As List(Of Ped)
  overload: Altv_Roleplay.EntityStreamer.PedStreamer.GetAllPeds*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Altv_Roleplay.EntityStreamer.PedStreamer.GetClosestPed(System.Numerics.Vector3)
  commentId: M:Altv_Roleplay.EntityStreamer.PedStreamer.GetClosestPed(System.Numerics.Vector3)
  id: GetClosestPed(System.Numerics.Vector3)
  parent: Altv_Roleplay.EntityStreamer.PedStreamer
  langs:
  - csharp
  - vb
  name: GetClosestPed(Vector3)
  nameWithType: PedStreamer.GetClosestPed(Vector3)
  fullName: Altv_Roleplay.EntityStreamer.PedStreamer.GetClosestPed(System.Numerics.Vector3)
  type: Method
  source:
    remote:
      path: Server/Altv-Roleplay/EntityStreamer/PedManager.cs
      branch: master
      repo: https://xore@dev.azure.com/xore/Nightout-Gaming/_git/Nightout-Gaming
    id: GetClosestPed
    path: EntityStreamer/PedManager.cs
    startLine: 173
  assemblies:
  - NightOut-Gaming
  namespace: Altv_Roleplay.EntityStreamer
  syntax:
    content: public static (Ped obj, float distance) GetClosestPed(Vector3 pos)
    parameters:
    - id: pos
      type: System.Numerics.Vector3
    return:
      type: System.ValueTuple{Altv_Roleplay.EntityStreamer.Ped,System.Single}
    content.vb: Public Shared Function GetClosestPed(pos As Vector3) As(obj As Ped, distance As Single)(Of Ped , Single)
  overload: Altv_Roleplay.EntityStreamer.PedStreamer.GetClosestPed*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Altv_Roleplay.EntityStreamer
  commentId: N:Altv_Roleplay.EntityStreamer
  name: Altv_Roleplay.EntityStreamer
  nameWithType: Altv_Roleplay.EntityStreamer
  fullName: Altv_Roleplay.EntityStreamer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Altv_Roleplay.EntityStreamer.PedStreamer.Create*
  commentId: Overload:Altv_Roleplay.EntityStreamer.PedStreamer.Create
  name: Create
  nameWithType: PedStreamer.Create
  fullName: Altv_Roleplay.EntityStreamer.PedStreamer.Create
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Numerics.Vector3
  commentId: T:System.Numerics.Vector3
  parent: System.Numerics
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: System.Numerics.Vector3
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Altv_Roleplay.EntityStreamer.Ped
  commentId: T:Altv_Roleplay.EntityStreamer.Ped
  parent: Altv_Roleplay.EntityStreamer
  name: Ped
  nameWithType: Ped
  fullName: Altv_Roleplay.EntityStreamer.Ped
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
- uid: Altv_Roleplay.EntityStreamer.PedStreamer.Delete*
  commentId: Overload:Altv_Roleplay.EntityStreamer.PedStreamer.Delete
  name: Delete
  nameWithType: PedStreamer.Delete
  fullName: Altv_Roleplay.EntityStreamer.PedStreamer.Delete
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Altv_Roleplay.EntityStreamer.PedStreamer.GetPed*
  commentId: Overload:Altv_Roleplay.EntityStreamer.PedStreamer.GetPed
  name: GetPed
  nameWithType: PedStreamer.GetPed
  fullName: Altv_Roleplay.EntityStreamer.PedStreamer.GetPed
- uid: Altv_Roleplay.EntityStreamer.PedStreamer.DestroyAllPeds*
  commentId: Overload:Altv_Roleplay.EntityStreamer.PedStreamer.DestroyAllPeds
  name: DestroyAllPeds
  nameWithType: PedStreamer.DestroyAllPeds
  fullName: Altv_Roleplay.EntityStreamer.PedStreamer.DestroyAllPeds
- uid: Altv_Roleplay.EntityStreamer.PedStreamer.GetAllPeds*
  commentId: Overload:Altv_Roleplay.EntityStreamer.PedStreamer.GetAllPeds
  name: GetAllPeds
  nameWithType: PedStreamer.GetAllPeds
  fullName: Altv_Roleplay.EntityStreamer.PedStreamer.GetAllPeds
- uid: System.Collections.Generic.List{Altv_Roleplay.EntityStreamer.Ped}
  commentId: T:System.Collections.Generic.List{Altv_Roleplay.EntityStreamer.Ped}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Ped>
  nameWithType: List<Ped>
  fullName: System.Collections.Generic.List<Altv_Roleplay.EntityStreamer.Ped>
  nameWithType.vb: List(Of Ped)
  fullName.vb: System.Collections.Generic.List(Of Altv_Roleplay.EntityStreamer.Ped)
  name.vb: List(Of Ped)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.EntityStreamer.Ped
    name: Ped
    nameWithType: Ped
    fullName: Altv_Roleplay.EntityStreamer.Ped
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.EntityStreamer.Ped
    name: Ped
    nameWithType: Ped
    fullName: Altv_Roleplay.EntityStreamer.Ped
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Altv_Roleplay.EntityStreamer.PedStreamer.GetClosestPed*
  commentId: Overload:Altv_Roleplay.EntityStreamer.PedStreamer.GetClosestPed
  name: GetClosestPed
  nameWithType: PedStreamer.GetClosestPed
  fullName: Altv_Roleplay.EntityStreamer.PedStreamer.GetClosestPed
- uid: System.ValueTuple{Altv_Roleplay.EntityStreamer.Ped,System.Single}
  commentId: T:System.ValueTuple{Altv_Roleplay.EntityStreamer.Ped,System.Single}
  parent: System
  definition: System.ValueTuple`2
  name: (T1, T2)<Ped, Single>
  nameWithType: (T1, T2)<Ped, Single>
  fullName: System.ValueTuple<Altv_Roleplay.EntityStreamer.Ped, System.Single>
  nameWithType.vb: (T1, T2)(Of Ped, Single)
  fullName.vb: System.ValueTuple(Of Altv_Roleplay.EntityStreamer.Ped, System.Single)
  name.vb: (T1, T2)(Of Ped, Single)
  spec.csharp:
  - uid: System.ValueTuple`2
    name: (T1, T2)
    nameWithType: (T1, T2)
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Altv_Roleplay.EntityStreamer.Ped
    name: Ped
    nameWithType: Ped
    fullName: Altv_Roleplay.EntityStreamer.Ped
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`2
    name: (T1, T2)
    nameWithType: (T1, T2)
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Altv_Roleplay.EntityStreamer.Ped
    name: Ped
    nameWithType: Ped
    fullName: Altv_Roleplay.EntityStreamer.Ped
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  isExternal: true
  name: (T1, T2)<T1, T2>
  nameWithType: (T1, T2)<T1, T2>
  fullName: System.ValueTuple<T1, T2>
  nameWithType.vb: (T1, T2)(Of T1, T2)
  fullName.vb: System.ValueTuple(Of T1, T2)
  name.vb: (T1, T2)(Of T1, T2)
  spec.csharp:
  - uid: System.ValueTuple`2
    name: (T1, T2)
    nameWithType: (T1, T2)
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`2
    name: (T1, T2)
    nameWithType: (T1, T2)
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
